openapi: 3.0.2
info:
  contact:
    email: developers@etsy.com
  description: <div class="wt-text-body-01"><p class="wt-pt-xs-2 wt-pb-xs-2">Etsy's
    Open API provides a simple RESTful interface for various Etsy.com features. The
    API endpoints are meant to replace Etsy's Open API v2, which is scheduled to end
    service in 2022.</p><p class="wt-pb-xs-2">All of the endpoints are callable and
    the majority of the API endpoints are now in a beta phase. This means we do not
    expect to make any breaking changes before our general release. A handful of endpoints
    are currently interface stubs (labeled “Feedback Only”) and returns a "501 Not
    Implemented" response code when called.</p><p class="wt-pb-xs-2">If you'd like
    to report an issue or provide feedback on the API design, <a target="_blank" class="wt-text-link
    wt-p-xs-0" href="https://github.com/etsy/open-api/discussions">please add an issue
    in Github</a>.</p></div>&copy; 2021-2023 Etsy, Inc. All Rights Reserved. Use of
    this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank'
    href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.
  termsOfService: https://www.etsy.com/legal/api
  title: Etsy Open API v3
  version: 3.0.0
servers:
- description: Base URL for all Open API endpoints.
  url: https://openapi.etsy.com
security:
- api_key: []
tags:
- name: User
- name: UserAddress
- name: Shop Receipt Transactions
- name: Other
- name: Shop
- name: Shop ShippingProfile
- name: Shop Section
- name: ShopListing
- name: Shop ProductionPartner
- name: Shop Return Policy
- name: SellerTaxonomy
- name: Review
- name: Shop Receipt
- name: Payment
- name: Ledger Entry
- name: ShopListing Video
- name: ShopListing VariationImage
- name: ShopListing Translation
- name: ShopListing Inventory
- name: ShopListing Offering
- name: ShopListing Product
- name: ShopListing Image
- name: ShopListing File
- name: BuyerTaxonomy
paths:
  /v3/application/buyer-taxonomy/nodes:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves the full hierarchy tree of buyer taxonomy nodes.
      operationId: getBuyerTaxonomyNodes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuyerTaxonomyNodes'
          description: List the full hierarchy tree of buyer taxonomy nodes.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - BuyerTaxonomy
      x-accepts: application/json
  /v3/application/buyer-taxonomy/nodes/{taxonomy_id}/properties:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves a list of product properties, with applicable scales and values, supported for a specific buyer taxonomy ID.
      operationId: getPropertiesByBuyerTaxonomyId
      parameters:
      - description: 'The unique numeric ID of an Etsy taxonomy node, which is a metadata
          category for listings organized into the seller taxonomy hierarchy tree.
          For example, the "shoes" taxonomy node (ID: 1429, level: 1) is higher in
          the hierarchy than "girls'' shoes" (ID: 1440, level: 2). The taxonomy nodes
          assigned to a listing support access to specific standardized product scales
          and properties. For example, listings assigned the taxonomy nodes "shoes"
          or "girls'' shoes" support access to the "EU" shoe size scale with its associated
          property names and IDs for EU shoe sizes, such as property `value_id`:"1394",
          and `name`:"38".'
        explode: false
        in: path
        name: taxonomy_id
        required: true
        schema:
          description: 'The unique numeric ID of an Etsy taxonomy node, which is a
            metadata category for listings organized into the seller taxonomy hierarchy
            tree. For example, the "shoes" taxonomy node (ID: 1429, level: 1) is higher
            in the hierarchy than "girls'' shoes" (ID: 1440, level: 2). The taxonomy
            nodes assigned to a listing support access to specific standardized product
            scales and properties. For example, listings assigned the taxonomy nodes
            "shoes" or "girls'' shoes" support access to the "EU" shoe size scale
            with its associated property names and IDs for EU shoe sizes, such as
            property `value_id`:"1394", and `name`:"38".'
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuyerTaxonomyNodeProperties'
          description: A list of product properties, with applicable scales and values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - BuyerTaxonomy
      x-accepts: application/json
  /v3/application/shops/{shop_id}/listings:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Endpoint to list Listings that belong to a Shop. Listings can be filtered using the 'state' param.
      operationId: getListingsByShop
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: 'When _updating_ a listing, this value can be either `active`
          or `inactive`. Note: Setting a `draft` listing to `active` will also publish
          the listing on etsy.com and requires that the listing have an image set.
          Setting a `sold_out` listing to active will update the quantity to 1 and
          renew the listing on etsy.com.'
        explode: true
        in: query
        name: state
        required: false
        schema:
          default: active
          description: 'When _updating_ a listing, this value can be either `active`
            or `inactive`. Note: Setting a `draft` listing to `active` will also publish
            the listing on etsy.com and requires that the listing have an image set.
            Setting a `sold_out` listing to active will update the quantity to 1 and
            renew the listing on etsy.com.'
          enum:
          - active
          - inactive
          - sold_out
          - draft
          - expired
          type: string
        style: form
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The number of records to skip before selecting the first result.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: The number of records to skip before selecting the first result.
          minimum: 0
          type: integer
        style: form
      - description: 'The value to sort a search result of listings on. NOTES: a)
          `sort_on` only works when combined with one of the search options (keywords,
          region, etc.). b) when using `score` the returned results will always be
          in _descending_ order, regardless of the `sort_order` parameter.'
        explode: true
        in: query
        name: sort_on
        required: false
        schema:
          default: created
          description: 'The value to sort a search result of listings on. NOTES: a)
            `sort_on` only works when combined with one of the search options (keywords,
            region, etc.). b) when using `score` the returned results will always
            be in _descending_ order, regardless of the `sort_order` parameter.'
          enum:
          - created
          - price
          - updated
          - score
          type: string
        style: form
      - description: 'The ascending(up) or descending(down) order to sort listings
          by. NOTE: sort_order only works when combined with one of the search options
          (keywords, region, etc.).'
        explode: true
        in: query
        name: sort_order
        required: false
        schema:
          default: desc
          description: 'The ascending(up) or descending(down) order to sort listings
            by. NOTE: sort_order only works when combined with one of the search options
            (keywords, region, etc.).'
          enum:
          - asc
          - ascending
          - desc
          - descending
          - up
          - down
          type: string
        style: form
      - description: An enumerated string that attaches a valid association. Acceptable
          inputs are 'Shipping', 'Shop', 'Images', 'User', 'Translations' and 'Inventory'.
        explode: true
        in: query
        name: includes
        required: false
        schema:
          description: An enumerated string that attaches a valid association. Acceptable
            inputs are 'Shipping', 'Shop', 'Images', 'User', 'Translations' and 'Inventory'.
          items:
            enum:
            - Shipping
            - Images
            - Shop
            - User
            - Translations
            - Inventory
            - Videos
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopListingsWithAssociations'
          description: A list of Listings
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - listings_r
      tags:
      - ShopListing
      x-accepts: application/json
    post:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Creates a physical draft [listing](/documentation/reference#tag/ShopListing) product in a shop on the Etsy channel.
      operationId: createDraftListing
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                quantity:
                  description: 'The positive non-zero number of products available
                    for purchase in the listing. Note: The listing quantity is the
                    sum of available offering quantities. You can request the quantities
                    for individual offerings from the ListingInventory resource using
                    the [getListingInventory](/documentation/reference#operation/getListingInventory)
                    endpoint.'
                  type: integer
                title:
                  description: 'The listing''s title string. When creating or updating
                    a listing, valid title strings contain only letters, numbers,
                    punctuation marks, mathematical symbols, whitespace characters,
                    ™, ©, and ®. (regex: /[^\p{L}\p{Nd}\p{P}\p{Sm}\p{Zs}™©®]/u) You
                    can only use the %, :, & and + characters once each.'
                  type: string
                description:
                  description: A description string of the product for sale in the
                    listing.
                  type: string
                price:
                  description: 'The positive non-zero price of the product. (Sold
                    product listings are private) Note: The price is the minimum possible
                    price. The [`getListingInventory`](/documentation/reference/#operation/getListingInventory)
                    method requests exact prices for available offerings.'
                  format: float
                  type: number
                who_made:
                  description: An enumerated string indicating who made the product.
                    Helps buyers locate the listing under the Handmade heading. Requires
                    'is_supply' and 'when_made'.
                  enum:
                  - i_did
                  - someone_else
                  - collective
                  type: string
                when_made:
                  description: An enumerated string for the era in which the maker
                    made the product in this listing. Helps buyers locate the listing
                    under the Vintage heading. Requires 'is_supply' and 'who_made'.
                  enum:
                  - made_to_order
                  - 2020_2023
                  - 2010_2019
                  - 2004_2009
                  - before_2004
                  - 2000_2003
                  - 1990s
                  - 1980s
                  - 1970s
                  - 1960s
                  - 1950s
                  - 1940s
                  - 1930s
                  - 1920s
                  - 1910s
                  - 1900s
                  - 1800s
                  - 1700s
                  - before_1700
                  type: string
                taxonomy_id:
                  description: The numerical taxonomy ID of the listing. See [SellerTaxonomy](/documentation/reference#tag/SellerTaxonomy)
                    and [BuyerTaxonomy](/documentation/reference#tag/BuyerTaxonomy)
                    for more information.
                  minimum: 1
                  type: integer
                shipping_profile_id:
                  description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
                    associated with the listing. Required when listing type is `physical`.
                  minimum: 1
                  nullable: true
                  type: integer
                return_policy_id:
                  description: The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
                  minimum: 1
                  nullable: true
                  type: integer
                materials:
                  description: 'A list of material strings for materials used in the
                    product. Valid materials strings contain only letters, numbers,
                    and whitespace characters. (regex: /[^\p{L}\p{Nd}\p{Zs}]/u) Default
                    value is null.'
                  items:
                    type: string
                  nullable: true
                  type: array
                shop_section_id:
                  description: The numeric ID of the [shop section](/documentation/reference#tag/Shop-Section)
                    for this listing. Default value is null.
                  minimum: 1
                  nullable: true
                  type: integer
                processing_min:
                  description: The minimum number of days required to process this
                    listing. Default value is null.
                  nullable: true
                  type: integer
                processing_max:
                  description: The maximum number of days required to process this
                    listing. Default value is null.
                  nullable: true
                  type: integer
                tags:
                  description: 'A comma-separated list of tag strings for the listing.
                    When creating or updating a listing, valid tag strings contain
                    only letters, numbers, whitespace characters, -, '', ™, ©, and
                    ®. (regex: /[^\p{L}\p{Nd}\p{Zs}\-''™©®]/u) Default value is null.'
                  items:
                    type: string
                  nullable: true
                  type: array
                styles:
                  description: 'An array of style strings for this listing, each of
                    which is free-form text string such as "Formal", or "Steampunk".
                    When creating or updating a listing, the listing may have up to
                    two styles. Valid style strings contain only letters, numbers,
                    and whitespace characters. (regex: /[^\p{L}\p{Nd}\p{Zs}]/u) Default
                    value is null.'
                  items:
                    type: string
                  nullable: true
                  type: array
                item_weight:
                  description: The numeric weight of the product measured in units
                    set in 'item_weight_unit'. Default value is null. If set, the
                    value must be greater than 0.
                  format: float
                  maximum: 1.79769313486E+308
                  minimum: 0
                  nullable: true
                  type: number
                item_length:
                  description: The numeric length of the product measured in units
                    set in 'item_dimensions_unit'. Default value is null. If set,
                    the value must be greater than 0.
                  format: float
                  maximum: 1.79769313486E+308
                  minimum: 0
                  nullable: true
                  type: number
                item_width:
                  description: The numeric width of the product measured in units
                    set in 'item_dimensions_unit'. Default value is null. If set,
                    the value must be greater than 0.
                  format: float
                  maximum: 1.79769313486E+308
                  minimum: 0
                  nullable: true
                  type: number
                item_height:
                  description: The numeric height of the product measured in units
                    set in 'item_dimensions_unit'. Default value is null. If set,
                    the value must be greater than 0.
                  format: float
                  maximum: 1.79769313486E+308
                  minimum: 0
                  nullable: true
                  type: number
                item_weight_unit:
                  description: A string defining the units used to measure the weight
                    of the product. Default value is null.
                  enum:
                  - oz
                  - lb
                  - g
                  - kg
                  nullable: true
                  type: string
                item_dimensions_unit:
                  description: A string defining the units used to measure the dimensions
                    of the product. Default value is null.
                  enum:
                  - in
                  - ft
                  - mm
                  - cm
                  - m
                  - yd
                  - inches
                  nullable: true
                  type: string
                is_personalizable:
                  description: When true, this listing is personalizable. The default
                    value is null.
                  type: boolean
                personalization_is_required:
                  description: When true, this listing requires personalization. The
                    default value is null. Will only change if is_personalizable is
                    'true'.
                  type: boolean
                personalization_char_count_max:
                  description: This is an integer value representing the maximum length
                    for the personalization message entered by the buyer. Will only
                    change if is_personalizable is 'true'.
                  type: integer
                personalization_instructions:
                  description: A string representing instructions for the buyer to
                    enter the personalization. Will only change if is_personalizable
                    is 'true'.
                  type: string
                production_partner_ids:
                  description: An array of unique IDs of production partner ids.
                  items:
                    minimum: 1
                    type: integer
                  nullable: true
                  type: array
                image_ids:
                  description: An array of numeric image IDs of the images in a listing,
                    which can include up to 10 images.
                  items:
                    minimum: 1
                    type: integer
                  nullable: true
                  type: array
                is_supply:
                  description: When true, tags the listing as a supply product, else
                    indicates that it's a finished product. Helps buyers locate the
                    listing under the Supplies heading. Requires 'who_made' and 'when_made'.
                  type: boolean
                is_customizable:
                  description: When true, a buyer may contact the seller for a customized
                    order. The default value is true when a shop accepts custom orders.
                    Does not apply to shops that do not accept custom orders.
                  type: boolean
                should_auto_renew:
                  description: When true, renews a listing for four months upon expiration.
                  type: boolean
                is_taxable:
                  description: When true, applicable [shop](/documentation/reference#tag/Shop)
                    tax rates apply to this listing at checkout.
                  type: boolean
                type:
                  description: An enumerated type string that indicates whether the
                    listing is physical or a digital download.
                  enum:
                  - physical
                  - download
                  - both
                  type: string
              required:
              - description
              - price
              - quantity
              - taxonomy_id
              - title
              - when_made
              - who_made
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopListing'
          description: A single ShopListing
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - listings_w
      tags:
      - ShopListing
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /v3/application/listings/{listing_id}:
    delete:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Open API V3 endpoint to delete a ShopListing. A ShopListing can be deleted only if the state is one of the following:  SOLD_OUT, DRAFT, EXPIRED, INACTIVE, ACTIVE and is_available or ACTIVE and has seller flags:  SUPRESSED (frozen), VACATION, CUSTOM_SHOPS (pattern), SELL_ON_FACEBOOK
      operationId: deleteListing
      parameters:
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a request conflict with the current state of the
            target resource. See the error message for details.
        "204":
          description: The Listing resource was correctly deleted
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - listings_d
      tags:
      - ShopListing
      x-accepts: application/json
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves a listing record by listing ID.
      operationId: getListing
      parameters:
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      - description: An enumerated string that attaches a valid association. Acceptable
          inputs are 'Shipping', 'Shop', 'Images', 'User', 'Translations' and 'Inventory'.
        explode: true
        in: query
        name: includes
        required: false
        schema:
          description: An enumerated string that attaches a valid association. Acceptable
            inputs are 'Shipping', 'Shop', 'Images', 'User', 'Translations' and 'Inventory'.
          items:
            enum:
            - Shipping
            - Images
            - Shop
            - User
            - Translations
            - Inventory
            - Videos
            type: string
          type: array
        style: form
      - description: 'The IETF language tag for the language of this translation.
          Ex: `de`, `en`, `es`, `fr`, `it`, `ja`, `nl`, `pl`, `pt`.'
        explode: true
        in: query
        name: language
        required: false
        schema:
          default: "null"
          description: 'The IETF language tag for the language of this translation.
            Ex: `de`, `en`, `es`, `fr`, `it`, `ja`, `nl`, `pl`, `pt`.'
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopListingWithAssociations'
          description: A single Listing.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - ShopListing
      x-accepts: application/json
  /v3/application/shops/{shop_id}/listings/{listing_id}/files/{listing_file_id}:
    delete:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Deletes a file from a specific listing. When you delete the final file for a digital listing, the listing converts into a physical listing. The response to a delete request returns a list of the remaining file records associated with the given listing.
      operationId: deleteListingFile
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      - description: The unique numeric ID of a file associated with a digital listing.
        explode: false
        in: path
        name: listing_file_id
        required: true
        schema:
          description: The unique numeric ID of a file associated with a digital listing.
          minimum: 1
          type: integer
        style: simple
      responses:
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a request conflict with the current state of the
            target resource. See the error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "204":
          description: The ShopListingFile resource was correctly deleted
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - listings_w
      tags:
      - ShopListing File
      x-accepts: application/json
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves a single file associated with the given digital listing. Requesting a file from a physical listing returns an empty result.
      operationId: getListingFile
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      - description: The unique numeric ID of a file associated with a digital listing.
        explode: false
        in: path
        name: listing_file_id
        required: true
        schema:
          description: The unique numeric ID of a file associated with a digital listing.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopListingFile'
          description: The metatdata for a file associated with a digital listing.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - listings_r
      tags:
      - ShopListing File
      x-accepts: application/json
  /v3/application/shops/{shop_id}/listings/{listing_id}/files:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves all the files associated with the given digital listing. Requesting files from a physical listing returns an empty result.
      operationId: getAllListingFiles
      parameters:
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopListingFiles'
          description: A list of metadata objects for the file resources associated
            with a listing.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - listings_r
      tags:
      - ShopListing File
      x-accepts: application/json
    post:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Uploads a new file for a digital listing, or associates an existing file with a specific listing. You must either provide the `listing_file_id` of an existing file, or the name and binary file data for a file to upload. Associating an existing file to a physical listing converts the physical listing into a digital listing, which removes all shipping costs and any product and inventory variations.
      operationId: uploadListingFile
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_1'
        content:
          multipart/form-data:
            schema:
              properties:
                listing_file_id:
                  description: The unique numeric ID of a file associated with a digital
                    listing.
                  minimum: 1
                  type: integer
                file:
                  description: A binary file to upload.
                  format: binary
                  nullable: true
                  type: string
                name:
                  description: The file name string of a file to upload
                  type: string
                rank:
                  default: 1
                  description: The positive non-zero numeric position in the images
                    displayed in a listing, with rank 1 images appearing in the left-most
                    position in a listing.
                  minimum: 1
                  type: integer
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopListingFile'
          description: The metadata for a file associated with a digital listing.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - listings_w
      tags:
      - ShopListing File
      x-contentType: multipart/form-data
      x-accepts: application/json
  /v3/application/listings/active:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        A list of all active listings on Etsy paginated by their creation date. Without sort_order listings will be returned newest-first by default.
      operationId: findAllListingsActive
      parameters:
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The number of records to skip before selecting the first result.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: The number of records to skip before selecting the first result.
          minimum: 0
          type: integer
        style: form
      - description: Search term or phrase that must appear in all results.
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          default: "null"
          description: Search term or phrase that must appear in all results.
          type: string
        style: form
      - description: 'The value to sort a search result of listings on. NOTES: a)
          `sort_on` only works when combined with one of the search options (keywords,
          region, etc.). b) when using `score` the returned results will always be
          in _descending_ order, regardless of the `sort_order` parameter.'
        explode: true
        in: query
        name: sort_on
        required: false
        schema:
          default: created
          description: 'The value to sort a search result of listings on. NOTES: a)
            `sort_on` only works when combined with one of the search options (keywords,
            region, etc.). b) when using `score` the returned results will always
            be in _descending_ order, regardless of the `sort_order` parameter.'
          enum:
          - created
          - price
          - updated
          - score
          type: string
        style: form
      - description: 'The ascending(up) or descending(down) order to sort listings
          by. NOTE: sort_order only works when combined with one of the search options
          (keywords, region, etc.).'
        explode: true
        in: query
        name: sort_order
        required: false
        schema:
          default: desc
          description: 'The ascending(up) or descending(down) order to sort listings
            by. NOTE: sort_order only works when combined with one of the search options
            (keywords, region, etc.).'
          enum:
          - asc
          - ascending
          - desc
          - descending
          - up
          - down
          type: string
        style: form
      - description: The minimum price of listings to be returned by a search result.
        explode: true
        in: query
        name: min_price
        required: false
        schema:
          description: The minimum price of listings to be returned by a search result.
          format: float
          type: number
        style: form
      - description: The maximum price of listings to be returned by a search result.
        explode: true
        in: query
        name: max_price
        required: false
        schema:
          description: The maximum price of listings to be returned by a search result.
          format: float
          type: number
        style: form
      - description: The numerical taxonomy ID of the listing. See [SellerTaxonomy](/documentation/reference#tag/SellerTaxonomy)
          and [BuyerTaxonomy](/documentation/reference#tag/BuyerTaxonomy) for more
          information.
        explode: true
        in: query
        name: taxonomy_id
        required: false
        schema:
          description: The numerical taxonomy ID of the listing. See [SellerTaxonomy](/documentation/reference#tag/SellerTaxonomy)
            and [BuyerTaxonomy](/documentation/reference#tag/BuyerTaxonomy) for more
            information.
          minimum: 1
          type: integer
        style: form
      - description: Filters by shop location. If location cannot be parsed, Etsy
          responds with an error.
        explode: true
        in: query
        name: shop_location
        required: false
        schema:
          default: "null"
          description: Filters by shop location. If location cannot be parsed, Etsy
            responds with an error.
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopListings'
          description: A list of all active listings on Etsy paginated by their creation
            date. Without sort_order listings will be returned newest-first by default.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - ShopListing
      x-accepts: application/json
  /v3/application/shops/{shop_id}/listings/active:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves a list of all active listings on Etsy in a specific shop, paginated by listing creation date.
      operationId: findAllActiveListingsByShop
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: 'The value to sort a search result of listings on. NOTES: a)
          `sort_on` only works when combined with one of the search options (keywords,
          region, etc.). b) when using `score` the returned results will always be
          in _descending_ order, regardless of the `sort_order` parameter.'
        explode: true
        in: query
        name: sort_on
        required: false
        schema:
          default: created
          description: 'The value to sort a search result of listings on. NOTES: a)
            `sort_on` only works when combined with one of the search options (keywords,
            region, etc.). b) when using `score` the returned results will always
            be in _descending_ order, regardless of the `sort_order` parameter.'
          enum:
          - created
          - price
          - updated
          - score
          type: string
        style: form
      - description: 'The ascending(up) or descending(down) order to sort listings
          by. NOTE: sort_order only works when combined with one of the search options
          (keywords, region, etc.).'
        explode: true
        in: query
        name: sort_order
        required: false
        schema:
          default: desc
          description: 'The ascending(up) or descending(down) order to sort listings
            by. NOTE: sort_order only works when combined with one of the search options
            (keywords, region, etc.).'
          enum:
          - asc
          - ascending
          - desc
          - descending
          - up
          - down
          type: string
        style: form
      - description: The number of records to skip before selecting the first result.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: The number of records to skip before selecting the first result.
          minimum: 0
          type: integer
        style: form
      - description: Search term or phrase that must appear in all results.
        explode: true
        in: query
        name: keywords
        required: false
        schema:
          default: "null"
          description: Search term or phrase that must appear in all results.
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopListings'
          description: Retrieves a list of all active listings on Etsy in a specific
            shop, paginated by listing creation date.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - ShopListing
      x-accepts: application/json
  /v3/application/shops/{shop_id}/listings/{listing_id}/images/{listing_image_id}:
    delete:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Open API V3 endpoint to delete a listing image. A copy of the file remains on our servers, and so a deleted image may be re-associated with the listing without re-uploading the original image; see uploadListingImage.
      operationId: deleteListingImage
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image)
          for this transaction.
        explode: false
        in: path
        name: listing_image_id
        required: true
        schema:
          description: The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image)
            for this transaction.
          minimum: 1
          type: integer
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "204":
          description: The ListingImage resource was correctly deleted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - listings_w
      tags:
      - ShopListing Image
      x-accepts: application/json
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        NOTE: This endpoint is being deprecated in favor of not requiring the shops/:shop_id as part of the URL. Retrieves the references and metadata for a listing image with a specific image ID.
      operationId: getListingImageDeprecated
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image)
          for this transaction.
        explode: false
        in: path
        name: listing_image_id
        required: true
        schema:
          description: The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image)
            for this transaction.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingImage'
          description: A single ListingImage
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - ShopListing Image
      x-accepts: application/json
  /v3/application/listings/{listing_id}/images/{listing_image_id}:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves the references and metadata for a listing image with a specific image ID.
      operationId: getListingImage
      parameters:
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image)
          for this transaction.
        explode: false
        in: path
        name: listing_image_id
        required: true
        schema:
          description: The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image)
            for this transaction.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingImage'
          description: A single ListingImage
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - ShopListing Image
      x-accepts: application/json
  /v3/application/listings/{listing_id}/images:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves all listing image resources for a listing with a specific listing ID.
      operationId: getListingImages
      parameters:
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingImages'
          description: An array of ListingImage
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - ShopListing Image
      x-accepts: application/json
  /v3/application/shops/{shop_id}/listings/{listing_id}/images:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        NOTE: This endpoint is being deprecated in favor of not requiring the shops/:shop_id as part of the URL. Retrieves all listing image resources for a listing with a specific listing ID.
      operationId: getListingImagesDeprecated
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingImages'
          description: A single ListingImage
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - ShopListing Image
      x-accepts: application/json
    post:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Uploads or assigns an image to a listing identified by a shop ID with a listing ID. To upload a new image, set the image file as the value for the `image` parameter. You can assign a previously deleted image to a listing using the deleted image's image ID in the `listing_image_id` parameter. When a request contains both `image` and `listing_image_id` parameter values, the endpoint uploads the image in the `image` parameter only. Note: When uploading a new image, data such as colors and size may return as null values due to asynchronous processing of the image. Use getListingImage endpoint to fetch these values.
      operationId: uploadListingImage
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_2'
        content:
          multipart/form-data:
            schema:
              properties:
                image:
                  description: The file name string of a file to upload
                  format: binary
                  nullable: true
                  type: string
                listing_image_id:
                  description: The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image)
                    for this transaction.
                  minimum: 1
                  type: integer
                rank:
                  default: 1
                  description: The positive non-zero numeric position in the images
                    displayed in a listing, with rank 1 images appearing in the left-most
                    position in a listing.
                  minimum: 0
                  type: integer
                overwrite:
                  default: false
                  description: When true, this request replaces the existing image
                    at a given rank.
                  type: boolean
                is_watermarked:
                  default: false
                  description: When true, indicates that the uploaded image has a
                    watermark.
                  type: boolean
                alt_text:
                  default: ""
                  description: Alt text for the listing image. Max length 250 characters.
                  type: string
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingImage'
          description: A single ListingImage
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a request conflict with the current state of the
            target resource. See the error message for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - listings_w
      tags:
      - ShopListing Image
      x-contentType: multipart/form-data
      x-accepts: application/json
  /v3/application/listings/{listing_id}/inventory:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves the inventory record for a listing. Listings you did not edit using the Etsy.com inventory tools have no inventory records. This endpoint returns SKU data if you are the owner of the inventory records being fetched.
      operationId: getListingInventory
      parameters:
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      - description: A boolean value for inventory whether to include deleted products
          and their offerings. Default value is false.
        explode: true
        in: query
        name: show_deleted
        required: false
        schema:
          description: A boolean value for inventory whether to include deleted products
            and their offerings. Default value is false.
          type: boolean
        style: form
      - description: An enumerated string that attaches a valid association. Default
          value is null.
        explode: true
        in: query
        name: includes
        required: false
        schema:
          description: An enumerated string that attaches a valid association. Default
            value is null.
          enum:
          - Listing
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingInventoryWithAssociations'
          description: A single listing inventory record.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - listings_r
      tags:
      - ShopListing Inventory
      x-accepts: application/json
    put:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Updates the inventory for a listing identified by a listing ID. The update fails if the supplied values for product sku, offering quantity, and/or price are incompatible with values in `*_on_property_*` fields. When setting a price, assign a float equal to amount divided by divisor as specified in the Money resource.
      operationId: updateListingInventory
      parameters:
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_3'
        content:
          application/json:
            schema:
              properties:
                products:
                  description: A JSON array of products available in a listing, even
                    if only one product. All field names in the JSON blobs are lowercase.
                  items:
                    $ref: '#/components/schemas/_v3_application_listings__listing_id__inventory_products'
                  type: array
                price_on_property:
                  description: An array of unique [listing property](/documentation/reference#operation/getListingProperties)
                    ID integers for the properties that change product prices, if
                    any. For example, if you charge specific prices for different
                    sized products in the same listing, then this array contains the
                    property ID for size.
                  items:
                    type: integer
                  type: array
                quantity_on_property:
                  description: An array of unique [listing property](/documentation/reference#operation/getListingProperties)
                    ID integers for the properties that change the quantity of the
                    products, if any. For example, if you stock specific quantities
                    of different colored products in the same listing, then this array
                    contains the property ID for color.
                  items:
                    type: integer
                  type: array
                sku_on_property:
                  description: An array of unique [listing property](/documentation/reference#operation/getListingProperties)
                    ID integers for the properties that change the product SKU, if
                    any. For example, if you use specific skus for different colored
                    products in the same listing, then this array contains the property
                    ID for color.
                  items:
                    type: integer
                  type: array
              required:
              - products
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingInventory'
          description: A single listing's inventory record.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - listings_w
      tags:
      - ShopListing Inventory
      x-contentType: application/json
      x-accepts: application/json
  /v3/application/listings/{listing_id}/inventory/products/{product_id}:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Open API V3 endpoint to retrieve a ListingProduct by ID.
      operationId: getListingProduct
      parameters:
      - description: The listing to return a ListingProduct for.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The listing to return a ListingProduct for.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for a specific [product](/documentation/reference#tag/ShopListing-Product)
          purchased from a listing.
        explode: false
        in: path
        name: product_id
        required: true
        schema:
          description: The numeric ID for a specific [product](/documentation/reference#tag/ShopListing-Product)
            purchased from a listing.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingInventoryProduct'
          description: A single ListingInventoryProduct
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - listings_r
      tags:
      - ShopListing Product
      x-accepts: application/json
  /v3/application/listings/{listing_id}/products/{product_id}/offerings/{product_offering_id}:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Get an Offering for a Listing
      operationId: getListingOffering
      parameters:
      - explode: false
        in: path
        name: listing_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: product_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      - explode: false
        in: path
        name: product_offering_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingInventoryProductOffering'
          description: A single ListingInventoryProductOffering
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - ShopListing Offering
      x-accepts: application/json
  /v3/application/listings/batch:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Allows to query multiple listing ids at once. Limit 100 ids maximum per query.
      operationId: getListingsByListingIds
      parameters:
      - description: The list of numeric IDS for the listings in a specific Etsy shop.
        explode: true
        in: query
        name: listing_ids
        required: true
        schema:
          description: The list of numeric IDS for the listings in a specific Etsy
            shop.
          items:
            minimum: 1
            type: integer
          type: array
        style: form
      - description: An enumerated string that attaches a valid association. Acceptable
          inputs are 'Shipping', 'Shop', 'Images', 'User', 'Translations' and 'Inventory'.
        explode: true
        in: query
        name: includes
        required: false
        schema:
          description: An enumerated string that attaches a valid association. Acceptable
            inputs are 'Shipping', 'Shop', 'Images', 'User', 'Translations' and 'Inventory'.
          items:
            enum:
            - Shipping
            - Images
            - Shop
            - User
            - Translations
            - Inventory
            - Videos
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopListingsWithAssociations'
          description: A list of Listings
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - ShopListing
      x-accepts: application/json
  /v3/application/shops/{shop_id}/listings/featured:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves Listings associated to a Shop that are featured.
      operationId: getFeaturedListingsByShop
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The number of records to skip before selecting the first result.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: The number of records to skip before selecting the first result.
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopListings'
          description: A list of Listings
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - ShopListing
      x-accepts: application/json
  /v3/application/shops/{shop_id}/listings/{listing_id}/properties/{property_id}:
    delete:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Deletes a property for a Listing.
      operationId: deleteListingProperty
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      - description: The unique ID of an Etsy [listing property](/documentation/reference#operation/getListingProperties).
        explode: false
        in: path
        name: property_id
        required: true
        schema:
          description: The unique ID of an Etsy [listing property](/documentation/reference#operation/getListingProperties).
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          description: The ListingProperty resource was correctly deleted
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - listings_w
      tags:
      - ShopListing
      x-accepts: application/json
    put:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Updates or populates the properties list defining product offerings for a listing. Each offering requires both a `value` and a `value_id` that are valid for a `scale_id` assigned to the listing or that you assign to the listing with this request.
      operationId: updateListingProperty
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      - description: The unique ID of an Etsy [listing property](/documentation/reference#operation/getListingProperties).
        explode: false
        in: path
        name: property_id
        required: true
        schema:
          description: The unique ID of an Etsy [listing property](/documentation/reference#operation/getListingProperties).
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_4'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                value_ids:
                  description: An array of unique IDs of multiple Etsy [listing property](/documentation/reference#operation/getListingProperties)
                    values. For example, if your listing offers different sizes of
                    a product, then the value ID list contains value IDs for each
                    size.
                  items:
                    minimum: 1
                    type: integer
                  type: array
                values:
                  description: 'An array of value strings for multiple Etsy [listing
                    property](/documentation/reference#operation/getListingProperties)
                    values. For example, if your listing offers different colored
                    products, then the values array contains the color strings for
                    each color. Note: parenthesis characters (`(` and `)`) are not
                    allowed.'
                  items:
                    type: string
                  type: array
                scale_id:
                  description: The numeric ID of a single Etsy.com measurement scale.
                    For example, for shoe size, there are three `scale_id`s available
                    - `UK`, `US/Canada`, and `EU`, where `US/Canada` has `scale_id`
                    19.
                  minimum: 1
                  type: integer
              required:
              - value_ids
              - values
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingPropertyValue'
          description: A single listing property.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - listings_w
      tags:
      - ShopListing
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /v3/application/listings/{listing_id}/properties/{property_id}:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-01 wt-mr-xs-2"> Feedback only </span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Give feedback</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">Development for this endpoint is in progress. It will only return a 501 response.</p></div>

        Retrieves a listing's property
      operationId: getListingProperty
      parameters:
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      - description: The unique ID of an Etsy [listing property](/documentation/reference#operation/getListingProperties).
        explode: false
        in: path
        name: property_id
        required: true
        schema:
          description: The unique ID of an Etsy [listing property](/documentation/reference#operation/getListingProperties).
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingPropertyValue'
          description: A single ListingProperty.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "501":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: This endpoint is not functional at this time.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - ShopListing
      x-accepts: application/json
  /v3/application/shops/{shop_id}/listings/{listing_id}/properties:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Get a listing's properties
      operationId: getListingProperties
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingPropertyValues'
          description: A Listing's Properties
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - ShopListing
      x-accepts: application/json
  /v3/application/shops/{shop_id}/listings/{listing_id}/transactions:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves the list of transactions associated with a listing.
      operationId: getShopReceiptTransactionsByListing
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The number of records to skip before selecting the first result.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: The number of records to skip before selecting the first result.
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopReceiptTransactions'
          description: A list of transactions
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - transactions_r
      tags:
      - Shop Receipt Transactions
      x-accepts: application/json
  /v3/application/shops/{shop_id}/listings/{listing_id}/translations/{language}:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Get a Translation for a Listing in the given language
      operationId: getListingTranslation
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      - description: 'The IETF language tag for the language of this translation.
          Ex: `de`, `en`, `es`, `fr`, `it`, `ja`, `nl`, `pl`, `pt`.'
        explode: false
        in: path
        name: language
        required: true
        schema:
          description: 'The IETF language tag for the language of this translation.
            Ex: `de`, `en`, `es`, `fr`, `it`, `ja`, `nl`, `pl`, `pt`.'
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingTranslation'
          description: A single ListingTranslation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - ShopListing Translation
      x-accepts: application/json
    post:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Creates a ListingTranslation by listing_id and language
      operationId: createListingTranslation
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      - description: 'The IETF language tag for the language of this translation.
          Ex: `de`, `en`, `es`, `fr`, `it`, `ja`, `nl`, `pl`, `pt`.'
        explode: false
        in: path
        name: language
        required: true
        schema:
          description: 'The IETF language tag for the language of this translation.
            Ex: `de`, `en`, `es`, `fr`, `it`, `ja`, `nl`, `pl`, `pt`.'
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_6'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  description: The title of the Listing of this Translation.
                  type: string
                description:
                  description: The description of the Listing of this Translation.
                  type: string
                tags:
                  description: The tags of the Listing of this Translation.
                  items:
                    type: string
                  type: array
              required:
              - description
              - title
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingTranslation'
          description: A single ListingTranslation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - listings_w
      tags:
      - ShopListing Translation
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
    put:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Updates a ListingTranslation by listing_id and language
      operationId: updateListingTranslation
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      - description: 'The IETF language tag for the language of this translation.
          Ex: `de`, `en`, `es`, `fr`, `it`, `ja`, `nl`, `pl`, `pt`.'
        explode: false
        in: path
        name: language
        required: true
        schema:
          description: 'The IETF language tag for the language of this translation.
            Ex: `de`, `en`, `es`, `fr`, `it`, `ja`, `nl`, `pl`, `pt`.'
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_5'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  description: The title of the Listing of this Translation.
                  type: string
                description:
                  description: The description of the Listing of this Translation.
                  type: string
                tags:
                  description: The tags of the Listing of this Translation.
                  items:
                    type: string
                  type: array
              required:
              - description
              - title
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingTranslation'
          description: A single ListingTranslation
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - listings_w
      tags:
      - ShopListing Translation
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /v3/application/shops/{shop_id}/listings/{listing_id}:
    patch:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Updates a listing, identified by a listing ID, for a specific shop identified by a shop ID. Note that this is a PATCH method type.
      operationId: updateListing
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_8'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                image_ids:
                  description: An array of numeric image IDs of the images in a listing,
                    which can include up to 10 images.
                  items:
                    minimum: 1
                    type: integer
                  type: array
                title:
                  description: 'The listing''s title string. When creating or updating
                    a listing, valid title strings contain only letters, numbers,
                    punctuation marks, mathematical symbols, whitespace characters,
                    ™, ©, and ®. (regex: /[^\p{L}\p{Nd}\p{P}\p{Sm}\p{Zs}™©®]/u) You
                    can only use the %, :, & and + characters once each.'
                  type: string
                description:
                  description: A description string of the product for sale in the
                    listing.
                  type: string
                materials:
                  description: 'A list of material strings for materials used in the
                    product. Valid materials strings contain only letters, numbers,
                    and whitespace characters. (regex: /[^\p{L}\p{Nd}\p{Zs}]/u) Default
                    value is null.'
                  items:
                    type: string
                  nullable: true
                  type: array
                should_auto_renew:
                  description: When true, renews a listing for four months upon expiration.
                  type: boolean
                shipping_profile_id:
                  description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
                    associated with the listing. Required when listing type is `physical`.
                  minimum: 1
                  nullable: true
                  type: integer
                return_policy_id:
                  description: The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
                    Required for active physical listings. This requirement does not
                    apply to listings of EU-based shops.
                  minimum: 1
                  nullable: true
                  type: integer
                shop_section_id:
                  description: The numeric ID of the [shop section](/documentation/reference#tag/Shop-Section)
                    for this listing. Default value is null.
                  nullable: true
                  type: integer
                item_weight:
                  description: The numeric weight of the product measured in units
                    set in 'item_weight_unit'. Default value is null. If set, the
                    value must be greater than 0.
                  format: float
                  maximum: 1.79769313486E+308
                  minimum: 0
                  nullable: true
                  type: number
                item_length:
                  description: The numeric length of the product measured in units
                    set in 'item_dimensions_unit'. Default value is null. If set,
                    the value must be greater than 0.
                  format: float
                  maximum: 1.79769313486E+308
                  minimum: 0
                  nullable: true
                  type: number
                item_width:
                  description: The numeric width of the product measured in units
                    set in 'item_dimensions_unit'. Default value is null. If set,
                    the value must be greater than 0.
                  format: float
                  maximum: 1.79769313486E+308
                  minimum: 0
                  nullable: true
                  type: number
                item_height:
                  description: The numeric height of the product measured in units
                    set in 'item_dimensions_unit'. Default value is null. If set,
                    the value must be greater than 0.
                  format: float
                  maximum: 1.79769313486E+308
                  minimum: 0
                  nullable: true
                  type: number
                item_weight_unit:
                  description: A string defining the units used to measure the weight
                    of the product. Default value is null.
                  enum:
                  - ""
                  - oz
                  - lb
                  - g
                  - kg
                  nullable: true
                  type: string
                item_dimensions_unit:
                  description: A string defining the units used to measure the dimensions
                    of the product. Default value is null.
                  enum:
                  - ""
                  - in
                  - ft
                  - mm
                  - cm
                  - m
                  - yd
                  - inches
                  nullable: true
                  type: string
                is_taxable:
                  description: When true, applicable [shop](/documentation/reference#tag/Shop)
                    tax rates apply to this listing at checkout.
                  type: boolean
                taxonomy_id:
                  description: The numerical taxonomy ID of the listing. See [SellerTaxonomy](/documentation/reference#tag/SellerTaxonomy)
                    and [BuyerTaxonomy](/documentation/reference#tag/BuyerTaxonomy)
                    for more information.
                  minimum: 1
                  type: integer
                tags:
                  description: 'A comma-separated list of tag strings for the listing.
                    When creating or updating a listing, valid tag strings contain
                    only letters, numbers, whitespace characters, -, '', ™, ©, and
                    ®. (regex: /[^\p{L}\p{Nd}\p{Zs}\-''™©®]/u) Default value is null.'
                  items:
                    type: string
                  nullable: true
                  type: array
                who_made:
                  description: An enumerated string indicating who made the product.
                    Helps buyers locate the listing under the Handmade heading. Requires
                    'is_supply' and 'when_made'.
                  enum:
                  - i_did
                  - someone_else
                  - collective
                  type: string
                when_made:
                  description: An enumerated string for the era in which the maker
                    made the product in this listing. Helps buyers locate the listing
                    under the Vintage heading. Requires 'is_supply' and 'who_made'.
                  enum:
                  - made_to_order
                  - 2020_2023
                  - 2010_2019
                  - 2004_2009
                  - before_2004
                  - 2000_2003
                  - 1990s
                  - 1980s
                  - 1970s
                  - 1960s
                  - 1950s
                  - 1940s
                  - 1930s
                  - 1920s
                  - 1910s
                  - 1900s
                  - 1800s
                  - 1700s
                  - before_1700
                  type: string
                featured_rank:
                  description: The positive non-zero numeric position in the featured
                    listings of the shop, with rank 1 listings appearing in the left-most
                    position in featured listing on a shop’s home page.
                  nullable: true
                  type: integer
                is_personalizable:
                  description: When true, this listing is personalizable. The default
                    value is null.
                  type: boolean
                personalization_is_required:
                  description: When true, this listing requires personalization. The
                    default value is null. Will only change if is_personalizable is
                    'true'.
                  type: boolean
                personalization_char_count_max:
                  description: This is an integer value representing the maximum length
                    for the personalization message entered by the buyer. Will only
                    change if is_personalizable is 'true'.
                  type: integer
                personalization_instructions:
                  description: A string representing instructions for the buyer to
                    enter the personalization. Will only change if is_personalizable
                    is 'true'.
                  type: string
                state:
                  description: 'When _updating_ a listing, this value can be either
                    `active` or `inactive`. Note: Setting a `draft` listing to `active`
                    will also publish the listing on etsy.com and requires that the
                    listing have an image set. Setting a `sold_out` listing to active
                    will update the quantity to 1 and renew the listing on etsy.com.'
                  enum:
                  - active
                  - inactive
                  type: string
                is_supply:
                  description: When true, tags the listing as a supply product, else
                    indicates that it's a finished product. Helps buyers locate the
                    listing under the Supplies heading. Requires 'who_made' and 'when_made'.
                  type: boolean
                production_partner_ids:
                  description: An array of unique IDs of production partner ids.
                  items:
                    minimum: 1
                    type: integer
                  nullable: true
                  type: array
                type:
                  description: An enumerated type string that indicates whether the
                    listing is physical or a digital download.
                  enum:
                  - physical
                  - download
                  - both
                  nullable: true
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopListing'
          description: A single ShopListing
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a request conflict with the current state of the
            target resource. See the error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - listings_w
      tags:
      - ShopListing
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
    put:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Updates a listing, identified by a listing ID, for a specific shop identified by a shop ID. This endpoint will be removed in the near future in favor of `updateListing` PATCH version.
      operationId: updateListingDeprecated
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_7'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                image_ids:
                  description: An array of numeric image IDs of the images in a listing,
                    which can include up to 10 images.
                  items:
                    minimum: 1
                    type: integer
                  type: array
                title:
                  description: 'The listing''s title string. When creating or updating
                    a listing, valid title strings contain only letters, numbers,
                    punctuation marks, mathematical symbols, whitespace characters,
                    ™, ©, and ®. (regex: /[^\p{L}\p{Nd}\p{P}\p{Sm}\p{Zs}™©®]/u) You
                    can only use the %, :, & and + characters once each.'
                  type: string
                description:
                  description: A description string of the product for sale in the
                    listing.
                  type: string
                materials:
                  description: 'A list of material strings for materials used in the
                    product. Valid materials strings contain only letters, numbers,
                    and whitespace characters. (regex: /[^\p{L}\p{Nd}\p{Zs}]/u) Default
                    value is null.'
                  items:
                    type: string
                  nullable: true
                  type: array
                should_auto_renew:
                  description: When true, renews a listing for four months upon expiration.
                  type: boolean
                shipping_profile_id:
                  description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
                    associated with the listing. Required when listing type is `physical`.
                  minimum: 1
                  nullable: true
                  type: integer
                shop_section_id:
                  description: The numeric ID of the [shop section](/documentation/reference#tag/Shop-Section)
                    for this listing. Default value is null.
                  nullable: true
                  type: integer
                item_weight:
                  description: The numeric weight of the product measured in units
                    set in 'item_weight_unit'. Default value is null. If set, the
                    value must be greater than 0.
                  format: float
                  maximum: 1.79769313486E+308
                  minimum: 0
                  nullable: true
                  type: number
                item_length:
                  description: The numeric length of the product measured in units
                    set in 'item_dimensions_unit'. Default value is null. If set,
                    the value must be greater than 0.
                  format: float
                  maximum: 1.79769313486E+308
                  minimum: 0
                  nullable: true
                  type: number
                item_width:
                  description: The numeric width of the product measured in units
                    set in 'item_dimensions_unit'. Default value is null. If set,
                    the value must be greater than 0.
                  format: float
                  maximum: 1.79769313486E+308
                  minimum: 0
                  nullable: true
                  type: number
                item_height:
                  description: The numeric height of the product measured in units
                    set in 'item_dimensions_unit'. Default value is null. If set,
                    the value must be greater than 0.
                  format: float
                  maximum: 1.79769313486E+308
                  minimum: 0
                  nullable: true
                  type: number
                item_weight_unit:
                  description: A string defining the units used to measure the weight
                    of the product. Default value is null.
                  enum:
                  - oz
                  - lb
                  - g
                  - kg
                  nullable: true
                  type: string
                item_dimensions_unit:
                  description: A string defining the units used to measure the dimensions
                    of the product. Default value is null.
                  enum:
                  - in
                  - ft
                  - mm
                  - cm
                  - m
                  - yd
                  - inches
                  nullable: true
                  type: string
                is_taxable:
                  description: When true, applicable [shop](/documentation/reference#tag/Shop)
                    tax rates apply to this listing at checkout.
                  type: boolean
                taxonomy_id:
                  description: The numerical taxonomy ID of the listing. See [SellerTaxonomy](/documentation/reference#tag/SellerTaxonomy)
                    and [BuyerTaxonomy](/documentation/reference#tag/BuyerTaxonomy)
                    for more information.
                  minimum: 1
                  type: integer
                tags:
                  description: 'A comma-separated list of tag strings for the listing.
                    When creating or updating a listing, valid tag strings contain
                    only letters, numbers, whitespace characters, -, '', ™, ©, and
                    ®. (regex: /[^\p{L}\p{Nd}\p{Zs}\-''™©®]/u) Default value is null.'
                  items:
                    type: string
                  nullable: true
                  type: array
                who_made:
                  description: An enumerated string indicating who made the product.
                    Helps buyers locate the listing under the Handmade heading. Requires
                    'is_supply' and 'when_made'.
                  enum:
                  - i_did
                  - someone_else
                  - collective
                  type: string
                when_made:
                  description: An enumerated string for the era in which the maker
                    made the product in this listing. Helps buyers locate the listing
                    under the Vintage heading. Requires 'is_supply' and 'who_made'.
                  enum:
                  - made_to_order
                  - 2020_2023
                  - 2010_2019
                  - 2004_2009
                  - before_2004
                  - 2000_2003
                  - 1990s
                  - 1980s
                  - 1970s
                  - 1960s
                  - 1950s
                  - 1940s
                  - 1930s
                  - 1920s
                  - 1910s
                  - 1900s
                  - 1800s
                  - 1700s
                  - before_1700
                  type: string
                featured_rank:
                  description: The positive non-zero numeric position in the featured
                    listings of the shop, with rank 1 listings appearing in the left-most
                    position in featured listing on a shop’s home page.
                  nullable: true
                  type: integer
                is_personalizable:
                  description: When true, this listing is personalizable. The default
                    value is null.
                  type: boolean
                personalization_is_required:
                  description: When true, this listing requires personalization. The
                    default value is null. Will only change if is_personalizable is
                    'true'.
                  type: boolean
                personalization_char_count_max:
                  description: This is an integer value representing the maximum length
                    for the personalization message entered by the buyer. Will only
                    change if is_personalizable is 'true'.
                  type: integer
                personalization_instructions:
                  description: A string representing instructions for the buyer to
                    enter the personalization. Will only change if is_personalizable
                    is 'true'.
                  type: string
                state:
                  description: 'When _updating_ a listing, this value can be either
                    `active` or `inactive`. Note: Setting a `draft` listing to `active`
                    will also publish the listing on etsy.com and requires that the
                    listing have an image set. Setting a `sold_out` listing to active
                    will update the quantity to 1 and renew the listing on etsy.com.'
                  enum:
                  - active
                  - inactive
                  type: string
                is_supply:
                  description: When true, tags the listing as a supply product, else
                    indicates that it's a finished product. Helps buyers locate the
                    listing under the Supplies heading. Requires 'who_made' and 'when_made'.
                  type: boolean
                production_partner_ids:
                  description: An array of unique IDs of production partner ids.
                  items:
                    minimum: 1
                    type: integer
                  nullable: true
                  type: array
                type:
                  description: An enumerated type string that indicates whether the
                    listing is physical or a digital download.
                  enum:
                  - physical
                  - download
                  - both
                  nullable: true
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopListing'
          description: A single ShopListing
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a request conflict with the current state of the
            target resource. See the error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - listings_w
      tags:
      - ShopListing
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /v3/application/shops/{shop_id}/listings/{listing_id}/variation-images:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Gets all variation images on a listing.
      operationId: getListingVariationImages
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingVariationImages'
          description: A list of ListingVariationImages
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - ShopListing VariationImage
      x-accepts: application/json
    post:
      description: "<div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2\
        \ wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notification-03 wt-bg-slime-tint\
        \ wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\"\
        \ target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"\
        wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"\
        wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>\n\
        \nCreates variation images on a listing. `variation_images` is an array with\
        \ inputs for the `property_id`, `value_id`, and `image_id` fields. `image_ids`\
        \ are associated with a `ListingImage` on the listing associated with the\
        \ provided `listing_id`. `property_id` and `value_id` pairs are associated\
        \ with a `ListingProduct` on the listing associated with the provided `listing_id`.\
        \ `variation_images` should not contain any duplicates. `variation_images`\
        \ does not contain more than one `property_id` as variation images can only\
        \ be associated on one property. The update overwrites all existing variation\
        \ images on a listing, so if your request is successful, the variation images\
        \ on the listing will be exactly those you specify. "
      operationId: updateVariationImages
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_9'
        content:
          application/json:
            schema:
              properties:
                variation_images:
                  description: A list of variation image data.
                  items:
                    $ref: '#/components/schemas/_v3_application_shops__shop_id__listings__listing_id__variation_images_variation_images'
                  type: array
              required:
              - variation_images
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingVariationImages'
          description: A single ListingVariationImage
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a request conflict with the current state of the
            target resource. See the error message for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - listings_w
      tags:
      - ShopListing VariationImage
      x-contentType: application/json
      x-accepts: application/json
  /v3/application/shops/{shop_id}/listings/{listing_id}/videos/{video_id}:
    delete:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Open API V3 endpoint to delete a listing video. A copy of the video remains on our servers, and so a deleted video may be re-associated with the listing without re-uploading the original video; see uploadListingVideo.
      operationId: deleteListingVideo
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      - description: The unique ID of a video associated with a listing.
        explode: false
        in: path
        name: video_id
        required: true
        schema:
          description: The unique ID of a video associated with a listing.
          minimum: 1
          type: integer
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "204":
          description: The ListingVideo resource was correctly deleted
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - listings_w
      tags:
      - ShopListing Video
      x-accepts: application/json
  /v3/application/listings/{listing_id}/videos/{video_id}:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves a single video associated with the given listing. Requesting a video from a listing returns an empty result.
      operationId: getListingVideo
      parameters:
      - description: The unique ID of a video associated with a listing.
        explode: false
        in: path
        name: video_id
        required: true
        schema:
          description: The unique ID of a video associated with a listing.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingVideo'
          description: The metatdata for a video associated with a listing.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - ShopListing Video
      x-accepts: application/json
  /v3/application/listings/{listing_id}/videos:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves all listing video resources for a listing with a specific listing ID.
      operationId: getListingVideos
      parameters:
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingVideos'
          description: A list of videos for a listing
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - ShopListing Video
      x-accepts: application/json
  /v3/application/shops/{shop_id}/listings/{listing_id}/videos:
    post:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Uploads a new video for a listing, or associates an existing video with a specific listing. You must either provide the `video_id` of an existing video, or the name and binary file data for a video to upload.
      operationId: uploadListingVideo
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_10'
        content:
          multipart/form-data:
            schema:
              properties:
                video_id:
                  description: The unique ID of a video associated with a listing.
                  minimum: 1
                  type: integer
                video:
                  description: A video file to upload.
                  format: binary
                  nullable: true
                  type: string
                name:
                  description: The file name string for the video to upload.
                  type: string
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingVideo'
          description: The metadata for a file associated with a digital listing.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - listings_w
      tags:
      - ShopListing Video
      x-contentType: multipart/form-data
      x-accepts: application/json
  /v3/application/shops/{shop_id}/payment-account/ledger-entries/{ledger_entry_id}:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Get a single Shop Payment Account Ledger's Entry
      operationId: getShopPaymentAccountLedgerEntry
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The unique ID of the shop owner ledger entry.
        explode: false
        in: path
        name: ledger_entry_id
        required: true
        schema:
          description: The unique ID of the shop owner ledger entry.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAccountLedgerEntry'
          description: A single of PaymentAccountLedgerEntry
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - transactions_r
      tags:
      - Ledger Entry
      x-accepts: application/json
  /v3/application/shops/{shop_id}/payment-account/ledger-entries:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Get a Shop Payment Account Ledger's Entries
      operationId: getShopPaymentAccountLedgerEntries
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The earliest unix timestamp for when a record was created.
        explode: true
        in: query
        name: min_created
        required: true
        schema:
          description: The earliest unix timestamp for when a record was created.
          minimum: 946684800
          type: integer
        style: form
      - description: The latest unix timestamp for when a record was created.
        explode: true
        in: query
        name: max_created
        required: true
        schema:
          description: The latest unix timestamp for when a record was created.
          minimum: 946684800
          type: integer
        style: form
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The number of records to skip before selecting the first result.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: The number of records to skip before selecting the first result.
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAccountLedgerEntries'
          description: A list of PaymentAccountLedgerEntries
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - transactions_r
      tags:
      - Ledger Entry
      x-accepts: application/json
  /v3/application/shops/{shop_id}/payment-account/ledger-entries/payments:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Get a Payment from a PaymentAccount Ledger Entry ID, if applicable
      operationId: getPaymentAccountLedgerEntryPayments
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - explode: true
        in: query
        name: ledger_entry_ids
        required: true
        schema:
          items:
            minimum: 1
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments'
          description: A list of Payments
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - transactions_r
      tags:
      - Payment
      x-accepts: application/json
  /v3/application/shops/{shop_id}/receipts/{receipt_id}/payments:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves a payment from a specific receipt, identified by `receipt_id`, from a specific shop, identified by `shop_id`
      operationId: getShopPaymentByReceiptId
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt)
          associated to this transaction.
        explode: false
        in: path
        name: receipt_id
        required: true
        schema:
          description: The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments'
          description: A single payment
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - transactions_r
      tags:
      - Payment
      x-accepts: application/json
  /v3/application/shops/{shop_id}/payments:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves a list of payments from a shop identified by `shop_id`. You can also filter results using a list of payment IDs.
      operationId: getPayments
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: A comma-separated array of Payment IDs numbers.
        explode: true
        in: query
        name: payment_ids
        required: true
        schema:
          description: A comma-separated array of Payment IDs numbers.
          items:
            minimum: 1
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payments'
          description: A list of payments from a specific shop.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - transactions_r
      tags:
      - Payment
      x-accepts: application/json
  /v3/application/openapi-ping:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Check to confirm connectivity to the Etsy API with an application
      operationId: ping
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pong'
          description: A confirmation that the current application has access to the
            Open API
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Missing or invalid API key.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: App does not have the proper permissions to access this resource.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - Other
      x-accepts: application/json
  /v3/application/shops/{shop_id}/receipts/{receipt_id}:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves a receipt, identified by a receipt id, from an Etsy shop
      operationId: getShopReceipt
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt)
          associated to this transaction.
        explode: false
        in: path
        name: receipt_id
        required: true
        schema:
          description: The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopReceipt'
          description: A single Shop Receipt
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - transactions_r
      tags:
      - Shop Receipt
      x-accepts: application/json
    put:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Updates the status of a receipt, identified by a receipt id, from an Etsy shop
      operationId: updateShopReceipt
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt)
          associated to this transaction.
        explode: false
        in: path
        name: receipt_id
        required: true
        schema:
          description: The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_11'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                was_shipped:
                  description: When `true`, returns receipts where the seller shipped
                    the product(s) in this receipt. When `false`, returns receipts
                    where shipment has not been set.
                  nullable: true
                  type: boolean
                was_paid:
                  description: When `true`, returns receipts where the seller has
                    recieved payment for the receipt. When `false`, returns receipts
                    where payment has not been received.
                  nullable: true
                  type: boolean
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopReceipt'
          description: Update A Shop Receipt
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - transactions_w
      tags:
      - Shop Receipt
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /v3/application/shops/{shop_id}/receipts:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Requests the Shop Receipts from a specific Shop, unfiltered or filtered by receipt id range or offset, date, paid, and/or shipped purchases.
      operationId: getShopReceipts
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The earliest unix timestamp for when a record was created.
        explode: true
        in: query
        name: min_created
        required: false
        schema:
          description: The earliest unix timestamp for when a record was created.
          minimum: 946684800
          type: integer
        style: form
      - description: The latest unix timestamp for when a record was created.
        explode: true
        in: query
        name: max_created
        required: false
        schema:
          description: The latest unix timestamp for when a record was created.
          minimum: 946684800
          type: integer
        style: form
      - description: The earliest unix timestamp for when a record last changed.
        explode: true
        in: query
        name: min_last_modified
        required: false
        schema:
          description: The earliest unix timestamp for when a record last changed.
          minimum: 946684800
          type: integer
        style: form
      - description: The latest unix timestamp for when a record last changed.
        explode: true
        in: query
        name: max_last_modified
        required: false
        schema:
          description: The latest unix timestamp for when a record last changed.
          minimum: 946684800
          type: integer
        style: form
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The number of records to skip before selecting the first result.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: The number of records to skip before selecting the first result.
          minimum: 0
          type: integer
        style: form
      - description: The value to sort a search result of listings on.
        explode: true
        in: query
        name: sort_on
        required: false
        schema:
          default: created
          description: The value to sort a search result of listings on.
          enum:
          - created
          - updated
          - receipt_id
          type: string
        style: form
      - description: The ascending(up) or descending(down) order to sort receipts
          by.
        explode: true
        in: query
        name: sort_order
        required: false
        schema:
          default: desc
          description: The ascending(up) or descending(down) order to sort receipts
            by.
          enum:
          - asc
          - ascending
          - desc
          - descending
          - up
          - down
          type: string
        style: form
      - description: When `true`, returns receipts where the seller has recieved payment
          for the receipt. When `false`, returns receipts where payment has not been
          received.
        explode: true
        in: query
        name: was_paid
        required: false
        schema:
          description: When `true`, returns receipts where the seller has recieved
            payment for the receipt. When `false`, returns receipts where payment
            has not been received.
          nullable: true
          type: boolean
        style: form
      - description: When `true`, returns receipts where the seller shipped the product(s)
          in this receipt. When `false`, returns receipts where shipment has not been
          set.
        explode: true
        in: query
        name: was_shipped
        required: false
        schema:
          description: When `true`, returns receipts where the seller shipped the
            product(s) in this receipt. When `false`, returns receipts where shipment
            has not been set.
          nullable: true
          type: boolean
        style: form
      - description: When `true`, returns receipts that have been marked as delivered.
          When `false`, returns receipts where shipment has not been marked as delivered.
        explode: true
        in: query
        name: was_delivered
        required: false
        schema:
          description: When `true`, returns receipts that have been marked as delivered.
            When `false`, returns receipts where shipment has not been marked as delivered.
          nullable: true
          type: boolean
        style: form
      - description: When `true`, the endpoint will only return the canceled receipts.
          When `false`, the endpoint will only return non-canceled receipts.
        explode: true
        in: query
        name: was_canceled
        required: false
        schema:
          description: When `true`, the endpoint will only return the canceled receipts.
            When `false`, the endpoint will only return non-canceled receipts.
          nullable: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopReceipts'
          description: A list of Shop Receipts
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - transactions_r
      tags:
      - Shop Receipt
      x-accepts: application/json
  /v3/application/shops/{shop_id}/receipts/{receipt_id}/listings:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Gets all listings associated with a receipt.
      operationId: getListingsByShopReceipt
      parameters:
      - description: The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt)
          associated to this transaction.
        explode: false
        in: path
        name: receipt_id
        required: true
        schema:
          description: The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The number of records to skip before selecting the first result.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: The number of records to skip before selecting the first result.
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopListings'
          description: A set of ShopListing resources.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - transactions_r
      tags:
      - ShopListing
      x-accepts: application/json
  /v3/application/shops/{shop_id}/receipts/{receipt_id}/tracking:
    post:
      description: "<div class=\"wt-display-flex-xs wt-align-items-center wt-mt-xs-2\
        \ wt-mb-xs-3\"><span class=\"wt-badge wt-badge--notification-03 wt-bg-slime-tint\
        \ wt-mr-xs-2\">General Release</span><a class=\"wt-text-link\" href=\"https://github.com/etsy/open-api/discussions\"\
        \ target=\"_blank\" rel=\"noopener noreferrer\">Report bug</a></div><div class=\"\
        wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3\"><p class=\"\
        wt-text-body-01 banner-text\">This endpoint is ready for production use.</p></div>\n\
        \nSubmits tracking information for a Shop Receipt, which creates a Shop Receipt\
        \ Shipment entry for the given receipt_id. Each time you successfully submit\
        \ tracking info, Etsy sends a notification email to the buyer User. When send_bcc\
        \ is true, Etsy sends shipping notifications to the seller as well. When tracking_code\
        \ and carrier_name aren't sent, the receipt is marked as shipped only. If\
        \ the carrier is not supported, you may use `other` as the carrier name so\
        \ you can provide the tracking code. **NOTE** When shipping within the United\
        \ States AND the order is over $10 _or_ when shipping to India, tracking code\
        \ and carrier name ARE required. "
      operationId: createReceiptShipment
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The receipt to submit tracking for.
        explode: false
        in: path
        name: receipt_id
        required: true
        schema:
          description: The receipt to submit tracking for.
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_12'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                tracking_code:
                  description: The tracking code for this receipt.
                  type: string
                carrier_name:
                  description: The carrier name for this receipt.
                  type: string
                send_bcc:
                  description: If true, the shipping notification will be sent to
                    the seller as well
                  type: boolean
                note_to_buyer:
                  description: Message to include in notification to the buyer.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopReceipt'
          description: A single ShopReceipt
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a request conflict with the current state of the
            target resource. See the error message for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - transactions_w
      tags:
      - Shop Receipt
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /v3/application/shops/{shop_id}/receipts/{receipt_id}/transactions:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves the list of transactions associated with a specific receipt.
      operationId: getShopReceiptTransactionsByReceipt
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt)
          associated to this transaction.
        explode: false
        in: path
        name: receipt_id
        required: true
        schema:
          description: The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopReceiptTransactions'
          description: A list of transactions
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - transactions_r
      tags:
      - Shop Receipt Transactions
      x-accepts: application/json
  /v3/application/listings/{listing_id}/reviews:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Open API V3 to retrieve the reviews for a listing given its ID.
      operationId: getReviewsByListing
      parameters:
      - description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
          associated to this transaction.
        explode: false
        in: path
        name: listing_id
        required: true
        schema:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        style: simple
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The number of records to skip before selecting the first result.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: The number of records to skip before selecting the first result.
          minimum: 0
          type: integer
        style: form
      - description: The earliest unix timestamp for when a record was created.
        explode: true
        in: query
        name: min_created
        required: false
        schema:
          description: The earliest unix timestamp for when a record was created.
          minimum: 946684800
          nullable: true
          type: integer
        style: form
      - description: The latest unix timestamp for when a record was created.
        explode: true
        in: query
        name: max_created
        required: false
        schema:
          description: The latest unix timestamp for when a record was created.
          minimum: 946684800
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListingReviews'
          description: A set of Transaction Reviews by Listing ID
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - Review
      x-accepts: application/json
  /v3/application/shops/{shop_id}/reviews:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Open API V3 to retrieve the reviews from a shop given its ID.
      operationId: getReviewsByShop
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The number of records to skip before selecting the first result.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: The number of records to skip before selecting the first result.
          minimum: 0
          type: integer
        style: form
      - description: The earliest unix timestamp for when a record was created.
        explode: true
        in: query
        name: min_created
        required: false
        schema:
          description: The earliest unix timestamp for when a record was created.
          minimum: 946684800
          nullable: true
          type: integer
        style: form
      - description: The latest unix timestamp for when a record was created.
        explode: true
        in: query
        name: max_created
        required: false
        schema:
          description: The latest unix timestamp for when a record was created.
          minimum: 946684800
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionReviews'
          description: A set of Transaction Reviews By Shop ID
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - Review
      x-accepts: application/json
  /v3/application/seller-taxonomy/nodes:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves the full hierarchy tree of seller taxonomy nodes.
      operationId: getSellerTaxonomyNodes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SellerTaxonomyNodes'
          description: List the full hierarchy tree of seller taxonomy nodes.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The service is unavailable
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - SellerTaxonomy
      x-accepts: application/json
  /v3/application/seller-taxonomy/nodes/{taxonomy_id}/properties:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves a list of product properties, with applicable scales and values, supported for a specific seller taxonomy ID.
      operationId: getPropertiesByTaxonomyId
      parameters:
      - description: 'The unique numeric ID of an Etsy taxonomy node, which is a metadata
          category for listings organized into the seller taxonomy hierarchy tree.
          For example, the "shoes" taxonomy node (ID: 1429, level: 1) is higher in
          the hierarchy than "girls'' shoes" (ID: 1440, level: 2). The taxonomy nodes
          assigned to a listing support access to specific standardized product scales
          and properties. For example, listings assigned the taxonomy nodes "shoes"
          or "girls'' shoes" support access to the "EU" shoe size scale with its associated
          property names and IDs for EU shoe sizes, such as property `value_id`:"1394",
          and `name`:"38".'
        explode: false
        in: path
        name: taxonomy_id
        required: true
        schema:
          description: 'The unique numeric ID of an Etsy taxonomy node, which is a
            metadata category for listings organized into the seller taxonomy hierarchy
            tree. For example, the "shoes" taxonomy node (ID: 1429, level: 1) is higher
            in the hierarchy than "girls'' shoes" (ID: 1440, level: 2). The taxonomy
            nodes assigned to a listing support access to specific standardized product
            scales and properties. For example, listings assigned the taxonomy nodes
            "shoes" or "girls'' shoes" support access to the "EU" shoe size scale
            with its associated property names and IDs for EU shoe sizes, such as
            property `value_id`:"1394", and `name`:"38".'
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxonomyNodeProperties'
          description: A list of product properties, with applicable scales and values.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - SellerTaxonomy
      x-accepts: application/json
  /v3/application/shipping-carriers:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves a list of available shipping carriers and the mail classes associated with them for a given country
      operationId: getShippingCarriers
      parameters:
      - description: The ISO code of the country from which the listing ships.
        explode: true
        in: query
        name: origin_country_iso
        required: true
        schema:
          description: The ISO code of the country from which the listing ships.
          format: ISO 3166-1 alpha-2
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingCarriers'
          description: A set of ShippingCarriers
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - Shop ShippingProfile
      x-accepts: application/json
  /v3/application/shops/{shop_id}:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves the shop identified by a specific shop ID.
      operationId: getShop
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: A single Shop
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - Shop
      x-accepts: application/json
    put:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Updates a shop. Assumes that all string parameters are provided in the shop's primary language. Please note that the policy_additional field should only be set for shops located in the EU. Passing a value for this field for shops outside of the EU, will result in an error.
      operationId: updateShop
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_13'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  description: A brief heading string for the shop's main page.
                  type: string
                announcement:
                  description: An announcement string to buyers that displays on the
                    shop's homepage.
                  type: string
                sale_message:
                  description: A message string sent to users who complete a purchase
                    from this shop.
                  type: string
                digital_sale_message:
                  description: A message string sent to users who purchase a digital
                    item from this shop.
                  type: string
                policy_additional:
                  description: The shop's additional policies string (may be blank).
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: A single Shop.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_r
        - shops_w
      tags:
      - Shop
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /v3/application/users/{user_id}/shops:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves the shop identified by the shop owner's user ID.
      operationId: getShopByOwnerUserId
      parameters:
      - description: The numeric user ID of the [user](/documentation/reference#tag/User)
          who owns this shop.
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          description: The numeric user ID of the [user](/documentation/reference#tag/User)
            who owns this shop.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
          description: A single Shop
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - Shop
      x-accepts: application/json
  /v3/application/shops:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Open API V3 endpoint for searching shops by name. Note: We make every effort to ensure that frozen or removed shops are not included in the search results. However, rarely, due to timing issues, they may appear.
      operationId: findShops
      parameters:
      - description: The shop's name string.
        explode: true
        in: query
        name: shop_name
        required: true
        schema:
          description: The shop's name string.
          type: string
        style: form
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The number of records to skip before selecting the first result.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: The number of records to skip before selecting the first result.
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shops'
          description: A list of Shops
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - Shop
      x-accepts: application/json
  /v3/application/shops/{shop_id}/policies/return/consolidate:
    post:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Consolidates Return Policies by moving all listings from a source return policy to a destination return policy, and deleting the source return policy. This is commonly used in the event that a user attempts to update a Return Policy such that its data is a duplicate of some other Return Policy, which is prevented.
      operationId: consolidateShopReturnPolicies
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_14'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                source_return_policy_id:
                  description: The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
                  minimum: 1
                  type: integer
                destination_return_policy_id:
                  description: The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
                  minimum: 1
                  type: integer
              required:
              - destination_return_policy_id
              - source_return_policy_id
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopReturnPolicy'
          description: The updated target Return Policy
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_w
      tags:
      - Shop Return Policy
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /v3/application/shops/{shop_id}/policies/return:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Returns a shop's list of existing Return Policies
      operationId: getShopReturnPolicies
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopReturnPolicies'
          description: List of shop's Return Policies
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_r
      tags:
      - Shop Return Policy
      x-accepts: application/json
    post:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Creates a new Return Policy. Note: if either accepts_returns or accepts_exchanges is true, then a return_deadline is required.
      operationId: createShopReturnPolicy
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_15'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                accepts_returns:
                  type: boolean
                accepts_exchanges:
                  type: boolean
                return_deadline:
                  description: 'The deadline for the Return Policy, measured in days.
                    The value must be one of the following: [7, 14, 21, 30, 45, 60,
                    90].'
                  nullable: true
                  type: integer
              required:
              - accepts_exchanges
              - accepts_returns
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopReturnPolicy'
          description: A single Return Policy
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_w
      tags:
      - Shop Return Policy
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /v3/application/shops/{shop_id}/policies/return/{return_policy_id}:
    delete:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Deletes an existing Return Policy. Deletion is only allowed for policies which have no associated listings – move them to another policy before attempting deletion.
      operationId: deleteShopReturnPolicy
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
        explode: false
        in: path
        name: return_policy_id
        required: true
        schema:
          description: The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          description: The Return Policy was successfully deleted.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_w
      tags:
      - Shop Return Policy
      x-accepts: application/json
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves an existing Return Policy.
      operationId: getShopReturnPolicy
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
        explode: false
        in: path
        name: return_policy_id
        required: true
        schema:
          description: The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopReturnPolicy'
          description: A single Return Policy
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_r
      tags:
      - Shop Return Policy
      x-accepts: application/json
    put:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Updates an existing Return Policy. Note: if either accepts_returns or accepts_exchanges is true, then a return_deadline is required.
      operationId: updateShopReturnPolicy
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
        explode: false
        in: path
        name: return_policy_id
        required: true
        schema:
          description: The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_16'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                accepts_returns:
                  type: boolean
                accepts_exchanges:
                  type: boolean
                return_deadline:
                  description: 'The deadline for the Return Policy, measured in days.
                    The value must be one of the following: [7, 14, 21, 30, 45, 60,
                    90].'
                  nullable: true
                  type: integer
              required:
              - accepts_exchanges
              - accepts_returns
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopReturnPolicy'
          description: An updated Return Policy
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a request conflict with the current state of the
            target resource. See the error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_w
      tags:
      - Shop Return Policy
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /v3/application/shops/{shop_id}/policies/return/{return_policy_id}/listings:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Gets all listings associated with a Return Policy.
      operationId: getListingsByShopReturnPolicy
      parameters:
      - description: The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
        explode: false
        in: path
        name: return_policy_id
        required: true
        schema:
          description: The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
          minimum: 1
          type: integer
        style: simple
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopListings'
          description: A set of ShopListing resources.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - listings_r
      tags:
      - ShopListing
      x-accepts: application/json
  /v3/application/shops/{shop_id}/production-partners:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves a list of production partners available in the specific Etsy shop identified by its shop ID.
      operationId: getShopProductionPartners
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopProductionPartners'
          description: A list of shop production partners
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_r
      tags:
      - Shop ProductionPartner
      x-accepts: application/json
  /v3/application/shops/{shop_id}/sections:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves the list of shop sections in a specific shop identified by shop ID.
      operationId: getShopSections
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopSections'
          description: A list of shop sections.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - Shop Section
      x-accepts: application/json
    post:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Creates a new section in a specific shop.
      operationId: createShopSection
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_17'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  description: The title string for a shop section.
                  type: string
              required:
              - title
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopSection'
          description: A Shop Section resource
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: This function is temporarily unavailable. Please try again
            later.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_w
      tags:
      - Shop Section
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /v3/application/shops/{shop_id}/sections/{shop_section_id}:
    delete:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Deletes a section in a specific shop given a valid shop_section_id.
      operationId: deleteShopSection
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID of a section in a specific Etsy shop.
        explode: false
        in: path
        name: shop_section_id
        required: true
        schema:
          description: The numeric ID of a section in a specific Etsy shop.
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          description: The shop section resource was correctly deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: This function is temporarily unavailable. Please try again
            later.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_w
      tags:
      - Shop Section
      x-accepts: application/json
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves a shop section, referenced by section ID and shop ID.
      operationId: getShopSection
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID of a section in a specific Etsy shop.
        explode: false
        in: path
        name: shop_section_id
        required: true
        schema:
          description: The numeric ID of a section in a specific Etsy shop.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopSection'
          description: A shop section resource
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - Shop Section
      x-accepts: application/json
    put:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Updates a section in a specific shop given a valid shop_section_id.
      operationId: updateShopSection
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID of a section in a specific Etsy shop.
        explode: false
        in: path
        name: shop_section_id
        required: true
        schema:
          description: The numeric ID of a section in a specific Etsy shop.
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_18'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  description: The title string for a shop section.
                  type: string
              required:
              - title
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopSection'
          description: A Shop Section resource
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: This function is temporarily unavailable. Please try again
            later.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_w
      tags:
      - Shop Section
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /v3/application/shops/{shop_id}/shop-sections/listings:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves all the listings from the section of a specific shop.
      operationId: getListingsByShopSectionId
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: A list of numeric IDS for all sections in a specific Etsy shop.
        explode: true
        in: query
        name: shop_section_ids
        required: true
        schema:
          description: A list of numeric IDS for all sections in a specific Etsy shop.
          items:
            minimum: 1
            type: integer
          type: array
        style: form
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The number of records to skip before selecting the first result.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: The number of records to skip before selecting the first result.
          minimum: 0
          type: integer
        style: form
      - description: 'The value to sort a search result of listings on. NOTES: a)
          `sort_on` only works when combined with one of the search options (keywords,
          region, etc.). b) when using `score` the returned results will always be
          in _descending_ order, regardless of the `sort_order` parameter.'
        explode: true
        in: query
        name: sort_on
        required: false
        schema:
          default: created
          description: 'The value to sort a search result of listings on. NOTES: a)
            `sort_on` only works when combined with one of the search options (keywords,
            region, etc.). b) when using `score` the returned results will always
            be in _descending_ order, regardless of the `sort_order` parameter.'
          enum:
          - created
          - price
          - updated
          - score
          type: string
        style: form
      - description: 'The ascending(up) or descending(down) order to sort listings
          by. NOTE: sort_order only works when combined with one of the search options
          (keywords, region, etc.).'
        explode: true
        in: query
        name: sort_order
        required: false
        schema:
          default: desc
          description: 'The ascending(up) or descending(down) order to sort listings
            by. NOTE: sort_order only works when combined with one of the search options
            (keywords, region, etc.).'
          enum:
          - asc
          - ascending
          - desc
          - descending
          - up
          - down
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopListings'
          description: A list of listings from a shop section.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - ShopListing
      x-accepts: application/json
  /v3/application/shops/{shop_id}/shipping-profiles:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves a list of shipping profiles available in the specific Etsy shop identified by its shop ID.
      operationId: getShopShippingProfiles
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopShippingProfiles'
          description: A list of shipping profiles
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_r
      tags:
      - Shop ShippingProfile
      x-accepts: application/json
    post:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Creates a new ShippingProfile. You can pass a country iso code or a region when creating a ShippingProfile, but not both. Only one is required. You must pass either a shipping_carrier_id AND mail_class, or both min and max_delivery_days.
      operationId: createShopShippingProfile
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_19'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  description: The name string of this shipping profile.
                  type: string
                origin_country_iso:
                  description: The ISO code of the country from which the listing
                    ships.
                  format: ISO 3166-1 alpha-2
                  type: string
                primary_cost:
                  description: The cost of shipping to this country/region alone,
                    measured in the store's default currency.
                  format: float
                  minimum: 0
                  type: number
                secondary_cost:
                  description: The cost of shipping to this country/region with another
                    item, measured in the store's default currency.
                  format: float
                  minimum: 0
                  type: number
                min_processing_time:
                  description: The minimum time required to process to ship listings
                    with this shipping profile.
                  maximum: 10
                  minimum: 1
                  type: integer
                max_processing_time:
                  description: The maximum processing time the listing needs to ship.
                  maximum: 10
                  minimum: 1
                  type: integer
                processing_time_unit:
                  default: business_days
                  description: The unit used to represent how long a processing time
                    is. A week is equivalent to 5 business days. If none is provided,
                    the unit is set to "business_days".
                  enum:
                  - business_days
                  - weeks
                  type: string
                destination_country_iso:
                  default: "null"
                  description: The ISO code of the country to which the listing ships.
                    If null, request sets destination to destination_region. Required
                    if destination_region is null or not provided.
                  format: ISO 3166-1 alpha-2
                  type: string
                destination_region:
                  default: none
                  description: The code of the region to which the listing ships.
                    A region represents a set of countries. Supported regions are
                    Europe Union and Non-Europe Union (countries in Europe not in
                    EU). If `none`, request sets destination to destination_country_iso.
                    Required if destination_country_iso is null or not provided.
                  enum:
                  - eu
                  - non_eu
                  - none
                  type: string
                origin_postal_code:
                  default: ""
                  description: The postal code string (not necessarily a number) for
                    the location from which the listing ships. Required if the `origin_country_iso`
                    is `US` or `CA`.
                  type: string
                shipping_carrier_id:
                  default: 0
                  description: The unique ID of a supported shipping carrier, which
                    is used to calculate an Estimated Delivery Date. **Required with
                    `mail_class`** if `min_delivery_days` and `max_delivery_days`
                    are null.
                  minimum: 0
                  type: integer
                mail_class:
                  default: "null"
                  description: The unique ID string of a shipping carrier's mail class,
                    which is used to calculate an estimated delivery date. **Required
                    with `shipping_carrier_id`** if `min_delivery_days` and `max_delivery_days`
                    are null.
                  type: string
                min_delivery_days:
                  description: The minimum number of business days a buyer can expect
                    to wait to receive their purchased item once it has shipped. **Required
                    with `max_delivery_days`** if `mail_class` is null.
                  maximum: 45
                  minimum: 1
                  type: integer
                max_delivery_days:
                  description: The maximum number of business days a buyer can expect
                    to wait to receive their purchased item once it has shipped. **Required
                    with `min_delivery_days`** if `mail_class` is null.
                  maximum: 45
                  minimum: 1
                  type: integer
              required:
              - max_processing_time
              - min_processing_time
              - origin_country_iso
              - primary_cost
              - secondary_cost
              - title
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopShippingProfile'
          description: A single ShippingProfile
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_w
      tags:
      - Shop ShippingProfile
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /v3/application/shops/{shop_id}/shipping-profiles/{shipping_profile_id}:
    delete:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Deletes a ShippingProfile by given id.
      operationId: deleteShopShippingProfile
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
          associated with the listing. Required when listing type is `physical`.
        explode: false
        in: path
        name: shipping_profile_id
        required: true
        schema:
          description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
            associated with the listing. Required when listing type is `physical`.
          minimum: 1
          type: integer
        style: simple
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "204":
          description: The ShopShippingProfile resource was correctly deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_w
      tags:
      - Shop ShippingProfile
      x-accepts: application/json
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves a Shipping Profile referenced by shipping profile ID.
      operationId: getShopShippingProfile
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
          associated with the listing. Required when listing type is `physical`.
        explode: false
        in: path
        name: shipping_profile_id
        required: true
        schema:
          description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
            associated with the listing. Required when listing type is `physical`.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopShippingProfile'
          description: A single ShippingProfile
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_r
      tags:
      - Shop ShippingProfile
      x-accepts: application/json
    put:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Changes the settings in a shipping profile. You can pass a country iso code or a region when updating a ShippingProfile, but not both. Only one is required. You must pass either a shipping_carrier_id AND mail_class, or both min and max_delivery_days.
      operationId: updateShopShippingProfile
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
          associated with the listing. Required when listing type is `physical`.
        explode: false
        in: path
        name: shipping_profile_id
        required: true
        schema:
          description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
            associated with the listing. Required when listing type is `physical`.
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_20'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                title:
                  description: The name string of this shipping profile.
                  type: string
                origin_country_iso:
                  description: The ISO code of the country from which the listing
                    ships.
                  format: ISO 3166-1 alpha-2
                  type: string
                min_processing_time:
                  description: The minimum time required to process to ship listings
                    with this shipping profile.
                  maximum: 10
                  minimum: 1
                  type: integer
                max_processing_time:
                  description: The maximum processing time the listing needs to ship.
                  maximum: 10
                  minimum: 1
                  type: integer
                processing_time_unit:
                  default: business_days
                  description: The unit used to represent how long a processing time
                    is. A week is equivalent to 5 business days. If none is provided,
                    the unit is set to "business_days".
                  enum:
                  - business_days
                  - weeks
                  type: string
                origin_postal_code:
                  default: "null"
                  description: The postal code string (not necessarily a number) for
                    the location from which the listing ships. Required if the `origin_country_iso`
                    is `US` or `CA`.
                  type: string
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopShippingProfile'
          description: The updated shipping profile.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_w
      tags:
      - Shop ShippingProfile
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /v3/application/shops/{shop_id}/shipping-profiles/{shipping_profile_id}/destinations:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves a list of shipping destination objects associated with a shipping profile.
      operationId: getShopShippingProfileDestinationsByShippingProfile
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
          associated with the listing. Required when listing type is `physical`.
        explode: false
        in: path
        name: shipping_profile_id
        required: true
        schema:
          description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
            associated with the listing. Required when listing type is `physical`.
          minimum: 1
          type: integer
        style: simple
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The number of records to skip before selecting the first result.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: The number of records to skip before selecting the first result.
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopShippingProfileDestinations'
          description: A list of shipping destination objects.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_r
      tags:
      - Shop ShippingProfile
      x-accepts: application/json
    post:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Creates a new shipping destination, which sets the shipping cost, carrier, and class for a destination in a [shipping profile](/documentation/reference/#tag/Shop-ShippingProfile). createShopShippingProfileDestination assigns costs using the currency of the associated shop. Set the destination using either `destination_country_iso` or `destination_region`; `destination_country_iso` and `destination_region` are mutually exclusive — set one or the other. Setting both triggers error 400. If the request sets neither `destination_country_iso` nor `destination_region`, the default destination is "everywhere". You must also either assign both a `shipping_carrier_id` AND `mail_class` or both `min_delivery_days` AND `max_delivery_days`.
      operationId: createShopShippingProfileDestination
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
          associated with the listing. Required when listing type is `physical`.
        explode: false
        in: path
        name: shipping_profile_id
        required: true
        schema:
          description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
            associated with the listing. Required when listing type is `physical`.
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_21'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                primary_cost:
                  description: The cost of shipping to this country/region alone,
                    measured in the store's default currency.
                  format: float
                  minimum: 0
                  type: number
                secondary_cost:
                  description: The cost of shipping to this country/region with another
                    item, measured in the store's default currency.
                  format: float
                  minimum: 0
                  type: number
                destination_country_iso:
                  default: "null"
                  description: The ISO code of the country to which the listing ships.
                    If null, request sets destination to destination_region. Required
                    if destination_region is null or not provided.
                  format: ISO 3166-1 alpha-2
                  type: string
                destination_region:
                  default: none
                  description: The code of the region to which the listing ships.
                    A region represents a set of countries. Supported regions are
                    Europe Union and Non-Europe Union (countries in Europe not in
                    EU). If `none`, request sets destination to destination_country_iso.
                    Required if destination_country_iso is null or not provided.
                  enum:
                  - eu
                  - non_eu
                  - none
                  type: string
                shipping_carrier_id:
                  default: 0
                  description: The unique ID of a supported shipping carrier, which
                    is used to calculate an Estimated Delivery Date. **Required with
                    `mail_class`** if `min_delivery_days` and `max_delivery_days`
                    are null.
                  minimum: 0
                  type: integer
                mail_class:
                  default: "null"
                  description: The unique ID string of a shipping carrier's mail class,
                    which is used to calculate an estimated delivery date. **Required
                    with `shipping_carrier_id`** if `min_delivery_days` and `max_delivery_days`
                    are null.
                  type: string
                min_delivery_days:
                  description: The minimum number of business days a buyer can expect
                    to wait to receive their purchased item once it has shipped. **Required
                    with `max_delivery_days`** if `mail_class` is null.
                  maximum: 45
                  minimum: 1
                  type: integer
                max_delivery_days:
                  description: The maximum number of business days a buyer can expect
                    to wait to receive their purchased item once it has shipped. **Required
                    with `min_delivery_days`** if `mail_class` is null.
                  maximum: 45
                  minimum: 1
                  type: integer
              required:
              - primary_cost
              - secondary_cost
              type: object
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopShippingProfileDestination'
          description: A single shipping destination.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_w
      tags:
      - Shop ShippingProfile
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /v3/application/shops/{shop_id}/shipping-profiles/{shipping_profile_id}/destinations/{shipping_profile_destination_id}:
    delete:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Deletes a shipping destination and removes the destination option from every listing that uses the associated shipping profile. A shipping profile requires at least one shipping destination, so this endpoint cannot delete the final shipping destination for any shipping profile. To delete the final shipping destination from a shipping profile, you must [delete the entire shipping profile](/documentation/reference/#operation/deleteShopShippingProfile).
      operationId: deleteShopShippingProfileDestination
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
          associated with the listing. Required when listing type is `physical`.
        explode: false
        in: path
        name: shipping_profile_id
        required: true
        schema:
          description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
            associated with the listing. Required when listing type is `physical`.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID of the shipping profile destination in the [shipping
          profile](/documentation/reference#tag/Shop-ShippingProfile) associated with
          the listing.
        explode: false
        in: path
        name: shipping_profile_destination_id
        required: true
        schema:
          description: The numeric ID of the shipping profile destination in the [shipping
            profile](/documentation/reference#tag/Shop-ShippingProfile) associated
            with the listing.
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          description: Etsy deleted the shipping profile destination.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_w
      tags:
      - Shop ShippingProfile
      x-accepts: application/json
    put:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Updates an existing shipping destination, which can set or reassign the shipping cost, carrier, and class for a destination.
      operationId: updateShopShippingProfileDestination
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
          associated with the listing. Required when listing type is `physical`.
        explode: false
        in: path
        name: shipping_profile_id
        required: true
        schema:
          description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
            associated with the listing. Required when listing type is `physical`.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID of the shipping profile destination in the [shipping
          profile](/documentation/reference#tag/Shop-ShippingProfile) associated with
          the listing.
        explode: false
        in: path
        name: shipping_profile_destination_id
        required: true
        schema:
          description: The numeric ID of the shipping profile destination in the [shipping
            profile](/documentation/reference#tag/Shop-ShippingProfile) associated
            with the listing.
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_22'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                primary_cost:
                  description: The cost of shipping to this country/region alone,
                    measured in the store's default currency.
                  format: float
                  minimum: 0
                  type: number
                secondary_cost:
                  description: The cost of shipping to this country/region with another
                    item, measured in the store's default currency.
                  format: float
                  minimum: 0
                  type: number
                destination_country_iso:
                  default: "null"
                  description: The ISO code of the country to which the listing ships.
                    If null, request sets destination to destination_region. Required
                    if destination_region is null or not provided.
                  format: ISO 3166-1 alpha-2
                  type: string
                destination_region:
                  default: none
                  description: The code of the region to which the listing ships.
                    A region represents a set of countries. Supported regions are
                    Europe Union and Non-Europe Union (countries in Europe not in
                    EU). If `none`, request sets destination to destination_country_iso.
                    Required if destination_country_iso is null or not provided.
                  enum:
                  - eu
                  - non_eu
                  - none
                  type: string
                shipping_carrier_id:
                  description: The unique ID of a supported shipping carrier, which
                    is used to calculate an Estimated Delivery Date. **Required with
                    `mail_class`** if `min_delivery_days` and `max_delivery_days`
                    are null.
                  minimum: 0
                  type: integer
                mail_class:
                  default: "null"
                  description: The unique ID string of a shipping carrier's mail class,
                    which is used to calculate an estimated delivery date. **Required
                    with `shipping_carrier_id`** if `min_delivery_days` and `max_delivery_days`
                    are null.
                  type: string
                min_delivery_days:
                  description: The minimum number of business days a buyer can expect
                    to wait to receive their purchased item once it has shipped. **Required
                    with `max_delivery_days`** if `mail_class` is null.
                  maximum: 45
                  minimum: 1
                  type: integer
                max_delivery_days:
                  description: The maximum number of business days a buyer can expect
                    to wait to receive their purchased item once it has shipped. **Required
                    with `min_delivery_days`** if `mail_class` is null.
                  maximum: 45
                  minimum: 1
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopShippingProfileDestination'
          description: A single shipping destination.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_w
      tags:
      - Shop ShippingProfile
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /v3/application/shops/{shop_id}/shipping-profiles/{shipping_profile_id}/upgrades:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves the list of shipping profile upgrades assigned to a specific shipping profile.
      operationId: getShopShippingProfileUpgrades
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
          associated with the listing. Required when listing type is `physical`.
        explode: false
        in: path
        name: shipping_profile_id
        required: true
        schema:
          description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
            associated with the listing. Required when listing type is `physical`.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopShippingProfileUpgrades'
          description: A list of shipping profile upgrades.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_r
      tags:
      - Shop ShippingProfile
      x-accepts: application/json
    post:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Creates a new shipping profile upgrade, which can establish a price for a shipping option, such as an alternate carrier or faster delivery.
      operationId: createShopShippingProfileUpgrade
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
          associated with the listing. Required when listing type is `physical`.
        explode: false
        in: path
        name: shipping_profile_id
        required: true
        schema:
          description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
            associated with the listing. Required when listing type is `physical`.
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_23'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                type:
                  description: The type of the shipping upgrade. Domestic (0) or international
                    (1).
                  enum:
                  - "0"
                  - "1"
                  type: string
                upgrade_name:
                  description: Name for the shipping upgrade shown to shoppers at
                    checkout, e.g. USPS Priority.
                  type: string
                price:
                  description: Additional cost of adding the shipping upgrade.
                  format: float
                  minimum: 0
                  type: number
                secondary_price:
                  description: Additional cost of adding the shipping upgrade for
                    each additional item.
                  format: float
                  minimum: 0
                  type: number
                shipping_carrier_id:
                  default: 0
                  description: The unique ID of a supported shipping carrier, which
                    is used to calculate an Estimated Delivery Date. **Required with
                    `mail_class`** if `min_delivery_days` and `max_delivery_days`
                    are null.
                  minimum: 0
                  type: integer
                mail_class:
                  default: "null"
                  description: The unique ID string of a shipping carrier's mail class,
                    which is used to calculate an estimated delivery date. **Required
                    with `shipping_carrier_id`** if `min_delivery_days` and `max_delivery_days`
                    are null.
                  type: string
                min_delivery_days:
                  description: The minimum number of business days a buyer can expect
                    to wait to receive their purchased item once it has shipped. **Required
                    with `max_delivery_days`** if `mail_class` is null.
                  maximum: 45
                  minimum: 1
                  type: integer
                max_delivery_days:
                  description: The maximum number of business days a buyer can expect
                    to wait to receive their purchased item once it has shipped. **Required
                    with `min_delivery_days`** if `mail_class` is null.
                  maximum: 45
                  minimum: 1
                  type: integer
              required:
              - price
              - secondary_price
              - type
              - upgrade_name
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopShippingProfileUpgrade'
          description: A single shipping profile upgrade.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_w
      tags:
      - Shop ShippingProfile
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /v3/application/shops/{shop_id}/shipping-profiles/{shipping_profile_id}/upgrades/{upgrade_id}:
    delete:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Deletes a shipping profile upgrade and removes the upgrade option from every listing that uses the associated shipping profile.
      operationId: deleteShopShippingProfileUpgrade
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID of the shipping profile.
        explode: false
        in: path
        name: shipping_profile_id
        required: true
        schema:
          description: The numeric ID of the shipping profile.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID that is associated with a shipping upgrade
        explode: false
        in: path
        name: upgrade_id
        required: true
        schema:
          description: The numeric ID that is associated with a shipping upgrade
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          description: Etsy deleted the shipping profile upgrade.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_w
      tags:
      - Shop ShippingProfile
      x-accepts: application/json
    put:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Updates a shipping profile upgrade and updates any listings that use the shipping profile.
      operationId: updateShopShippingProfileUpgrade
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
          associated with the listing. Required when listing type is `physical`.
        explode: false
        in: path
        name: shipping_profile_id
        required: true
        schema:
          description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
            associated with the listing. Required when listing type is `physical`.
          minimum: 1
          type: integer
        style: simple
      - description: The numeric ID that is associated with a shipping upgrade
        explode: false
        in: path
        name: upgrade_id
        required: true
        schema:
          description: The numeric ID that is associated with a shipping upgrade
          minimum: 1
          type: integer
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/inline_object_24'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                upgrade_name:
                  default: "null"
                  description: Name for the shipping upgrade shown to shoppers at
                    checkout, e.g. USPS Priority.
                  type: string
                type:
                  description: The type of the shipping upgrade. Domestic (0) or international
                    (1).
                  enum:
                  - "0"
                  - "1"
                  type: string
                price:
                  description: Additional cost of adding the shipping upgrade.
                  format: float
                  minimum: 0
                  type: number
                secondary_price:
                  description: Additional cost of adding the shipping upgrade for
                    each additional item.
                  format: float
                  minimum: 0
                  type: number
                shipping_carrier_id:
                  description: The unique ID of a supported shipping carrier, which
                    is used to calculate an Estimated Delivery Date. **Required with
                    `mail_class`** if `min_delivery_days` and `max_delivery_days`
                    are null.
                  minimum: 0
                  type: integer
                mail_class:
                  default: "null"
                  description: The unique ID string of a shipping carrier's mail class,
                    which is used to calculate an estimated delivery date. **Required
                    with `shipping_carrier_id`** if `min_delivery_days` and `max_delivery_days`
                    are null.
                  type: string
                min_delivery_days:
                  description: The minimum number of business days a buyer can expect
                    to wait to receive their purchased item once it has shipped. **Required
                    with `max_delivery_days`** if `mail_class` is null.
                  maximum: 45
                  minimum: 1
                  type: integer
                max_delivery_days:
                  description: The maximum number of business days a buyer can expect
                    to wait to receive their purchased item once it has shipped. **Required
                    with `min_delivery_days`** if `mail_class` is null.
                  maximum: 45
                  minimum: 1
                  type: integer
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopShippingProfileUpgrade'
          description: A single shipping profile upgrade.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_w
      tags:
      - Shop ShippingProfile
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /v3/application/scopes:
    post:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Check the scopes of the provided token
      operationId: tokenScopes
      requestBody:
        $ref: '#/components/requestBodies/inline_object_25'
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                token:
                  type: string
              required:
              - token
              type: object
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scopes'
          description: A confirmation that the current application has access to the
            Open API
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: Missing or invalid API key.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      tags:
      - Other
      x-contentType: application/x-www-form-urlencoded
      x-accepts: application/json
  /v3/application/shops/{shop_id}/transactions/{transaction_id}:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves a transaction by transaction ID.
      operationId: getShopReceiptTransaction
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The unique numeric ID for a transaction.
        explode: false
        in: path
        name: transaction_id
        required: true
        schema:
          description: The unique numeric ID for a transaction.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopReceiptTransaction'
          description: A single transaction
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - transactions_r
      tags:
      - Shop Receipt Transactions
      x-accepts: application/json
  /v3/application/shops/{shop_id}/transactions:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Retrieves the list of transactions associated with a shop.
      operationId: getShopReceiptTransactionsByShop
      parameters:
      - description: The unique positive non-zero numeric ID for an Etsy Shop.
        explode: false
        in: path
        name: shop_id
        required: true
        schema:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        style: simple
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The number of records to skip before selecting the first result.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: The number of records to skip before selecting the first result.
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShopReceiptTransactions'
          description: A list of transactions
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request attempted to perform an operation it is not allowed
            to. See the error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - transactions_r
      tags:
      - Shop Receipt Transactions
      x-accepts: application/json
  /v3/application/user/addresses/{user_address_id}:
    delete:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Open API V3 endpoint to delete a UserAddress for a User.
      operationId: deleteUserAddress
      parameters:
      - description: The numeric ID of the user's address.
        explode: false
        in: path
        name: user_address_id
        required: true
        schema:
          description: The numeric ID of the user's address.
          minimum: 1
          type: integer
        style: simple
      responses:
        "204":
          description: The User Address resource was correctly deleted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - address_r
      tags:
      - UserAddress
      x-accepts: application/json
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-01 wt-mr-xs-2"> Feedback only </span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Give feedback</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">Development for this endpoint is in progress. It will only return a 501 response.</p></div>

        Open API V3 endpoint to retrieve a UserAddress for a User.
      operationId: getUserAddress
      parameters:
      - description: The numeric ID of the user's address.
        explode: false
        in: path
        name: user_address_id
        required: true
        schema:
          description: The numeric ID of the user's address.
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
          description: A single UserAddress
        "501":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: This endpoint is not functional at this time.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - address_r
      tags:
      - UserAddress
      x-accepts: application/json
  /v3/application/user/addresses:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Open API V3 endpoint to retrieve UserAddresses for a User.
      operationId: getUserAddresses
      parameters:
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          description: The maximum number of results to return.
          maximum: 100
          minimum: 1
          type: integer
        style: form
      - description: The number of records to skip before selecting the first result.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: The number of records to skip before selecting the first result.
          minimum: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddresses'
          description: A list of UserAddress records
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - address_r
      tags:
      - UserAddress
      x-accepts: application/json
  /v3/application/users/{user_id}:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Returns user profile for the user identified by a user ID.
      operationId: getUser
      parameters:
      - explode: false
        in: path
        name: user_id
        required: true
        schema:
          minimum: 1
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: A single User
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - email_r
      tags:
      - User
      x-accepts: application/json
  /v3/application/users/me:
    get:
      description: |-
        <div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><span class="wt-badge wt-badge--notification-03 wt-bg-slime-tint wt-mr-xs-2">General Release</span><a class="wt-text-link" href="https://github.com/etsy/open-api/discussions" target="_blank" rel="noopener noreferrer">Report bug</a></div><div class="wt-display-flex-xs wt-align-items-center wt-mt-xs-2 wt-mb-xs-3"><p class="wt-text-body-01 banner-text">This endpoint is ready for production use.</p></div>

        Returns basic info for the user making the request.
      operationId: getMe
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Self'
          description: Fetches basic info about the requesting user
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: A resource could not be found. See the error message for details.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: There was a problem with the request data. See the error message
            for details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The request lacks valid authentication credentials. See the
            error message for details.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchema'
          description: The server encountered an internal error. See the error message
            for details.
      security:
      - api_key: []
        oauth2:
        - shops_r
      tags:
      - User
      x-accepts: application/json
components:
  requestBodies:
    inline_object_10:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object_10'
    inline_object_12:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_12'
    inline_object_11:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_11'
    inline_object_14:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_14'
    inline_object_13:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_13'
    inline_object_16:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_16'
    inline_object_15:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_15'
    inline_object_1:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object_1'
    inline_object_9:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_9'
    inline_object_21:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_21'
    inline_object_8:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_8'
    inline_object_20:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_20'
    inline_object_7:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_7'
    inline_object_23:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_23'
    inline_object_6:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_6'
    inline_object_22:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_22'
    inline_object_5:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_5'
    inline_object_25:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_25'
    inline_object_4:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_4'
    inline_object_24:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_24'
    inline_object_3:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object_3'
    inline_object_2:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/inline_object_2'
    inline_object_18:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_18'
    inline_object_17:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_17'
    inline_object_19:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object_19'
    inline_object:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/inline_object'
  schemas:
    BuyerTaxonomyNodes:
      description: A list of taxonomy nodes from the buyer taxonomy tree.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          description: The number of results.
          minimum: 0
          type: integer
        results:
          description: The list of requested resources.
          items:
            allOf:
            - $ref: '#/components/schemas/BuyerTaxonomyNode'
            description: The list of requested resources.
          type: array
      type: object
    BuyerTaxonomyNode:
      description: A taxonomy node in the buyer taxonomy tree.
      properties:
        id:
          description: 'The unique numeric ID of an Etsy taxonomy node, which is a
            metadata category for listings organized into the seller taxonomy hierarchy
            tree. For example, the \"shoes\" taxonomy node (ID: 1429, level: 1) is
            higher in the hierarchy than \"girls'' shoes\" (ID: 1440, level: 2). The
            taxonomy nodes assigned to a listing support access to specific standardized
            product scales and properties. For example, listings assigned the taxonomy
            nodes \"shoes\" or \"girls'' shoes\" support access to the \"EU\" shoe
            size scale with its associated property names and IDs for EU shoe sizes,
            such as property `value_id`:\"1394\", and `name`:\"38\".'
          minimum: 1
          type: integer
        level:
          description: The integer depth of this taxonomy node in the seller taxonomy
            tree, with roots at level 0.
          minimum: 0
          type: integer
        name:
          description: The name string for this taxonomy node.
          type: string
        parent_id:
          description: The numeric taxonomy ID of the parent of this node.
          minimum: 1
          nullable: true
          type: integer
        children:
          description: An array of taxonomy nodes for all the direct children of this
            taxonomy node in the seller taxonomy tree.
          items:
            allOf:
            - $ref: '#/components/schemas/BuyerTaxonomyNode'
            description: An array of taxonomy nodes for all the direct children of
              this taxonomy node in the seller taxonomy tree.
          type: array
        full_path_taxonomy_ids:
          description: An array of `taxonomy_id`s including this node and all of its
            direct parents in the seller taxonomy tree up to a root node. They are
            listed in order from root to leaf.
          items:
            minimum: 1
            type: integer
          type: array
      type: object
    ErrorSchema:
      properties:
        error:
          type: string
      required:
      - error
      type: object
    BuyerTaxonomyNodeProperties:
      description: A list of product property definitions.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          description: The number of results.
          minimum: 0
          type: integer
        results:
          description: The list of requested resources.
          items:
            allOf:
            - $ref: '#/components/schemas/BuyerTaxonomyNodeProperty'
            description: The list of requested resources.
          type: array
      type: object
    BuyerTaxonomyNodeProperty:
      description: A product property definition.
      properties:
        property_id:
          description: The unique numeric ID of this product property.
          minimum: 1
          type: integer
        name:
          description: The name string for this taxonomy node.
          type: string
        display_name:
          description: The human-readable product property name string.
          type: string
        scales:
          description: A list of available scales.
          items:
            allOf:
            - $ref: '#/components/schemas/BuyerTaxonomyPropertyScale'
            description: A list of available scales.
          type: array
        is_required:
          description: When true, listings assigned eligible taxonomy IDs require
            this property.
          type: boolean
        supports_attributes:
          description: When true, you can use this property in listing attributes.
          type: boolean
        supports_variations:
          description: When true, you can use this property in listing variations.
          type: boolean
        is_multivalued:
          description: When true, you can assign multiple property values to this
            property
          type: boolean
        max_values_allowed:
          description: When true, you can assign multiple property values to this
            property
          nullable: true
          type: integer
        possible_values:
          description: A list of supported property value strings for this property.
          items:
            allOf:
            - $ref: '#/components/schemas/BuyerTaxonomyPropertyValue'
            description: A list of supported property value strings for this property.
          type: array
        selected_values:
          description: A list of property value strings automatically and always selected
            for the given property.
          items:
            allOf:
            - $ref: '#/components/schemas/BuyerTaxonomyPropertyValue'
            description: A list of property value strings automatically and always
              selected for the given property.
          type: array
      type: object
    BuyerTaxonomyPropertyScale:
      description: A scale defnining the assignable increments for the property values
        available to specific product properties.
      properties:
        scale_id:
          description: The unique numeric ID of a scale.
          minimum: 1
          type: integer
        display_name:
          description: The name string for a scale.
          type: string
        description:
          description: The description string for a scale.
          type: string
      type: object
    BuyerTaxonomyPropertyValue:
      description: A property value for a specific product property, which may also
        employ a specific scale.
      properties:
        value_id:
          description: The numeric ID of this property value.
          minimum: 1
          nullable: true
          type: integer
        name:
          description: The name string of this property value.
          type: string
        scale_id:
          description: The numeric scale ID of the scale to which this property value
            belongs.
          minimum: 1
          nullable: true
          type: integer
        equal_to:
          description: A list of numeric property value IDs this property value is
            equal to (if any).
          items:
            minimum: 0
            type: integer
          type: array
      type: object
    ShopListing:
      description: A listing from a shop, which contains a product quantity, title,
        description, price, etc.
      example:
        is_customizable: true
        has_variations: true
        language: language
        processing_max: 0
        shipping_profile_id: 1
        file_data: file_data
        state_timestamp: 946684800
        item_weight: 5.025005
        personalization_instructions: personalization_instructions
        updated_timestamp: 946684800
        processing_min: 0
        original_creation_timestamp: 946684800
        price: ""
        state: active
        non_taxable: true
        num_favorers: 0
        listing_type: physical
        should_auto_renew: true
        featured_rank: 1
        tags:
        - tags
        - tags
        is_supply: true
        shop_id: 1
        item_dimensions_unit: in
        user_id: 1
        materials:
        - materials
        - materials
        when_made: made_to_order
        style:
        - style
        - style
        item_width: 9.36931
        is_private: true
        listing_id: 1
        last_modified_timestamp: 946684800
        description: description
        title: title
        item_height: 6.6835623
        item_length: 9.965781
        quantity: 0
        creation_timestamp: 946684800
        personalization_is_required: true
        ending_timestamp: 946684800
        created_timestamp: 946684800
        item_weight_unit: oz
        shop_section_id: 1
        personalization_char_count_max: 1
        return_policy_id: 1
        url: url
        taxonomy_id: 8
        is_personalizable: true
        who_made: i_did
        is_taxable: true
      properties:
        listing_id:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        user_id:
          description: The numeric ID for the [user](/documentation/reference#tag/User)
            posting the listing.
          minimum: 1
          type: integer
        shop_id:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        title:
          description: 'The listing''s title string. When creating or updating a listing,
            valid title strings contain only letters, numbers, punctuation marks,
            mathematical symbols, whitespace characters, ™, ©, and ®. (regex: /[^\\p{L}\\p{Nd}\\p{P}\\p{Sm}\\p{Zs}™©®]/u)
            You can only use the %, :, & and + characters once each.'
          type: string
        description:
          description: A description string of the product for sale in the listing.
          type: string
        state:
          description: 'When _updating_ a listing, this value can be either `active`
            or `inactive`. Note: Setting a `draft` listing to `active` will also publish
            the listing on etsy.com and requires that the listing have an image set.
            Setting a `sold_out` listing to active will update the quantity to 1 and
            renew the listing on etsy.com.'
          enum:
          - active
          - inactive
          - sold_out
          - draft
          - expired
          type: string
        creation_timestamp:
          description: The listing\'s creation time, in epoch seconds.
          minimum: 946684800
          type: integer
        created_timestamp:
          description: The listing\'s creation time, in epoch seconds.
          minimum: 946684800
          type: integer
        ending_timestamp:
          description: The listing\'s expiration time, in epoch seconds.
          minimum: 946684800
          type: integer
        original_creation_timestamp:
          description: The listing\'s creation time, in epoch seconds.
          minimum: 946684800
          type: integer
        last_modified_timestamp:
          description: The time of the last update to the listing, in epoch seconds.
          minimum: 946684800
          type: integer
        updated_timestamp:
          description: The time of the last update to the listing, in epoch seconds.
          minimum: 946684800
          type: integer
        state_timestamp:
          description: The date and time of the last state change of this listing.
          minimum: 946684800
          type: integer
        quantity:
          description: 'The positive non-zero number of products available for purchase
            in the listing. Note: The listing quantity is the sum of available offering
            quantities. You can request the quantities for individual offerings from
            the ListingInventory resource using the [getListingInventory](/documentation/reference#operation/getListingInventory)
            endpoint.'
          minimum: 0
          type: integer
        shop_section_id:
          description: The numeric ID of a section in a specific Etsy shop.
          minimum: 1
          nullable: true
          type: integer
        featured_rank:
          description: The positive non-zero numeric position in the featured listings
            of the shop, with rank 1 listings appearing in the left-most position
            in featured listing on a shop’s home page.
          type: integer
        url:
          description: The full URL to the listing's page on Etsy.
          type: string
        num_favorers:
          description: The number of users who marked this Listing a favorite.
          minimum: 0
          type: integer
        non_taxable:
          description: When true, applicable [shop](/documentation/reference#tag/Shop)
            tax rates do not apply to this listing at checkout.
          type: boolean
        is_taxable:
          description: When true, applicable [shop](/documentation/reference#tag/Shop)
            tax rates apply to this listing at checkout.
          type: boolean
        is_customizable:
          description: When true, a buyer may contact the seller for a customized
            order. The default value is true when a shop accepts custom orders. Does
            not apply to shops that do not accept custom orders.
          type: boolean
        is_personalizable:
          description: When true, this listing is personalizable. The default value
            is null.
          type: boolean
        personalization_is_required:
          description: When true, this listing requires personalization. The default
            value is null. Will only change if is_personalizable is 'true'.
          type: boolean
        personalization_char_count_max:
          description: This is an integer value representing the maximum length for
            the personalization message entered by the buyer. Will only change if
            is_personalizable is 'true'.
          nullable: true
          type: integer
        personalization_instructions:
          description: When true, this listing requires personalization. The default
            value is null. Will only change if is_personalizable is 'true'.
          nullable: true
          type: string
        listing_type:
          description: An enumerated type string that indicates whether the listing
            is physical or a digital download.
          enum:
          - physical
          - download
          - both
          type: string
        tags:
          description: 'A comma-separated list of tag strings for the listing. When
            creating or updating a listing, valid tag strings contain only letters,
            numbers, whitespace characters, -, '', ™, ©, and ®. (regex: /[^\\p{L}\\p{Nd}\\p{Zs}\\-''™©®]/u)
            Default value is null.'
          items:
            type: string
          type: array
        materials:
          description: 'A list of material strings for materials used in the product.
            Valid materials strings contain only letters, numbers, and whitespace
            characters. (regex: /[^\\p{L}\\p{Nd}\\p{Zs}]/u) Default value is null.'
          items:
            type: string
          type: array
        shipping_profile_id:
          description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
            associated with the listing. Required when listing type is `physical`.
          minimum: 1
          nullable: true
          type: integer
        return_policy_id:
          description: The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
          minimum: 1
          nullable: true
          type: integer
        processing_min:
          description: The minimum number of days required to process this listing.
            Default value is null.
          minimum: 0
          nullable: true
          type: integer
        processing_max:
          description: The maximum number of days required to process this listing.
            Default value is null.
          minimum: 0
          nullable: true
          type: integer
        who_made:
          description: An enumerated string indicating who made the product. Helps
            buyers locate the listing under the Handmade heading. Requires 'is_supply'
            and 'when_made'.
          enum:
          - i_did
          - someone_else
          - collective
          nullable: true
          type: string
        when_made:
          description: An enumerated string for the era in which the maker made the
            product in this listing. Helps buyers locate the listing under the Vintage
            heading. Requires 'is_supply' and 'who_made'.
          enum:
          - made_to_order
          - 2020_2023
          - 2010_2019
          - 2004_2009
          - before_2004
          - 2000_2003
          - 1990s
          - 1980s
          - 1970s
          - 1960s
          - 1950s
          - 1940s
          - 1930s
          - 1920s
          - 1910s
          - 1900s
          - 1800s
          - 1700s
          - before_1700
          nullable: true
          type: string
        is_supply:
          description: When true, tags the listing as a supply product, else indicates
            that it's a finished product. Helps buyers locate the listing under the
            Supplies heading. Requires 'who_made' and 'when_made'.
          nullable: true
          type: boolean
        item_weight:
          description: The numeric weight of the product measured in units set in
            \'item_weight_unit\'. Default value is null. If set, the value must be
            greater than 0.
          format: float
          nullable: true
          type: number
        item_weight_unit:
          description: A string defining the units used to measure the weight of the
            product. Default value is null.
          enum:
          - oz
          - lb
          - g
          - kg
          nullable: true
          type: string
        item_length:
          description: The numeric length of the product measured in units set in
            \'item_dimensions_unit\'. Default value is null. If set, the value must
            be greater than 0.
          format: float
          nullable: true
          type: number
        item_width:
          description: The numeric width of the product measured in units set in \'item_dimensions_unit\'.
            Default value is null. If set, the value must be greater than 0.
          format: float
          nullable: true
          type: number
        item_height:
          description: The numeric length of the product measured in units set in
            \'item_dimensions_unit\'. Default value is null. If set, the value must
            be greater than 0.
          format: float
          nullable: true
          type: number
        item_dimensions_unit:
          description: A string defining the units used to measure the dimensions
            of the product. Default value is null.
          enum:
          - in
          - ft
          - mm
          - cm
          - m
          - yd
          - inches
          nullable: true
          type: string
        is_private:
          description: When true, this is a private listing intended for a specific
            buyer and hidden from shop view.
          type: boolean
        style:
          description: 'An array of style strings for this listing, each of which
            is free-form text string such as \"Formal\", or \"Steampunk\". When creating
            or updating a listing, the listing may have up to two styles. Valid style
            strings contain only letters, numbers, and whitespace characters. (regex:
            /[^\\p{L}\\p{Nd}\\p{Zs}]/u) Default value is null.'
          items:
            type: string
          type: array
        file_data:
          description: A string describing the files attached to a digital listing.
          type: string
        has_variations:
          description: When true, the listing has variations.
          type: boolean
        should_auto_renew:
          description: When true, renews a listing for four months upon expiration.
          type: boolean
        language:
          description: 'The IETF language tag for the default language of the listing.
            Ex: `de`, `en`, `es`, `fr`, `it`, `ja`, `nl`, `pl`, `pt`, `ru`.'
          nullable: true
          type: string
        price:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: 'The positive non-zero price of the product. (Sold product
            listings are private) Note: The price is the minimum possible price. The
            [`getListingInventory`](/documentation/reference/#operation/getListingInventory)
            method requests exact prices for available offerings.'
        taxonomy_id:
          description: The numerical taxonomy ID of the listing. See [SellerTaxonomy](/documentation/reference#tag/SellerTaxonomy)
            and [BuyerTaxonomy](/documentation/reference#tag/BuyerTaxonomy) for more
            information.
          nullable: true
          type: integer
      type: object
    Money:
      description: A representation of an amount of money.
      properties:
        amount:
          description: The amount of represented by this data.
          type: integer
        divisor:
          description: The divisor to render the amount.
          minimum: 0
          type: integer
        currency_code:
          description: The ISO currency code for this data.
          type: string
      type: object
    ShopListingFile:
      description: A file associated with a digital listing.
      example:
        filetype: filetype
        listing_file_id: 1
        filename: filename
        size_bytes: 0
        listing_id: 1
        create_timestamp: 946684800
        rank: 0
        created_timestamp: 946684800
        filesize: filesize
      properties:
        listing_file_id:
          description: The unique numeric ID of a file associated with a digital listing.
          minimum: 1
          type: integer
        listing_id:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        rank:
          description: The numeric index of the display order position of this file
            in the listing, starting at 1.
          minimum: 0
          type: integer
        filename:
          description: The file name string for a file associated with a digital listing.
          type: string
        filesize:
          description: A human-readable format size string for the size of a file.
          type: string
        size_bytes:
          description: A number indicating the size of a file, measured in bytes.
          minimum: 0
          type: integer
        filetype:
          description: A type string indicating a file's MIME type.
          type: string
        create_timestamp:
          description: The unique numeric ID of a file associated with a digital listing.
          minimum: 946684800
          type: integer
        created_timestamp:
          description: The unique numeric ID of a file associated with a digital listing.
          minimum: 946684800
          type: integer
      type: object
    ShopListingFiles:
      description: Represents several ShopListingFiles.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          description: The number of ShopListingFiles being returned..
          minimum: 0
          type: integer
        results:
          description: An array of ShopListingFile resources.
          items:
            allOf:
            - $ref: '#/components/schemas/ShopListingFile'
            description: An array of ShopListingFile resources.
          type: array
      type: object
    ShopListings:
      description: A set of ShopListing resources.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          description: The number of ShopListing resources found.
          minimum: 0
          type: integer
        results:
          description: The ShopListing resources found.
          items:
            allOf:
            - $ref: '#/components/schemas/ShopListing'
            description: The ShopListing resources found.
          type: array
      type: object
    ShopListingWithAssociations:
      description: A listing from a shop, which contains a product quantity, title,
        description, price, etc. and additional fields which represent associations.
      example:
        is_customizable: true
        has_variations: true
        language: language
        videos:
        - ""
        - ""
        processing_max: 0
        shipping_profile_id: 1
        file_data: file_data
        state_timestamp: 946684800
        item_weight: 5.025005
        personalization_instructions: personalization_instructions
        updated_timestamp: 946684800
        processing_min: 0
        original_creation_timestamp: 946684800
        price: ""
        production_partners:
        - ""
        - ""
        translations:
        - ""
        - ""
        state: active
        images:
        - ""
        - ""
        non_taxable: true
        num_favorers: 0
        listing_type: physical
        should_auto_renew: true
        featured_rank: 1
        tags:
        - tags
        - tags
        is_supply: true
        shop_id: 1
        item_dimensions_unit: in
        user_id: 1
        materials:
        - materials
        - materials
        shipping_profile: ""
        when_made: made_to_order
        style:
        - style
        - style
        item_width: 9.36931
        is_private: true
        shop: ""
        skus:
        - skus
        - skus
        listing_id: 1
        last_modified_timestamp: 946684800
        description: description
        title: title
        inventory: ""
        item_height: 6.6835623
        views: 9
        item_length: 9.965781
        quantity: 0
        creation_timestamp: 946684800
        personalization_is_required: true
        ending_timestamp: 946684800
        created_timestamp: 946684800
        item_weight_unit: oz
        shop_section_id: 1
        personalization_char_count_max: 1
        return_policy_id: 1
        url: url
        taxonomy_id: 8
        is_personalizable: true
        who_made: i_did
        user: ""
        is_taxable: true
      properties:
        listing_id:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        user_id:
          description: The numeric ID for the [user](/documentation/reference#tag/User)
            posting the listing.
          minimum: 1
          type: integer
        shop_id:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        title:
          description: 'The listing''s title string. When creating or updating a listing,
            valid title strings contain only letters, numbers, punctuation marks,
            mathematical symbols, whitespace characters, ™, ©, and ®. (regex: /[^\\p{L}\\p{Nd}\\p{P}\\p{Sm}\\p{Zs}™©®]/u)
            You can only use the %, :, & and + characters once each.'
          type: string
        description:
          description: A description string of the product for sale in the listing.
          type: string
        state:
          description: 'When _updating_ a listing, this value can be either `active`
            or `inactive`. Note: Setting a `draft` listing to `active` will also publish
            the listing on etsy.com and requires that the listing have an image set.
            Setting a `sold_out` listing to active will update the quantity to 1 and
            renew the listing on etsy.com.'
          enum:
          - active
          - inactive
          - sold_out
          - draft
          - expired
          type: string
        creation_timestamp:
          description: The listing\'s creation time, in epoch seconds.
          minimum: 946684800
          type: integer
        created_timestamp:
          description: The listing\'s creation time, in epoch seconds.
          minimum: 946684800
          type: integer
        ending_timestamp:
          description: The listing\'s expiration time, in epoch seconds.
          minimum: 946684800
          type: integer
        original_creation_timestamp:
          description: The listing\'s creation time, in epoch seconds.
          minimum: 946684800
          type: integer
        last_modified_timestamp:
          description: The time of the last update to the listing, in epoch seconds.
          minimum: 946684800
          type: integer
        updated_timestamp:
          description: The time of the last update to the listing, in epoch seconds.
          minimum: 946684800
          type: integer
        state_timestamp:
          description: The date and time of the last state change of this listing.
          minimum: 946684800
          type: integer
        quantity:
          description: 'The positive non-zero number of products available for purchase
            in the listing. Note: The listing quantity is the sum of available offering
            quantities. You can request the quantities for individual offerings from
            the ListingInventory resource using the [getListingInventory](/documentation/reference#operation/getListingInventory)
            endpoint.'
          minimum: 0
          type: integer
        shop_section_id:
          description: The numeric ID of a section in a specific Etsy shop.
          minimum: 1
          nullable: true
          type: integer
        featured_rank:
          description: The positive non-zero numeric position in the featured listings
            of the shop, with rank 1 listings appearing in the left-most position
            in featured listing on a shop’s home page.
          type: integer
        url:
          description: The full URL to the listing's page on Etsy.
          type: string
        num_favorers:
          description: The number of users who marked this Listing a favorite.
          minimum: 0
          type: integer
        non_taxable:
          description: When true, applicable [shop](/documentation/reference#tag/Shop)
            tax rates do not apply to this listing at checkout.
          type: boolean
        is_taxable:
          description: When true, applicable [shop](/documentation/reference#tag/Shop)
            tax rates apply to this listing at checkout.
          type: boolean
        is_customizable:
          description: When true, a buyer may contact the seller for a customized
            order. The default value is true when a shop accepts custom orders. Does
            not apply to shops that do not accept custom orders.
          type: boolean
        is_personalizable:
          description: When true, this listing is personalizable. The default value
            is null.
          type: boolean
        personalization_is_required:
          description: When true, this listing requires personalization. The default
            value is null. Will only change if is_personalizable is 'true'.
          type: boolean
        personalization_char_count_max:
          description: This is an integer value representing the maximum length for
            the personalization message entered by the buyer. Will only change if
            is_personalizable is 'true'.
          nullable: true
          type: integer
        personalization_instructions:
          description: When true, this listing requires personalization. The default
            value is null. Will only change if is_personalizable is 'true'.
          nullable: true
          type: string
        listing_type:
          description: An enumerated type string that indicates whether the listing
            is physical or a digital download.
          enum:
          - physical
          - download
          - both
          type: string
        tags:
          description: 'A comma-separated list of tag strings for the listing. When
            creating or updating a listing, valid tag strings contain only letters,
            numbers, whitespace characters, -, '', ™, ©, and ®. (regex: /[^\\p{L}\\p{Nd}\\p{Zs}\\-''™©®]/u)
            Default value is null.'
          items:
            type: string
          type: array
        materials:
          description: 'A list of material strings for materials used in the product.
            Valid materials strings contain only letters, numbers, and whitespace
            characters. (regex: /[^\\p{L}\\p{Nd}\\p{Zs}]/u) Default value is null.'
          items:
            type: string
          type: array
        shipping_profile_id:
          description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
            associated with the listing. Required when listing type is `physical`.
          minimum: 1
          nullable: true
          type: integer
        return_policy_id:
          description: The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
          minimum: 1
          nullable: true
          type: integer
        processing_min:
          description: The minimum number of days required to process this listing.
            Default value is null.
          minimum: 0
          nullable: true
          type: integer
        processing_max:
          description: The maximum number of days required to process this listing.
            Default value is null.
          minimum: 0
          nullable: true
          type: integer
        who_made:
          description: An enumerated string indicating who made the product. Helps
            buyers locate the listing under the Handmade heading. Requires 'is_supply'
            and 'when_made'.
          enum:
          - i_did
          - someone_else
          - collective
          nullable: true
          type: string
        when_made:
          description: An enumerated string for the era in which the maker made the
            product in this listing. Helps buyers locate the listing under the Vintage
            heading. Requires 'is_supply' and 'who_made'.
          enum:
          - made_to_order
          - 2020_2023
          - 2010_2019
          - 2004_2009
          - before_2004
          - 2000_2003
          - 1990s
          - 1980s
          - 1970s
          - 1960s
          - 1950s
          - 1940s
          - 1930s
          - 1920s
          - 1910s
          - 1900s
          - 1800s
          - 1700s
          - before_1700
          nullable: true
          type: string
        is_supply:
          description: When true, tags the listing as a supply product, else indicates
            that it's a finished product. Helps buyers locate the listing under the
            Supplies heading. Requires 'who_made' and 'when_made'.
          nullable: true
          type: boolean
        item_weight:
          description: The numeric weight of the product measured in units set in
            \'item_weight_unit\'. Default value is null. If set, the value must be
            greater than 0.
          format: float
          nullable: true
          type: number
        item_weight_unit:
          description: A string defining the units used to measure the weight of the
            product. Default value is null.
          enum:
          - oz
          - lb
          - g
          - kg
          nullable: true
          type: string
        item_length:
          description: The numeric length of the product measured in units set in
            \'item_dimensions_unit\'. Default value is null. If set, the value must
            be greater than 0.
          format: float
          nullable: true
          type: number
        item_width:
          description: The numeric width of the product measured in units set in \'item_dimensions_unit\'.
            Default value is null. If set, the value must be greater than 0.
          format: float
          nullable: true
          type: number
        item_height:
          description: The numeric length of the product measured in units set in
            \'item_dimensions_unit\'. Default value is null. If set, the value must
            be greater than 0.
          format: float
          nullable: true
          type: number
        item_dimensions_unit:
          description: A string defining the units used to measure the dimensions
            of the product. Default value is null.
          enum:
          - in
          - ft
          - mm
          - cm
          - m
          - yd
          - inches
          nullable: true
          type: string
        is_private:
          description: When true, this is a private listing intended for a specific
            buyer and hidden from shop view.
          type: boolean
        style:
          description: 'An array of style strings for this listing, each of which
            is free-form text string such as \"Formal\", or \"Steampunk\". When creating
            or updating a listing, the listing may have up to two styles. Valid style
            strings contain only letters, numbers, and whitespace characters. (regex:
            /[^\\p{L}\\p{Nd}\\p{Zs}]/u) Default value is null.'
          items:
            type: string
          type: array
        file_data:
          description: A string describing the files attached to a digital listing.
          type: string
        has_variations:
          description: When true, the listing has variations.
          type: boolean
        should_auto_renew:
          description: When true, renews a listing for four months upon expiration.
          type: boolean
        language:
          description: 'The IETF language tag for the default language of the listing.
            Ex: `de`, `en`, `es`, `fr`, `it`, `ja`, `nl`, `pl`, `pt`, `ru`.'
          nullable: true
          type: string
        price:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: 'The positive non-zero price of the product. (Sold product
            listings are private) Note: The price is the minimum possible price. The
            [`getListingInventory`](/documentation/reference/#operation/getListingInventory)
            method requests exact prices for available offerings.'
        taxonomy_id:
          description: The numerical taxonomy ID of the listing. See [SellerTaxonomy](/documentation/reference#tag/SellerTaxonomy)
            and [BuyerTaxonomy](/documentation/reference#tag/BuyerTaxonomy) for more
            information.
          nullable: true
          type: integer
        shipping_profile:
          allOf:
          - $ref: '#/components/schemas/ShopShippingProfile'
          description: An array of data representing the shipping profile resource.
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          description: Represents a single user of the site
        shop:
          allOf:
          - $ref: '#/components/schemas/Shop'
          description: A shop created by an Etsy user.
        images:
          description: Represents a list of listing image resources, each of which
            contains the reference URLs and metadata for an image
          items:
            allOf:
            - $ref: '#/components/schemas/ListingImage'
            description: Represents a list of listing image resources, each of which
              contains the reference URLs and metadata for an image
          type: array
        videos:
          description: The single video associated with a listing.
          items:
            allOf:
            - $ref: '#/components/schemas/ListingVideo'
            description: The single video associated with a listing.
          type: array
        inventory:
          allOf:
          - $ref: '#/components/schemas/ListingInventory'
          description: An enumerated string that attaches a valid association. Default
            value is null.
        production_partners:
          description: Represents a list of production partners for a shop.
          items:
            allOf:
            - $ref: '#/components/schemas/ShopProductionPartner'
            description: Represents a list of production partners for a shop.
          type: array
        skus:
          description: A list of SKU strings for the listing. SKUs will only appear
            if the requesting user owns the shop and a valid matching OAuth 2 token
            is provided. When requested without the token it will be an empty array.
          items:
            type: string
          type: array
        translations:
          description: An array of translations for the listing. Default value is
            an empty array.
          items:
            allOf:
            - $ref: '#/components/schemas/ListingTranslation'
            description: An array of translations for the listing. Default value is
              an empty array.
          type: array
        views:
          description: The number of times the listing has been viewed. This value
            is tabulated once per day and **only for active listings**, so the value
            is not real-time. If `0`, the listing has either not been viewed, not
            yet tabulated, was not active during the last tabulation or there was
            an error fetching the value. If a value is expected, call `getListing`
            to confirm the value.
          type: integer
      type: object
    ShopShippingProfile:
      description: Represents a profile used to set a listing's shipping information.
        Please note that it's not possible to create calculated shipping templates
        via the API. However, you can associate calculated shipping profiles created
        from Shop Manager with listings using the API.
      example:
        shipping_profile_destinations:
        - ""
        - ""
        profile_type: manual
        min_processing_days: 0
        domestic_handling_fee: 0.5637377
        title: title
        max_processing_days: 0
        shipping_profile_id: 1
        international_handling_fee: 0.23021358
        is_deleted: true
        user_id: 1
        origin_country_iso: origin_country_iso
        origin_postal_code: origin_postal_code
        processing_days_display_label: processing_days_display_label
        shipping_profile_upgrades:
        - ""
        - ""
      properties:
        shipping_profile_id:
          description: The numeric ID of the shipping profile.
          minimum: 1
          type: integer
        title:
          description: The name string of this shipping profile.
          nullable: true
          type: string
        user_id:
          description: The numeric ID for the [user](/documentation/reference#tag/User)
            who owns the shipping profile.
          minimum: 1
          type: integer
        min_processing_days:
          description: The minimum number of days for processing the listing.
          minimum: 0
          nullable: true
          type: integer
        max_processing_days:
          description: The maximum number of days for processing the listing.
          minimum: 0
          nullable: true
          type: integer
        processing_days_display_label:
          description: Translated display label string for processing days.
          type: string
        origin_country_iso:
          description: The ISO code of the country from which the listing ships.
          format: ISO 3166-1 alpha-2
          type: string
        is_deleted:
          description: When true, someone deleted this shipping profile.
          type: boolean
        shipping_profile_destinations:
          description: A list of [shipping profile destinations](/documentation/reference/#operation/createShopShippingProfileDestination)
            available for this shipping profile.
          items:
            allOf:
            - $ref: '#/components/schemas/ShopShippingProfileDestination'
            description: A list of [shipping profile destinations](/documentation/reference/#operation/createShopShippingProfileDestination)
              available for this shipping profile.
          type: array
        shipping_profile_upgrades:
          description: A list of [shipping profile upgrades](/documentation/reference/#operation/createShopShippingProfileUpgrade)
            available for this shipping profile.
          items:
            allOf:
            - $ref: '#/components/schemas/ShopShippingProfileUpgrade'
            description: A list of [shipping profile upgrades](/documentation/reference/#operation/createShopShippingProfileUpgrade)
              available for this shipping profile.
          type: array
        origin_postal_code:
          description: The postal code string (not necessarily a number) for the location
            from which the listing ships. Required if the `origin_country_iso` is
            `US` or `CA`.
          nullable: true
          type: string
        profile_type:
          enum:
          - manual
          - calculated
          type: string
        domestic_handling_fee:
          default: 0
          description: The domestic handling fee added to buyer's shipping total -
            only available for calculated shipping profiles.
          format: float
          minimum: 0
          type: number
        international_handling_fee:
          default: 0
          description: The international handling fee added to buyer's shipping total
            - only available for calculated shipping profiles.
          format: float
          minimum: 0
          type: number
      type: object
    ShopShippingProfileDestination:
      description: Represents a shipping destination assigned to a shipping profile.
      example:
        mail_class: mail_class
        destination_country_iso: destination_country_iso
        primary_cost: ""
        shipping_profile_destination_id: 1
        origin_country_iso: origin_country_iso
        destination_region: eu
        shipping_carrier_id: 1
        max_delivery_days: 25
        secondary_cost: ""
        min_delivery_days: 27
        shipping_profile_id: 1
      properties:
        shipping_profile_destination_id:
          description: The numeric ID of the shipping profile destination in the [shipping
            profile](/documentation/reference#tag/Shop-ShippingProfile) associated
            with the listing.
          minimum: 1
          type: integer
        shipping_profile_id:
          description: The numeric ID of the shipping profile.
          minimum: 1
          type: integer
        origin_country_iso:
          description: The ISO code of the country from which the listing ships.
          format: ISO 3166-1 alpha-2
          type: string
        destination_country_iso:
          description: The ISO code of the country to which the listing ships. If
            null, request sets destination to destination_region. Required if destination_region
            is null or not provided.
          type: string
        destination_region:
          description: The code of the region to which the listing ships. A region
            represents a set of countries. Supported regions are Europe Union and
            Non-Europe Union (countries in Europe not in EU). If \`none\`, request
            sets destination to destination_country_iso. Required if destination_country_iso
            is null or not provided.
          enum:
          - eu
          - non_eu
          - none
          type: string
        primary_cost:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: The cost of shipping to this country/region alone, measured
            in the store's default currency.
        secondary_cost:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: The cost of shipping to this country/region with another item,
            measured in the store's default currency.
        shipping_carrier_id:
          description: The unique ID of a supported shipping carrier, which is used
            to calculate an Estimated Delivery Date. **Required with `mail_class`**
            if `min_delivery_days` and `max_delivery_days` are null.
          nullable: true
          type: integer
        mail_class:
          description: The unique ID string of a shipping carrier's mail class, which
            is used to calculate an estimated delivery date. **Required with `shipping_carrier_id`**
            if `min_delivery_days` and `max_delivery_days` are null.
          nullable: true
          type: string
        min_delivery_days:
          description: The minimum number of business days a buyer can expect to wait
            to receive their purchased item once it has shipped. **Required with `max_delivery_days`**
            if `mail_class` is null.
          maximum: 45
          minimum: 1
          nullable: true
          type: integer
        max_delivery_days:
          description: The maximum number of business days a buyer can expect to wait
            to receive their purchased item once it has shipped. **Required with `min_delivery_days`**
            if `mail_class` is null.
          maximum: 45
          minimum: 1
          nullable: true
          type: integer
      type: object
    ShopShippingProfileUpgrade:
      description: A representation of a shipping profile upgrade option.
      example:
        mail_class: mail_class
        upgrade_name: upgrade_name
        secondary_price: ""
        price: ""
        upgrade_id: 1
        rank: 0
        language: language
        shipping_carrier_id: 5
        max_delivery_days: 11
        type: "0"
        min_delivery_days: 25
        shipping_profile_id: 1
      properties:
        shipping_profile_id:
          description: The numeric ID of the base shipping profile.
          minimum: 1
          type: integer
        upgrade_id:
          description: The numeric ID that is associated with a shipping upgrade
          minimum: 1
          type: integer
        upgrade_name:
          description: Name for the shipping upgrade shown to shoppers at checkout,
            e.g. USPS Priority.
          type: string
        type:
          description: The type of the shipping upgrade. Domestic (0) or international
            (1).
          enum:
          - "0"
          - "1"
          type: string
        rank:
          description: The positive non-zero numeric position in the images displayed
            in a listing, with rank 1 images appearing in the left-most position in
            a listing.
          minimum: 0
          type: integer
        language:
          description: 'The IETF language tag for the language of the shipping profile.
            Ex: `de`, `en`, `es`, `fr`, `it`, `ja`, `nl`, `pl`, `pt`'
          type: string
        price:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: Additional cost of adding the shipping upgrade.
        secondary_price:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: Additional cost of adding the shipping upgrade for each additional
            item.
        shipping_carrier_id:
          description: The unique ID of a supported shipping carrier, which is used
            to calculate an Estimated Delivery Date. **Required with `mail_class`**
            if `min_delivery_days` and `max_delivery_days` are null.
          nullable: true
          type: integer
        mail_class:
          description: The unique ID string of a shipping carrier's mail class, which
            is used to calculate an estimated delivery date. **Required with `shipping_carrier_id`**
            if `min_delivery_days` and `max_delivery_days` are null.
          nullable: true
          type: string
        min_delivery_days:
          description: The minimum number of business days a buyer can expect to wait
            to receive their purchased item once it has shipped. **Required with `max_delivery_days`**
            if `mail_class` is null.
          maximum: 45
          minimum: 1
          nullable: true
          type: integer
        max_delivery_days:
          description: The maximum number of business days a buyer can expect to wait
            to receive their purchased item once it has shipped. **Required with `min_delivery_days`**
            if `mail_class` is null.
          maximum: 45
          minimum: 1
          nullable: true
          type: integer
      type: object
    User:
      description: Represents a single user of the site
      example:
        user_id: 1
        image_url_75x75: image_url_75x75
        last_name: last_name
        primary_email: primary_email
        first_name: first_name
      properties:
        user_id:
          description: The numeric ID of a user. This number is also a valid shop
            ID for the user\'s shop.
          minimum: 1
          type: integer
        primary_email:
          description: An email address string for the user\'s primary email address.
          format: email
          nullable: true
          type: string
        first_name:
          description: The user\'s first name.
          nullable: true
          type: string
        last_name:
          description: The user\'s last name.
          nullable: true
          type: string
        image_url_75x75:
          description: The user\'s avatar URL.
          nullable: true
          type: string
      type: object
    Shop:
      description: A shop created by an Etsy user.
      example:
        vacation_autoreply: vacation_autoreply
        is_direct_checkout_onboarded: true
        is_using_structured_policies: true
        is_opted_in_to_buyer_promise: true
        is_shop_us_based: true
        review_count: 7
        is_calculated_eligible: true
        title: title
        include_dispute_form_link: true
        currency_code: currency_code
        has_onboarded_structured_policies: true
        policy_shipping: policy_shipping
        digital_listing_count: 0
        image_url_760x100: image_url_760x100
        updated_timestamp: 0
        digital_sale_message: digital_sale_message
        shipping_from_country_iso: shipping_from_country_iso
        create_date: 0
        policy_privacy: policy_privacy
        policy_seller_info: policy_seller_info
        announcement: announcement
        sale_message: sale_message
        has_unstructured_policies: true
        languages:
        - languages
        - languages
        is_vacation: true
        num_favorers: 0
        is_etsy_payments_onboarded: true
        created_timestamp: 0
        transaction_sold_count: 0
        shop_name: shop_name
        review_average: 1.2315135
        update_date: 0
        policy_additional: policy_additional
        url: url
        listing_active_count: 0
        policy_welcome: policy_welcome
        shop_id: 1
        login_name: login_name
        accepts_custom_requests: true
        policy_refunds: policy_refunds
        user_id: 1
        vacation_message: vacation_message
        icon_url_fullxfull: icon_url_fullxfull
        policy_payment: policy_payment
        policy_update_date: 0
        policy_has_private_receipt_info: true
        shop_location_country_iso: shop_location_country_iso
      properties:
        shop_id:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        user_id:
          description: The numeric user ID of the [user](/documentation/reference#tag/User)
            who owns this shop.
          minimum: 1
          type: integer
        shop_name:
          description: The shop's name string.
          type: string
        create_date:
          description: The date and time this shop was created, in epoch seconds.
          minimum: 0
          type: integer
        created_timestamp:
          description: The date and time this shop was created, in epoch seconds.
          minimum: 0
          type: integer
        title:
          description: A brief heading string for the shop\'s main page.
          nullable: true
          type: string
        announcement:
          description: An announcement string to buyers that displays on the shop's
            homepage.
          nullable: true
          type: string
        currency_code:
          description: The ISO (alphabetic) code for the shop's currency. The shop
            displays all prices in this currency by default.
          type: string
        is_vacation:
          description: When true, this shop is not accepting purchases.
          type: boolean
        vacation_message:
          description: The shop's message string displayed when `is_vacation` is true.
          nullable: true
          type: string
        sale_message:
          description: A message string sent to users who complete a purchase from
            this shop.
          nullable: true
          type: string
        digital_sale_message:
          description: A message string sent to users who purchase a digital item
            from this shop.
          nullable: true
          type: string
        update_date:
          description: The date and time of the last update to the shop, in epoch
            seconds.
          minimum: 0
          type: integer
        updated_timestamp:
          description: The date and time of the last update to the shop, in epoch
            seconds.
          minimum: 0
          type: integer
        listing_active_count:
          description: The number of active listings in the shop.
          minimum: 0
          type: integer
        digital_listing_count:
          description: The number of digital listings in the shop.
          minimum: 0
          type: integer
        login_name:
          description: The shop owner\'s login name string.
          type: string
        accepts_custom_requests:
          description: When true, the shop accepts customization requests.
          type: boolean
        policy_welcome:
          description: The shop's policy welcome string (may be blank).
          nullable: true
          type: string
        policy_payment:
          description: The shop's payment policy string (may be blank).
          nullable: true
          type: string
        policy_shipping:
          description: The shop's shipping policy string (may be blank).
          nullable: true
          type: string
        policy_refunds:
          description: The shop's refund policy string (may be blank).
          nullable: true
          type: string
        policy_additional:
          description: The shop's additional policies string (may be blank).
          nullable: true
          type: string
        policy_seller_info:
          description: The shop's seller information string (may be blank).
          nullable: true
          type: string
        policy_update_date:
          description: The date and time of the last update to the shop's policies,
            in epoch seconds.
          minimum: 0
          type: integer
        policy_has_private_receipt_info:
          description: When true, EU receipts display private info.
          type: boolean
        has_unstructured_policies:
          description: When true, the shop displays additional unstructured policy
            fields.
          type: boolean
        policy_privacy:
          description: The shop's privacy policy string (may be blank).
          nullable: true
          type: string
        vacation_autoreply:
          description: The shop's automatic reply string displayed in new conversations
            when `is_vacation` is true.
          nullable: true
          type: string
        url:
          description: The URL string for this shop.
          type: string
        image_url_760x100:
          description: The URL string for this shop's banner image.
          nullable: true
          type: string
        num_favorers:
          description: The number of users who marked this shop a favorite.
          minimum: 0
          type: integer
        languages:
          description: A list of language strings for the shop's enrolled languages
            where the default shop language is the first element in the array.
          items:
            type: string
          type: array
        icon_url_fullxfull:
          description: The URL string for this shop's icon image.
          nullable: true
          type: string
        is_using_structured_policies:
          description: When true, the shop accepted using structured policies.
          type: boolean
        has_onboarded_structured_policies:
          description: When true, the shop accepted OR declined after viewing structured
            policies onboarding.
          type: boolean
        include_dispute_form_link:
          description: When true, this shop\'s policies include a link to an EU online
            dispute form.
          type: boolean
        is_direct_checkout_onboarded:
          description: '(**DEPRECATED: Replaced by _is_etsy_payments_onboarded_.)
            When true, the shop has onboarded onto Etsy Payments.'
          type: boolean
        is_etsy_payments_onboarded:
          description: When true, the shop has onboarded onto Etsy Payments.
          type: boolean
        is_calculated_eligible:
          description: When true, the shop is eligible for calculated shipping profiles.
            (Only available in the US and Canada)
          type: boolean
        is_opted_in_to_buyer_promise:
          description: When true, the shop opted in to buyer promise.
          type: boolean
        is_shop_us_based:
          description: When true, the shop is based in the US.
          type: boolean
        transaction_sold_count:
          description: The total number of sales ([transactions](/documentation/reference#tag/Shop-Receipt-Transactions))
            for this shop.
          minimum: 0
          type: integer
        shipping_from_country_iso:
          description: The country iso the shop is shipping from.
          format: ISO 3166-1 alpha-2
          nullable: true
          type: string
        shop_location_country_iso:
          description: The country iso where the shop is located.
          format: ISO 3166-1 alpha-2
          nullable: true
          type: string
        review_count:
          description: Number of reviews of shop listings in the past year.
          nullable: true
          type: integer
        review_average:
          description: Average rating based on reviews of shop listings in the past
            year.
          format: float
          nullable: true
          type: number
      type: object
    ListingImage:
      description: Reference urls and metadata for an image associated with a specific
        listing. The `url_fullxfull` parameter contains the URL for full-sized binary
        image file.
      example:
        full_height: 0
        green: 0
        url_75x75: url_75x75
        listing_id: 1
        listing_image_id: 1
        url_170x135: url_170x135
        created_timestamp: 0
        hex_code: hex_code
        red: 0
        saturation: 0
        is_black_and_white: true
        full_width: 0
        brightness: 0
        blue: 0
        alt_text: alt_text
        creation_tsz: 0
        url_fullxfull: url_fullxfull
        hue: 0
        rank: 0
        url_570xN: url_570xN
      properties:
        listing_id:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 1
          type: integer
        listing_image_id:
          description: The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image)
            for this transaction.
          minimum: 1
          type: integer
        hex_code:
          description: The webhex string for the image's average color, in webhex
            notation.
          nullable: true
          type: string
        red:
          description: The numeric red value equal to the image's average red value,
            from 0-255 (RGB color).
          minimum: 0
          nullable: true
          type: integer
        green:
          description: The numeric red value equal to the image's average red value,
            from 0-255 (RGB color).
          minimum: 0
          nullable: true
          type: integer
        blue:
          description: The numeric red value equal to the image's average red value,
            from 0-255 (RGB color).
          minimum: 0
          nullable: true
          type: integer
        hue:
          description: The numeric hue equal to the image's average hue, from 0-360
            (HSV color).
          minimum: 0
          nullable: true
          type: integer
        saturation:
          description: The numeric saturation equal to the image's average saturation,
            from 0-100 (HSV color).
          minimum: 0
          nullable: true
          type: integer
        brightness:
          description: The numeric brightness equal to the image's average brightness,
            from 0-100 (HSV color).
          minimum: 0
          nullable: true
          type: integer
        is_black_and_white:
          description: When true, the image is in black & white.
          nullable: true
          type: boolean
        creation_tsz:
          description: The listing image\'s creation time, in epoch seconds.
          minimum: 0
          type: integer
        created_timestamp:
          description: The listing image\'s creation time, in epoch seconds.
          minimum: 0
          type: integer
        rank:
          description: The positive non-zero numeric position in the images displayed
            in a listing, with rank 1 images appearing in the left-most position in
            a listing.
          minimum: 0
          type: integer
        url_75x75:
          description: The url string for a 75x75 pixel thumbnail of the image.
          type: string
        url_170x135:
          description: The url string for a 170x135 pixel thumbnail of the image.
          type: string
        url_570xN:
          description: The url string for a thumbnail of the image, no more than 570
            pixels wide with variable height.
          type: string
        url_fullxfull:
          description: The url string for the full-size image, up to 3000 pixels in
            each dimension.
          type: string
        full_height:
          description: The numeric height, measured in pixels, of the full-sized image
            referenced in url_fullxfull.
          minimum: 0
          nullable: true
          type: integer
        full_width:
          description: The numeric width, measured in pixels, of the full-sized image
            referenced in url_fullxfull.
          minimum: 0
          nullable: true
          type: integer
        alt_text:
          description: Alt text for the listing image. Max length 250 characters.
          nullable: true
          type: string
      type: object
    ListingVideo:
      description: Reference urls and metadata for a video associated with a specific
        listing.
      example:
        video_url: video_url
        width: 1
        video_state: active
        thumbnail_url: thumbnail_url
        video_id: 1
        height: 6
      properties:
        video_id:
          description: The unique ID of a video associated with a listing.
          minimum: 1
          type: integer
        height:
          description: The video height dimension in pixels.
          type: integer
        width:
          description: The video width dimension in pixels.
          type: integer
        thumbnail_url:
          description: The url of the video thumbnail.
          type: string
        video_url:
          description: The url of the video file.
          type: string
        video_state:
          description: The current state of a given video. Value is one of `active`,
            `inactive`, `deleted` or `flagged`.
          enum:
          - active
          - inactive
          - deleted
          - flagged
          type: string
      type: object
    ListingInventory:
      description: A representation of a single listing's inventory record.
      example:
        price_on_property:
        - 0
        - 0
        sku_on_property:
        - 1
        - 1
        products:
        - ""
        - ""
        quantity_on_property:
        - 6
        - 6
      properties:
        products:
          description: A JSON array of products available in a listing, even if only
            one product. All field names in the JSON blobs are lowercase.
          items:
            allOf:
            - $ref: '#/components/schemas/ListingInventoryProduct'
            description: A JSON array of products available in a listing, even if
              only one product. All field names in the JSON blobs are lowercase.
          type: array
        price_on_property:
          description: An array of unique [listing property](/documentation/reference#operation/getListingProperties)
            ID integers for the properties that change product prices, if any. For
            example, if you charge specific prices for different sized products in
            the same listing, then this array contains the property ID for size.
          items:
            type: integer
          type: array
        quantity_on_property:
          description: An array of unique [listing property](/documentation/reference#operation/getListingProperties)
            ID integers for the properties that change the quantity of the products,
            if any. For example, if you stock specific quantities of different colored
            products in the same listing, then this array contains the property ID
            for color.
          items:
            type: integer
          type: array
        sku_on_property:
          description: An array of unique [listing property](/documentation/reference#operation/getListingProperties)
            ID integers for the properties that change the product SKU, if any. For
            example, if you use specific skus for different colored products in the
            same listing, then this array contains the property ID for color.
          items:
            type: integer
          type: array
      type: object
    ListingInventoryProduct:
      description: A representation of a product for a listing.
      example:
        is_deleted: true
        property_values:
        - ""
        - ""
        product_id: 1
        sku: sku
        offerings:
        - ""
        - ""
      properties:
        product_id:
          description: The numeric ID for a specific [product](/documentation/reference#tag/ShopListing-Product)
            purchased from a listing.
          minimum: 1
          type: integer
        sku:
          description: The SKU string for the product
          type: string
        is_deleted:
          description: When true, someone deleted this product.
          type: boolean
        offerings:
          description: A list of product offering entries for this product.
          items:
            allOf:
            - $ref: '#/components/schemas/ListingInventoryProductOffering'
            description: A list of product offering entries for this product.
          type: array
        property_values:
          description: 'A list of property value entries for this product. Note: parenthesis
            characters (`(` and `)`) are not allowed.'
          items:
            allOf:
            - $ref: '#/components/schemas/ListingPropertyValue'
            description: 'A list of property value entries for this product. Note:
              parenthesis characters (`(` and `)`) are not allowed.'
          type: array
      type: object
    ListingInventoryProductOffering:
      description: A representation of an offering for a listing.
      example:
        is_enabled: true
        quantity: 0
        is_deleted: true
        price: ""
        offering_id: 1
      properties:
        offering_id:
          description: The ID for the ProductOffering
          minimum: 1
          type: integer
        quantity:
          description: The quantity the ProductOffering
          minimum: 0
          type: integer
        is_enabled:
          description: Whether or not the offering can be shown to buyers.
          type: boolean
        is_deleted:
          description: Whether or not the offering has been deleted.
          type: boolean
        price:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: Price data for this ProductOffering
      type: object
    ListingPropertyValue:
      description: A representation of structured data values.
      example:
        scale_id: 1
        values:
        - values
        - values
        value_ids:
        - 1
        - 1
        property_id: 1
        property_name: property_name
        scale_name: scale_name
      properties:
        property_id:
          description: The numeric ID of the Property.
          minimum: 1
          type: integer
        property_name:
          description: The name of the Property.
          nullable: true
          type: string
        scale_id:
          description: The numeric ID of the scale (if any).
          minimum: 1
          nullable: true
          type: integer
        scale_name:
          description: The label used to describe the chosen scale (if any).
          nullable: true
          type: string
        value_ids:
          description: The numeric IDs of the Property values
          items:
            minimum: 1
            type: integer
          type: array
        values:
          description: The Property values
          items:
            type: string
          type: array
      type: object
    ShopProductionPartner:
      description: Represents a description of a shop production partner.
      properties:
        production_partner_id:
          description: The numeric ID of a production partner.
          minimum: 1
          type: integer
        partner_name:
          description: The name or title of the production partner.
          type: string
        location:
          description: A string representing the production partner location.
          type: string
      type: object
    ListingTranslation:
      description: Represents the translation data for a Listing.
      example:
        listing_id: 1
        description: description
        language: language
        title: title
        tags:
        - tags
        - tags
      properties:
        listing_id:
          description: The numeric ID for the Listing.
          minimum: 1
          type: integer
        language:
          description: The IETF language tag (e.g. 'fr') for the language of this
            translation.
          type: string
        title:
          description: The title of the Listing of this Translation.
          nullable: true
          type: string
        description:
          description: The description of the Listing of this Translation.
          nullable: true
          type: string
        tags:
          description: The tags of the Listing of this Translation.
          items:
            type: string
          type: array
      type: object
    ListingImages:
      description: Represents a list of listing image resources, each of which contains
        the reference URLs and metadata for an image.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          description: The number of results.
          minimum: 0
          type: integer
        results:
          description: The list of requested resources.
          items:
            allOf:
            - $ref: '#/components/schemas/ListingImage'
            description: The list of requested resources.
          type: array
      type: object
    ListingInventoryWithAssociations:
      description: A representation of a single listing's inventory record with associations
      example:
        listing: ""
        price_on_property:
        - 0
        - 0
        sku_on_property:
        - 1
        - 1
        products:
        - ""
        - ""
        quantity_on_property:
        - 6
        - 6
      properties:
        products:
          description: A JSON array of products available in a listing, even if only
            one product. All field names in the JSON blobs are lowercase.
          items:
            allOf:
            - $ref: '#/components/schemas/ListingInventoryProduct'
            description: A JSON array of products available in a listing, even if
              only one product. All field names in the JSON blobs are lowercase.
          type: array
        price_on_property:
          description: An array of unique [listing property](/documentation/reference#operation/getListingProperties)
            ID integers for the properties that change product prices, if any. For
            example, if you charge specific prices for different sized products in
            the same listing, then this array contains the property ID for size.
          items:
            type: integer
          type: array
        quantity_on_property:
          description: An array of unique [listing property](/documentation/reference#operation/getListingProperties)
            ID integers for the properties that change the quantity of the products,
            if any. For example, if you stock specific quantities of different colored
            products in the same listing, then this array contains the property ID
            for color.
          items:
            type: integer
          type: array
        sku_on_property:
          description: An array of unique [listing property](/documentation/reference#operation/getListingProperties)
            ID integers for the properties that change the product SKU, if any. For
            example, if you use specific skus for different colored products in the
            same listing, then this array contains the property ID for color.
          items:
            type: integer
          type: array
        listing:
          allOf:
          - $ref: '#/components/schemas/ShopListing'
          description: An enumerated string that attaches a valid association. Default
            value is null.
      type: object
    ShopListingsWithAssociations:
      description: A set of ShopListing resources with associations.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          description: The number of ShopListing resources found.
          minimum: 0
          type: integer
        results:
          description: The ShopListing resources found.
          items:
            allOf:
            - $ref: '#/components/schemas/ShopListingWithAssociations'
            description: The ShopListing resources found.
          type: array
      type: object
    ListingPropertyValues:
      description: Represents several ListingPropertyValues.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          minimum: 0
          type: integer
        results:
          items:
            allOf:
            - $ref: '#/components/schemas/ListingPropertyValue'
          type: array
      type: object
    ShopReceiptTransactions:
      description: A set of ShopReceiptTransaction resources
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          description: The number of ShopReceiptTransaction resources found.
          type: integer
        results:
          description: The ShopReceiptTransaction resources found.
          items:
            allOf:
            - $ref: '#/components/schemas/ShopReceiptTransaction'
            description: The ShopReceiptTransaction resources found.
          type: array
      type: object
    ShopReceiptTransaction:
      description: A transaction object associated with a shop receipt. Etsy generates
        one transaction per listing purchased as recorded on the order receipt.
      example:
        listing_id: 0
        buyer_coupon: 7.4577446
        listing_image_id: 1
        description: description
        paid_timestamp: 946684800
        shipped_timestamp: 946684800
        product_data:
        - ""
        - ""
        title: title
        file_data: file_data
        shipping_profile_id: 1
        shipping_upgrade: shipping_upgrade
        create_timestamp: 946684800
        price: ""
        variations:
        - ""
        - ""
        shipping_method: shipping_method
        product_id: 1
        expected_ship_date: 946684800
        sku: sku
        transaction_id: 1
        quantity: 0
        shipping_cost: ""
        is_digital: true
        min_processing_days: 1
        receipt_id: 1
        created_timestamp: 946684800
        buyer_user_id: 1
        transaction_type: transaction_type
        max_processing_days: 1
        seller_user_id: 1
        shop_coupon: 1.1730742
      properties:
        transaction_id:
          description: The unique numeric ID for a transaction.
          minimum: 1
          type: integer
        title:
          description: The title string of the [listing](/documentation/reference#tag/ShopListing)
            purchased in this transaction.
          nullable: true
          type: string
        description:
          description: The description string of the [listing](/documentation/reference#tag/ShopListing)
            purchased in this transaction.
          nullable: true
          type: string
        seller_user_id:
          description: The numeric user ID for the seller in this transaction.
          minimum: 1
          type: integer
        buyer_user_id:
          description: The numeric user ID for the buyer in this transaction.
          minimum: 1
          type: integer
        create_timestamp:
          description: The transaction\'s creation date and time, in epoch seconds.
          minimum: 946684800
          type: integer
        created_timestamp:
          description: The transaction\'s creation date and time, in epoch seconds.
          minimum: 946684800
          type: integer
        paid_timestamp:
          description: The transaction\'s paid date and time, in epoch seconds.
          minimum: 946684800
          nullable: true
          type: integer
        shipped_timestamp:
          description: The transaction\'s shipping date and time, in epoch seconds.
          minimum: 946684800
          nullable: true
          type: integer
        quantity:
          description: The numeric quantity of products purchased in this transaction.
          minimum: 0
          type: integer
        listing_image_id:
          description: The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image)
            for this transaction.
          minimum: 1
          nullable: true
          type: integer
        receipt_id:
          description: The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt)
            associated to this transaction.
          minimum: 1
          type: integer
        is_digital:
          description: When true, the transaction recorded the purchase of a digital
            listing.
          type: boolean
        file_data:
          description: A string describing the files purchased in this transaction.
          type: string
        listing_id:
          description: The numeric ID for the [listing](/documentation/reference#tag/ShopListing)
            associated to this transaction.
          minimum: 0
          nullable: true
          type: integer
        transaction_type:
          description: The type string for the transaction, usually "listing".
          type: string
        product_id:
          description: The numeric ID for a specific [product](/documentation/reference#tag/ShopListing-Product)
            purchased from a listing.
          minimum: 1
          nullable: true
          type: integer
        sku:
          description: The SKU string for the product
          nullable: true
          type: string
        price:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: A money object representing the price recorded the transaction.
        shipping_cost:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: A money object representing the shipping cost for this transaction.
        variations:
          description: Array of variations and personalizations the buyer chose.
          items:
            allOf:
            - $ref: '#/components/schemas/TransactionVariations'
            description: Array of variations and personalizations the buyer chose.
          type: array
        product_data:
          description: 'A list of property value entries for this product. Note: parenthesis
            characters (`(` and `)`) are not allowed.'
          items:
            allOf:
            - $ref: '#/components/schemas/ListingPropertyValue'
            description: 'A list of property value entries for this product. Note:
              parenthesis characters (`(` and `)`) are not allowed.'
          type: array
        shipping_profile_id:
          description: The ID of the shipping profile selected for this listing.
          minimum: 1
          nullable: true
          type: integer
        min_processing_days:
          description: The minimum number of days for processing the listing.
          minimum: 1
          nullable: true
          type: integer
        max_processing_days:
          description: The maximum number of days for processing the listing.
          minimum: 1
          nullable: true
          type: integer
        shipping_method:
          description: Name of the selected shipping method.
          nullable: true
          type: string
        shipping_upgrade:
          description: The name of the shipping upgrade selected for this listing.
            Default value is null.
          nullable: true
          type: string
        expected_ship_date:
          description: The date & time of the expected ship date, in epoch seconds.
          minimum: 946684800
          nullable: true
          type: integer
        buyer_coupon:
          default: 0
          description: The amount of the buyer coupon that was discounted in the shop's
            currency.
          format: float
          type: number
        shop_coupon:
          default: 0
          description: The amount of the shop coupon that was discounted in the shop's
            currency.
          format: float
          type: number
      type: object
    TransactionVariations:
      description: A list of variations chosen by the buyer during checkout.
      properties:
        property_id:
          description: The variation property ID.
          type: integer
        value_id:
          description: The ID of the variation value selected.
          nullable: true
          type: integer
        formatted_name:
          description: Formatted name of the variation.
          type: string
        formatted_value:
          description: Value of the variation entered by the buyer.
          type: string
      type: object
    ListingVariationImages:
      description: Represents several ListingVariationImages.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          minimum: 0
          type: integer
        results:
          items:
            allOf:
            - $ref: '#/components/schemas/ListingVariationImage'
          type: array
      type: object
    ListingVariationImage:
      description: A representation of the associations of variations and images on
        a listing.
      properties:
        property_id:
          description: The numeric ID of the Property.
          minimum: 1
          type: integer
        value_id:
          description: The numeric ID of the Value.
          minimum: 1
          type: integer
        value:
          description: The string value of the property.
          nullable: true
          type: string
        image_id:
          description: The numeric ID of the Image.
          minimum: 1
          type: integer
      type: object
    ListingVideos:
      description: Represents a list of listing video resources, each of which contains
        the reference URLs for the videos.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          description: The number of results.
          minimum: 0
          type: integer
        results:
          description: The list of requested resources.
          items:
            allOf:
            - $ref: '#/components/schemas/ListingVideo'
            description: The list of requested resources.
          type: array
      type: object
    PaymentAccountLedgerEntry:
      description: Represents an entry in a shop's ledger.
      example:
        amount: 5
        reference_id: reference_id
        ledger_type: ledger_type
        payment_adjustments:
        - ""
        - ""
        description: description
        created_timestamp: 0
        reference_type: reference_type
        sequence_number: 0
        balance: 5
        currency: currency
        create_date: 0
        entry_id: 1
        ledger_id: 1
      properties:
        entry_id:
          description: The ledger entry's numeric ID.
          minimum: 1
          type: integer
        ledger_id:
          description: The ledger's numeric ID.
          minimum: 1
          type: integer
        sequence_number:
          description: The sequence allows ledger entries to be sorted chronologically.
            The higher the sequence, the more recent the entry.
          minimum: 0
          type: integer
        amount:
          description: The amount of money credited to the ledger.
          type: integer
        currency:
          description: The currency of the entry on the ledger.
          type: string
        description:
          description: 'Details what kind of ledger entry this is: a payment, refund,
            reversal of a failed refund, disbursement, returned disbursement, recoupment,
            miscellaneous credit, miscellaneous debit, or bill payment.'
          type: string
        balance:
          description: The amount of money in the shop's ledger the moment after this
            entry was applied.
          type: integer
        create_date:
          description: The date and time the ledger entry was created in Epoch seconds.
          minimum: 0
          type: integer
        created_timestamp:
          description: The date and time the ledger entry was created in Epoch seconds.
          minimum: 0
          type: integer
        ledger_type:
          description: The original reference type for the ledger entry.
          type: string
        reference_type:
          description: The object type the ledger entry refers to.
          type: string
        reference_id:
          description: The object id the ledger entry refers to.
          nullable: true
          type: string
        payment_adjustments:
          description: List of refund objects on an Etsy Payments transaction. All
            monetary amounts are in USD pennies unless otherwise specified.
          items:
            allOf:
            - $ref: '#/components/schemas/PaymentAdjustment'
            description: List of refund objects on an Etsy Payments transaction. All
              monetary amounts are in USD pennies unless otherwise specified.
          type: array
      type: object
    PaymentAdjustment:
      description: Represents a refund, which applies to a prior Etsy payment. All
        monetary amounts are in USD pennies unless otherwise specified.
      properties:
        payment_adjustment_id:
          description: The numeric ID for a payment adjustment.
          minimum: 1
          type: integer
        payment_id:
          description: A unique numeric ID for a payment to a specific Etsy [shop](/documentation/reference#tag/Shop).
          minimum: 1
          type: integer
        status:
          description: The status string of the payment adjustment.
          type: string
        is_success:
          description: When true, the payment adjustment was or is likely to complete
            successfully.
          type: boolean
        user_id:
          description: The numeric ID for the [user](/documentation/reference#tag/User)
            (seller) fulfilling the purchase.
          minimum: 1
          type: integer
        reason_code:
          description: A human-readable string describing the reason for the refund.
          type: string
        total_adjustment_amount:
          description: The total numeric amount of the refund in the payment currency.
          minimum: 0
          nullable: true
          type: integer
        shop_total_adjustment_amount:
          description: The numeric amount of the refund in the shop currency.
          minimum: 0
          nullable: true
          type: integer
        buyer_total_adjustment_amount:
          description: The numeric amount of the refund in the buyer currency.
          minimum: 0
          nullable: true
          type: integer
        total_fee_adjustment_amount:
          description: The numeric amount of card processing fees associated with
            a payment adjustment.
          minimum: 0
          nullable: true
          type: integer
        create_timestamp:
          description: The transaction\'s creation date and time, in epoch seconds.
          minimum: 946684800
          type: integer
        created_timestamp:
          description: The transaction\'s creation date and time, in epoch seconds.
          minimum: 946684800
          type: integer
        update_timestamp:
          description: The date and time of the last change to the payment adjustment
            in epoch seconds.
          minimum: 946684800
          type: integer
        updated_timestamp:
          description: The date and time of the last change to the payment adjustment
            in epoch seconds.
          minimum: 946684800
          type: integer
        payment_adjustment_items:
          description: List of payment adjustment line items.
          items:
            allOf:
            - $ref: '#/components/schemas/PaymentAdjustmentItem'
            description: List of payment adjustment line items.
          type: array
      type: object
    PaymentAdjustmentItem:
      description: A payemnt adjustment line item for a payment adjustment.
      properties:
        payment_adjustment_id:
          description: The numeric ID for a payment adjustment.
          minimum: 1
          type: integer
        payment_adjustment_item_id:
          description: Unique ID for the adjustment line item.
          minimum: 1
          type: integer
        adjustment_type:
          description: String indicating the type of adjustment for this line item.
          nullable: true
          type: string
        amount:
          default: 0
          description: Integer value for the amount of the adjustment in original
            currency.
          type: integer
        shop_amount:
          default: 0
          description: Integer value for the amount of the adjustment in currency
            for the shop.
          type: integer
        transaction_id:
          description: The unique numeric ID for a transaction.
          minimum: 1
          nullable: true
          type: integer
        bill_payment_id:
          description: Unique ID for the bill payment adjustment.
          minimum: 1
          nullable: true
          type: integer
        created_timestamp:
          description: The transaction\'s creation date and time, in epoch seconds.
          minimum: 946684800
          type: integer
        updated_timestamp:
          description: The update date and time the payment adjustment in epoch seconds.
          minimum: 946684800
          type: integer
      type: object
    PaymentAccountLedgerEntries:
      description: A set of PaymentAccountLedgerEntry resources
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          description: The number of PaymentAccountLedgerEntry resources found.
          minimum: 0
          type: integer
        results:
          description: The PaymentAccountLedgerEntry resources found.
          items:
            allOf:
            - $ref: '#/components/schemas/PaymentAccountLedgerEntry'
            description: The PaymentAccountLedgerEntry resources found.
          type: array
      type: object
    Payments:
      description: Represents several payments made with Etsy Payments. All monetary
        amounts are in USD pennies unless otherwise specified.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          description: The number of payments in the response.
          minimum: 0
          type: integer
        results:
          description: A list of payments.
          items:
            allOf:
            - $ref: '#/components/schemas/Payment'
            description: A list of payments.
          type: array
      type: object
    Payment:
      description: Represents a payment made with Etsy Payments. All monetary amounts
        are in USD pennies unless otherwise specified.
      properties:
        payment_id:
          description: A unique numeric ID for a payment to a specific Etsy [shop](/documentation/reference#tag/Shop).
          minimum: 1
          type: integer
        buyer_user_id:
          description: The numeric ID for the [user](/documentation/reference#tag/User)
            who paid the purchase.
          minimum: 1
          type: integer
        shop_id:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        receipt_id:
          description: The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt)
            associated to this transaction.
          minimum: 1
          type: integer
        amount_gross:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: An integer equal to gross amount of the order, in pennies,
            including shipping and taxes.
        amount_fees:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: An integer equal to the original card processing fee of the
            order in pennies.
        amount_net:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: An integer equal to the payment value, in pennies, less fees
            (`amount_gross` - `amount_fees`).
        posted_gross:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: The total gross value of the payment posted once the purchase
            ships. This is equal to the `amount_gross` UNLESS the seller issues a
            refund prior to shipping. We consider "shipping" to be the event which
            "posts" to the ledger. Therefore, if the seller refunds first, we reduce
            the `amount_gross` first and post then that amount. The seller never sees
            the refunded amount in their ledger. This is equal to the "Credit" amount
            in the ledger entry.
        posted_fees:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: The total value of the fees posted once the purchase ships.
            Etsy refunds a proportional amount of the fees when a seller refunds a
            buyer. When the seller issues a refund prior to shipping, the posted amount
            is less then the original.
        posted_net:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: The total value of the payment at the time of posting, less
            fees. (`posted_gross` - `posted_fees`)
        adjusted_gross:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: The gross payment amount after the seller refunds a payment,
            partially or fully.
        adjusted_fees:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: The new fee amount after a seller refunds a payment, partially
            or fully.
        adjusted_net:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: The total value of the payment after refunds, less fees (`adjusted_gross`
            - `adjusted_fees`).
        currency:
          description: The ISO (alphabetic) code string for the payment's currency.
          type: string
        shop_currency:
          description: The ISO (alphabetic) code for the shop's currency. The shop
            displays all prices in this currency by default.
          nullable: true
          type: string
        buyer_currency:
          description: The currency string of the buyer.
          nullable: true
          type: string
        shipping_user_id:
          description: The numeric ID of the user to which the seller ships the order.
          minimum: 1
          nullable: true
          type: integer
        shipping_address_id:
          description: The numeric id identifying the shipping address.
          minimum: 1
          type: integer
        billing_address_id:
          description: The numeric ID identifying the billing address of the buyer.
          maximum: 9223372036854775807
          minimum: 0
          type: integer
        status:
          description: A string indicating the current status of the payment, most
            commonly "settled" or "authed".
          type: string
        shipped_timestamp:
          description: The transaction\'s shipping date and time, in epoch seconds.
          minimum: 946684800
          nullable: true
          type: integer
        create_timestamp:
          description: The transaction\'s creation date and time, in epoch seconds.
          minimum: 946684800
          type: integer
        created_timestamp:
          description: The transaction\'s creation date and time, in epoch seconds.
          minimum: 946684800
          type: integer
        update_timestamp:
          description: The date and time of the last change to the payment adjustment
            in epoch seconds.
          minimum: 946684800
          type: integer
        updated_timestamp:
          description: The date and time of the last change to the payment adjustment
            in epoch seconds.
          minimum: 946684800
          type: integer
        payment_adjustments:
          description: List of refund objects on an Etsy Payments transaction. All
            monetary amounts are in USD pennies unless otherwise specified.
          items:
            allOf:
            - $ref: '#/components/schemas/PaymentAdjustment'
            description: List of refund objects on an Etsy Payments transaction. All
              monetary amounts are in USD pennies unless otherwise specified.
          type: array
      type: object
    Pong:
      description: A confirmation that the current application has access to the Open
        API
      example:
        application_id: 1
      properties:
        application_id:
          description: The authenticated application's ID
          minimum: 1
          type: integer
      type: object
    ShopReceipt:
      description: The record of a purchase from a shop. Shop receipts display monetary
        values using the shop's currency.
      example:
        seller_email: seller_email
        formatted_address: formatted_address
        message_from_payment: message_from_payment
        first_line: first_line
        city: city
        message_from_seller: message_from_seller
        total_vat_cost: ""
        discount_amt: ""
        refunds:
        - ""
        - ""
        second_line: second_line
        payment_email: payment_email
        receipt_type: 0
        create_timestamp: 946684800
        update_timestamp: 946684800
        updated_timestamp: 946684800
        state: state
        message_from_buyer: message_from_buyer
        is_paid: true
        country_iso: country_iso
        payment_method: payment_method
        zip: zip
        buyer_email: buyer_email
        total_price: ""
        receipt_id: 1
        created_timestamp: 946684800
        buyer_user_id: 1
        transactions:
        - ""
        - ""
        shipments:
        - ""
        - ""
        total_shipping_cost: ""
        seller_user_id: 1
        is_shipped: true
        is_gift: true
        gift_wrap_price: ""
        subtotal: ""
        total_tax_cost: ""
        name: name
        grandtotal: ""
        gift_message: gift_message
        status: paid
      properties:
        receipt_id:
          description: The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt)
            associated to this transaction.
          minimum: 1
          type: integer
        receipt_type:
          description: 'The numeric value for the Etsy channel that serviced the purchase:
            0 for Etsy.com, 1 for a Pattern shop.'
          minimum: 0
          type: integer
        seller_user_id:
          description: The numeric ID for the [user](/documentation/reference#tag/User)
            (seller) fulfilling the purchase.
          minimum: 1
          type: integer
        seller_email:
          description: The email address string for the seller of the listing.
          format: email
          nullable: true
          type: string
        buyer_user_id:
          description: The numeric ID for the [user](/documentation/reference#tag/User)
            making the purchase.
          minimum: 1
          type: integer
        buyer_email:
          description: The email address string for the buyer of the listing.
          nullable: true
          type: string
        name:
          description: The name string for the recipient in the shipping address.
          type: string
        first_line:
          description: The first address line string for the recipient in the shipping
            address.
          type: string
        second_line:
          description: The optional second address line string for the recipient in
            the shipping address.
          nullable: true
          type: string
        city:
          description: The city string for the recipient in the shipping address.
          type: string
        state:
          description: The state string for the recipient in the shipping address.
          nullable: true
          type: string
        zip:
          description: The zip code string (not necessarily a number) for the recipient
            in the shipping address.
          type: string
        status:
          description: 'The current order status string. One of: `paid`, `completed`,
            `open`, `payment processing` or `canceled`.'
          enum:
          - paid
          - completed
          - open
          - payment processing
          - canceled
          - fully refunded
          - partially refunded
          type: string
        formatted_address:
          description: The formatted shipping address string for the recipient in
            the shipping address.
          type: string
        country_iso:
          description: The ISO-3166 alpha-2 country code string for the recipient
            in the shipping address.
          type: string
        payment_method:
          description: 'The payment method string identifying purchaser''s payment
            method, which must be one of: \''cc\'' (credit card), \''paypal\'', \''check\'',
            \''mo\'' (money order), \''bt\'' (bank transfer), \''other\'', \''ideal\'',
            \''sofort\'', \''apple_pay\'', \''google\'', \''android_pay\'', \''google_pay\'',
            \''klarna\'', \''k_pay_in_4\'' (klarna), \''k_pay_in_3\'' (klarna), or
            \''k_financing\'' (klarna).'
          type: string
        payment_email:
          description: The email address string for the email address to which to
            send payment confirmation
          type: string
        message_from_seller:
          description: An optional message string from the seller.
          nullable: true
          type: string
        message_from_buyer:
          description: An optional message string from the buyer.
          nullable: true
          type: string
        message_from_payment:
          description: The machine-generated acknowledgement string from the payment
            system.
          nullable: true
          type: string
        is_paid:
          description: When true, buyer paid for this purchase.
          type: boolean
        is_shipped:
          description: When true, seller shipped the products.
          type: boolean
        create_timestamp:
          description: The receipt\'s creation time, in epoch seconds.
          minimum: 946684800
          type: integer
        created_timestamp:
          description: The receipt\'s creation time, in epoch seconds.
          minimum: 946684800
          type: integer
        update_timestamp:
          description: The time of the last update to the receipt, in epoch seconds.
          minimum: 946684800
          type: integer
        updated_timestamp:
          description: The time of the last update to the receipt, in epoch seconds.
          minimum: 946684800
          type: integer
        is_gift:
          description: When true, the buyer indicated this purchase is a gift.
          type: boolean
        gift_message:
          description: A gift message string the buyer requests delivered with the
            product.
          type: string
        grandtotal:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: A number equal to the total_price minus the coupon discount
            plus tax and shipping costs.
        subtotal:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: A number equal to the total_price minus coupon discounts. Does
            not included tax or shipping costs.
        total_price:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: A number equal to the sum of the individual listings\' (price
            * quantity). Does not included tax or shipping costs.
        total_shipping_cost:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: A number equal to the total shipping cost of the receipt.
        total_tax_cost:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: The total sales tax of the receipt.
        total_vat_cost:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: A number equal to the total value-added tax (VAT) of the receipt.
        discount_amt:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: The numeric total discounted price for the receipt when using
            a discount (percent or fixed) coupon. Free shipping coupons are not included
            in this discount amount.
        gift_wrap_price:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: The numeric price of gift wrap for this receipt.
        shipments:
          description: A list of shipment statements for this receipt.
          items:
            allOf:
            - $ref: '#/components/schemas/ShopReceiptShipment'
            description: A list of shipment statements for this receipt.
          type: array
        transactions:
          description: Array of transactions for the receipt.
          items:
            allOf:
            - $ref: '#/components/schemas/ShopReceiptTransaction'
            description: Array of transactions for the receipt.
          type: array
        refunds:
          description: Refunds for a given receipt.
          items:
            allOf:
            - $ref: '#/components/schemas/ShopRefund'
            description: Refunds for a given receipt.
          type: array
      type: object
    ShopReceiptShipment:
      description: The record of one shipment event for a ShopReceipt. A receipt may
        have many ShopReceiptShipment records.
      properties:
        receipt_shipping_id:
          description: The unique numeric ID of a Shop Receipt Shipment record.
          minimum: 1
          nullable: true
          type: integer
        shipment_notification_timestamp:
          description: The time at which Etsy notified the buyer of the shipment event,
            in epoch seconds.
          minimum: 946684800
          type: integer
        carrier_name:
          description: The name string for the carrier/company responsible for delivering
            the shipment.
          type: string
        tracking_code:
          description: The tracking code string provided by the carrier/company for
            the shipment.
          type: string
      type: object
    ShopRefund:
      description: The refund record for a receipt.
      properties:
        amount:
          allOf:
          - $ref: '#/components/schemas/Money'
          description: A number equal to the refund total.
        created_timestamp:
          description: The date & time of the refund, in epoch seconds.
          minimum: 946684800
          type: integer
        reason:
          description: The reason string given for the refund.
          nullable: true
          type: string
        note_from_issuer:
          description: The note string created by the refund issuer.
          nullable: true
          type: string
        status:
          description: The status indication string for the refund.
          nullable: true
          type: string
      type: object
    ShopReceipts:
      description: The receipts for a specific Shop.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          description: The number of Shop Receipts found.
          type: integer
        results:
          description: List of Shop Receipt resources found, with all Shop Receipt
            fields for each resource.
          items:
            allOf:
            - $ref: '#/components/schemas/ShopReceipt'
            description: List of Shop Receipt resources found, with all Shop Receipt
              fields for each resource.
          type: array
      type: object
    ListingReviews:
      description: A set of listing review records left by Users.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          description: The number of TransactionReview resources found.
          minimum: 0
          type: integer
        results:
          description: The TransactionReview resources found.
          items:
            allOf:
            - $ref: '#/components/schemas/ListingReview'
            description: The TransactionReview resources found.
          type: array
      type: object
    ListingReview:
      description: A listing review record left by a User.
      properties:
        shop_id:
          description: The shop's numeric ID.
          minimum: 1
          type: integer
        listing_id:
          description: The ID of the ShopListing that the TransactionReview belongs
            to.
          minimum: 1
          type: integer
        rating:
          description: Rating value on scale from 1 to 5
          maximum: 5
          minimum: 1
          type: integer
        review:
          description: A message left by the author, explaining the feedback, if provided.
          nullable: true
          type: string
        language:
          description: The language of the TransactionReview
          type: string
        image_url_fullxfull:
          description: 'The url to a photo provided with the feedback, dimensions
            fullxfull. Note: This field may be absent, depending on the buyer''s privacy
            settings.'
          nullable: true
          type: string
        create_timestamp:
          description: The date and time the TransactionReview was created in epoch
            seconds.
          minimum: 946684800
          type: integer
        created_timestamp:
          description: The date and time the TransactionReview was created in epoch
            seconds.
          minimum: 946684800
          type: integer
        update_timestamp:
          description: The date and time the TransactionReview was updated in epoch
            seconds.
          minimum: 946684800
          type: integer
        updated_timestamp:
          description: The date and time the TransactionReview was updated in epoch
            seconds.
          minimum: 946684800
          type: integer
      type: object
    TransactionReviews:
      description: A set of transaction review records left by Users.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          description: The number of TransactionReview resources found.
          minimum: 0
          type: integer
        results:
          description: The TransactionReview resources found.
          items:
            allOf:
            - $ref: '#/components/schemas/TransactionReview'
            description: The TransactionReview resources found.
          type: array
      type: object
    TransactionReview:
      description: A transaction review record left by a User.
      properties:
        shop_id:
          description: The shop's numeric ID.
          minimum: 1
          type: integer
        listing_id:
          description: The ID of the ShopListing that the TransactionReview belongs
            to.
          minimum: 1
          type: integer
        transaction_id:
          description: The ID of the ShopReceipt Transaction that the TransactionReview
            belongs to.
          minimum: 1
          type: integer
        buyer_user_id:
          description: 'The numeric ID of the user who was the buyer in this transaction.
            Note: This field may be absent, depending on the buyer''s privacy settings.'
          minimum: 1
          nullable: true
          type: integer
        rating:
          description: Rating value on scale from 1 to 5
          maximum: 5
          minimum: 1
          type: integer
        review:
          default: ""
          description: A message left by the author, explaining the feedback, if provided.
          type: string
        language:
          description: The language of the TransactionReview
          type: string
        image_url_fullxfull:
          description: 'The url to a photo provided with the feedback, dimensions
            fullxfull. Note: This field may be absent, depending on the buyer''s privacy
            settings.'
          nullable: true
          type: string
        create_timestamp:
          description: The date and time the TransactionReview was created in epoch
            seconds.
          minimum: 946684800
          type: integer
        created_timestamp:
          description: The date and time the TransactionReview was created in epoch
            seconds.
          minimum: 946684800
          type: integer
        update_timestamp:
          description: The date and time the TransactionReview was updated in epoch
            seconds.
          minimum: 946684800
          type: integer
        updated_timestamp:
          description: The date and time the TransactionReview was updated in epoch
            seconds.
          minimum: 946684800
          type: integer
      type: object
    SellerTaxonomyNodes:
      description: A list of taxonomy nodes from the seller taxonomy tree.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          description: The number of results.
          minimum: 0
          type: integer
        results:
          description: The list of requested resources.
          items:
            allOf:
            - $ref: '#/components/schemas/SellerTaxonomyNode'
            description: The list of requested resources.
          type: array
      type: object
    SellerTaxonomyNode:
      description: A taxonomy node in the seller taxonomy tree.
      properties:
        id:
          description: 'The unique numeric ID of an Etsy taxonomy node, which is a
            metadata category for listings organized into the seller taxonomy hierarchy
            tree. For example, the \"shoes\" taxonomy node (ID: 1429, level: 1) is
            higher in the hierarchy than \"girls'' shoes\" (ID: 1440, level: 2). The
            taxonomy nodes assigned to a listing support access to specific standardized
            product scales and properties. For example, listings assigned the taxonomy
            nodes \"shoes\" or \"girls'' shoes\" support access to the \"EU\" shoe
            size scale with its associated property names and IDs for EU shoe sizes,
            such as property `value_id`:\"1394\", and `name`:\"38\".'
          minimum: 1
          type: integer
        level:
          description: The integer depth of this taxonomy node in the seller taxonomy
            tree, with roots at level 0.
          minimum: 0
          type: integer
        name:
          description: The name string for this taxonomy node.
          type: string
        parent_id:
          description: The numeric taxonomy ID of the parent of this node.
          minimum: 1
          nullable: true
          type: integer
        children:
          description: An array of taxonomy nodes for all the direct children of this
            taxonomy node in the seller taxonomy tree.
          items:
            allOf:
            - $ref: '#/components/schemas/SellerTaxonomyNode'
            description: An array of taxonomy nodes for all the direct children of
              this taxonomy node in the seller taxonomy tree.
          type: array
        full_path_taxonomy_ids:
          description: An array of `taxonomy_id`s including this node and all of its
            direct parents in the seller taxonomy tree up to a root node. They are
            listed in order from root to leaf.
          items:
            minimum: 1
            type: integer
          type: array
      type: object
    TaxonomyNodeProperties:
      description: A list of product property definitions.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          description: The number of results.
          minimum: 0
          type: integer
        results:
          description: The list of requested resources.
          items:
            allOf:
            - $ref: '#/components/schemas/TaxonomyNodeProperty'
            description: The list of requested resources.
          type: array
      type: object
    TaxonomyNodeProperty:
      description: A product property definition.
      properties:
        property_id:
          description: The unique numeric ID of this product property.
          minimum: 1
          type: integer
        name:
          description: The name string for this taxonomy node.
          type: string
        display_name:
          description: The human-readable product property name string.
          type: string
        scales:
          description: A list of available scales.
          items:
            allOf:
            - $ref: '#/components/schemas/TaxonomyPropertyScale'
            description: A list of available scales.
          type: array
        is_required:
          description: When true, listings assigned eligible taxonomy IDs require
            this property.
          type: boolean
        supports_attributes:
          description: When true, you can use this property in listing attributes.
          type: boolean
        supports_variations:
          description: When true, you can use this property in listing variations.
          type: boolean
        is_multivalued:
          description: When true, you can assign multiple property values to this
            property
          type: boolean
        max_values_allowed:
          description: When true, you can assign multiple property values to this
            property
          nullable: true
          type: integer
        possible_values:
          description: A list of supported property value strings for this property.
          items:
            allOf:
            - $ref: '#/components/schemas/TaxonomyPropertyValue'
            description: A list of supported property value strings for this property.
          type: array
        selected_values:
          description: A list of property value strings automatically and always selected
            for the given property.
          items:
            allOf:
            - $ref: '#/components/schemas/TaxonomyPropertyValue'
            description: A list of property value strings automatically and always
              selected for the given property.
          type: array
      type: object
    TaxonomyPropertyScale:
      description: A scale defnining the assignable increments for the property values
        available to specific product properties.
      properties:
        scale_id:
          description: The unique numeric ID of a scale.
          minimum: 1
          type: integer
        display_name:
          description: The name string for a scale.
          type: string
        description:
          description: The description string for a scale.
          type: string
      type: object
    TaxonomyPropertyValue:
      description: A property value for a specific product property, which may also
        employ a specific scale.
      properties:
        value_id:
          description: The numeric ID of this property value.
          minimum: 1
          nullable: true
          type: integer
        name:
          description: The name string of this property value.
          type: string
        scale_id:
          description: The numeric scale ID of the scale to which this property value
            belongs.
          minimum: 1
          nullable: true
          type: integer
        equal_to:
          description: A list of numeric property value IDs this property value is
            equal to (if any).
          items:
            minimum: 0
            type: integer
          type: array
      type: object
    ShippingCarriers:
      description: Represents several ShippingCarriers.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          minimum: 0
          type: integer
        results:
          items:
            allOf:
            - $ref: '#/components/schemas/ShippingCarrier'
          type: array
      type: object
    ShippingCarrier:
      description: A supported shipping carrier, which is used to calculate an Estimated
        Delivery Date.
      properties:
        shipping_carrier_id:
          description: The numeric ID of this shipping carrier.
          minimum: 1
          type: integer
        name:
          description: The name of this shipping carrier.
          type: string
        domestic_classes:
          description: Set of domestic mail classes of this shipping carrier.
          items:
            allOf:
            - $ref: '#/components/schemas/ShippingCarrierMailClass'
            description: Set of domestic mail classes of this shipping carrier.
          type: array
        international_classes:
          description: Set of international mail classes of this shipping carrier.
          items:
            allOf:
            - $ref: '#/components/schemas/ShippingCarrierMailClass'
            description: Set of international mail classes of this shipping carrier.
          type: array
      type: object
    ShippingCarrierMailClass:
      description: A shipping carrier's mail class, which is used to calculate an
        Estimated Delivery Date.
      properties:
        mail_class_key:
          description: The unique identifier of this mail class.
          type: string
        name:
          description: The name of this mail class.
          type: string
      type: object
    Shops:
      description: A set of Shop records.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          description: The total number of Shops
          minimum: 0
          type: integer
        results:
          description: The Shop resources.
          items:
            allOf:
            - $ref: '#/components/schemas/Shop'
            description: The Shop resources.
          type: array
      type: object
    ShopReturnPolicy:
      description: Represents a listing-level return policy.
      example:
        shop_id: 1
        return_deadline: 1
        accepts_returns: true
        accepts_exchanges: true
        return_policy_id: 1
      properties:
        return_policy_id:
          description: The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
          minimum: 1
          type: integer
        shop_id:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
        accepts_returns:
          description: return_policy_accepts_returns
          type: boolean
        accepts_exchanges:
          description: return_policy_accepts_exchanges
          type: boolean
        return_deadline:
          description: 'The deadline for the Return Policy, measured in days. The
            value must be one of the following: [7, 14, 21, 30, 45, 60, 90].'
          nullable: true
          type: integer
      type: object
    ShopReturnPolicies:
      description: Represents a shop's listing-level return policies list.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          minimum: 0
          type: integer
        results:
          items:
            allOf:
            - $ref: '#/components/schemas/ShopReturnPolicy'
          type: array
      type: object
    ShopProductionPartners:
      description: Represents a list of shop production partners.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          description: The number of results.
          minimum: 0
          type: integer
        results:
          description: The list of requested resources.
          items:
            allOf:
            - $ref: '#/components/schemas/ShopProductionPartner'
            description: The list of requested resources.
          type: array
      type: object
    ShopSection:
      description: A section within a shop, into which a user can sort listings.
      example:
        user_id: 1
        rank: 0
        shop_section_id: 1
        title: title
        active_listing_count: 0
      properties:
        shop_section_id:
          description: The numeric ID of a section in a specific Etsy shop.
          minimum: 1
          type: integer
        title:
          description: The title string for a shop section.
          type: string
        rank:
          description: The positive non-zero numeric position of this section in the
            section display order for a shop, with rank 1 sections appearing first.
          minimum: 0
          type: integer
        user_id:
          description: The numeric ID of the [user](/documentation/reference#tag/User)
            who owns this shop section.
          minimum: 1
          type: integer
        active_listing_count:
          description: The number of active listings in one section of a specific
            Etsy shop.
          minimum: 0
          type: integer
      type: object
    ShopSections:
      description: All the sections in a sprecific Shop.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          description: The number of results.
          minimum: 0
          type: integer
        results:
          description: The list of requested resources.
          items:
            allOf:
            - $ref: '#/components/schemas/ShopSection'
            description: The list of requested resources.
          type: array
      type: object
    ShopShippingProfileDestinations:
      description: Represents a list of shipping destination objects.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          description: The number of results.
          minimum: 0
          type: integer
        results:
          description: The list of requested resources.
          items:
            allOf:
            - $ref: '#/components/schemas/ShopShippingProfileDestination'
            description: The list of requested resources.
          type: array
      type: object
    ShopShippingProfiles:
      description: Represents several ShopShippingProfiles.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          minimum: 0
          type: integer
        results:
          items:
            allOf:
            - $ref: '#/components/schemas/ShopShippingProfile'
          type: array
      type: object
    ShopShippingProfileUpgrades:
      description: A list of shipping upgrade options.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          description: The number of results.
          minimum: 0
          type: integer
        results:
          description: The list of requested resources.
          items:
            allOf:
            - $ref: '#/components/schemas/ShopShippingProfileUpgrade'
            description: The list of requested resources.
          type: array
      type: object
    Scopes:
      description: A list of scopes allowed for the token.
      properties: {}
      type: object
    UserAddress:
      description: Represents a user's address.
      example:
        zip: zip
        second_line: second_line
        user_id: 1
        first_line: first_line
        city: city
        iso_country_code: iso_country_code
        name: name
        country_name: country_name
        user_address_id: 1
        is_default_shipping_address: true
        state: state
      properties:
        user_address_id:
          description: The numeric ID of the user's address.
          minimum: 1
          type: integer
        user_id:
          description: The user's numeric ID.
          minimum: 1
          type: integer
        name:
          description: The user's name for this address.
          type: string
        first_line:
          description: The first line of the user's address.
          type: string
        second_line:
          description: The second line of the user's address.
          nullable: true
          type: string
        city:
          description: The city field of the user's address.
          type: string
        state:
          description: The state field of the user's address.
          nullable: true
          type: string
        zip:
          description: The zip code field of the user's address.
          type: string
        iso_country_code:
          description: The ISO code of the country in this address.
          nullable: true
          type: string
        country_name:
          description: The name of the user's country.
          nullable: true
          type: string
        is_default_shipping_address:
          description: Is this the user's default shipping address.
          type: boolean
      type: object
    UserAddresses:
      description: Represents several UserAddress records.
      example:
        count: 0
        results:
        - ""
        - ""
      properties:
        count:
          description: The number of UserAddress records being returned.
          minimum: 0
          type: integer
        results:
          description: An array of UserAddress resources.
          items:
            allOf:
            - $ref: '#/components/schemas/UserAddress'
            description: An array of UserAddress resources.
          type: array
      type: object
    Self:
      description: Represents a single user of the site
      example:
        shop_id: 1
        user_id: 1
      properties:
        user_id:
          description: The numeric ID of a user. This number is also a valid shop
            ID for the user\'s shop.
          minimum: 1
          type: integer
        shop_id:
          description: The unique positive non-zero numeric ID for an Etsy Shop.
          minimum: 1
          type: integer
      type: object
    inline_object:
      properties:
        quantity:
          description: 'The positive non-zero number of products available for purchase
            in the listing. Note: The listing quantity is the sum of available offering
            quantities. You can request the quantities for individual offerings from
            the ListingInventory resource using the [getListingInventory](/documentation/reference#operation/getListingInventory)
            endpoint.'
          type: integer
        title:
          description: 'The listing''s title string. When creating or updating a listing,
            valid title strings contain only letters, numbers, punctuation marks,
            mathematical symbols, whitespace characters, ™, ©, and ®. (regex: /[^\p{L}\p{Nd}\p{P}\p{Sm}\p{Zs}™©®]/u)
            You can only use the %, :, & and + characters once each.'
          type: string
        description:
          description: A description string of the product for sale in the listing.
          type: string
        price:
          description: 'The positive non-zero price of the product. (Sold product
            listings are private) Note: The price is the minimum possible price. The
            [`getListingInventory`](/documentation/reference/#operation/getListingInventory)
            method requests exact prices for available offerings.'
          format: float
          type: number
        who_made:
          description: An enumerated string indicating who made the product. Helps
            buyers locate the listing under the Handmade heading. Requires 'is_supply'
            and 'when_made'.
          enum:
          - i_did
          - someone_else
          - collective
          type: string
        when_made:
          description: An enumerated string for the era in which the maker made the
            product in this listing. Helps buyers locate the listing under the Vintage
            heading. Requires 'is_supply' and 'who_made'.
          enum:
          - made_to_order
          - 2020_2023
          - 2010_2019
          - 2004_2009
          - before_2004
          - 2000_2003
          - 1990s
          - 1980s
          - 1970s
          - 1960s
          - 1950s
          - 1940s
          - 1930s
          - 1920s
          - 1910s
          - 1900s
          - 1800s
          - 1700s
          - before_1700
          type: string
        taxonomy_id:
          description: The numerical taxonomy ID of the listing. See [SellerTaxonomy](/documentation/reference#tag/SellerTaxonomy)
            and [BuyerTaxonomy](/documentation/reference#tag/BuyerTaxonomy) for more
            information.
          minimum: 1
          type: integer
        shipping_profile_id:
          description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
            associated with the listing. Required when listing type is `physical`.
          minimum: 1
          nullable: true
          type: integer
        return_policy_id:
          description: The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
          minimum: 1
          nullable: true
          type: integer
        materials:
          description: 'A list of material strings for materials used in the product.
            Valid materials strings contain only letters, numbers, and whitespace
            characters. (regex: /[^\p{L}\p{Nd}\p{Zs}]/u) Default value is null.'
          items:
            type: string
          nullable: true
          type: array
        shop_section_id:
          description: The numeric ID of the [shop section](/documentation/reference#tag/Shop-Section)
            for this listing. Default value is null.
          minimum: 1
          nullable: true
          type: integer
        processing_min:
          description: The minimum number of days required to process this listing.
            Default value is null.
          nullable: true
          type: integer
        processing_max:
          description: The maximum number of days required to process this listing.
            Default value is null.
          nullable: true
          type: integer
        tags:
          description: 'A comma-separated list of tag strings for the listing. When
            creating or updating a listing, valid tag strings contain only letters,
            numbers, whitespace characters, -, '', ™, ©, and ®. (regex: /[^\p{L}\p{Nd}\p{Zs}\-''™©®]/u)
            Default value is null.'
          items:
            type: string
          nullable: true
          type: array
        styles:
          description: 'An array of style strings for this listing, each of which
            is free-form text string such as "Formal", or "Steampunk". When creating
            or updating a listing, the listing may have up to two styles. Valid style
            strings contain only letters, numbers, and whitespace characters. (regex:
            /[^\p{L}\p{Nd}\p{Zs}]/u) Default value is null.'
          items:
            type: string
          nullable: true
          type: array
        item_weight:
          description: The numeric weight of the product measured in units set in
            'item_weight_unit'. Default value is null. If set, the value must be greater
            than 0.
          format: float
          maximum: 1.79769313486E+308
          minimum: 0
          nullable: true
          type: number
        item_length:
          description: The numeric length of the product measured in units set in
            'item_dimensions_unit'. Default value is null. If set, the value must
            be greater than 0.
          format: float
          maximum: 1.79769313486E+308
          minimum: 0
          nullable: true
          type: number
        item_width:
          description: The numeric width of the product measured in units set in 'item_dimensions_unit'.
            Default value is null. If set, the value must be greater than 0.
          format: float
          maximum: 1.79769313486E+308
          minimum: 0
          nullable: true
          type: number
        item_height:
          description: The numeric height of the product measured in units set in
            'item_dimensions_unit'. Default value is null. If set, the value must
            be greater than 0.
          format: float
          maximum: 1.79769313486E+308
          minimum: 0
          nullable: true
          type: number
        item_weight_unit:
          description: A string defining the units used to measure the weight of the
            product. Default value is null.
          enum:
          - oz
          - lb
          - g
          - kg
          nullable: true
          type: string
        item_dimensions_unit:
          description: A string defining the units used to measure the dimensions
            of the product. Default value is null.
          enum:
          - in
          - ft
          - mm
          - cm
          - m
          - yd
          - inches
          nullable: true
          type: string
        is_personalizable:
          description: When true, this listing is personalizable. The default value
            is null.
          type: boolean
        personalization_is_required:
          description: When true, this listing requires personalization. The default
            value is null. Will only change if is_personalizable is 'true'.
          type: boolean
        personalization_char_count_max:
          description: This is an integer value representing the maximum length for
            the personalization message entered by the buyer. Will only change if
            is_personalizable is 'true'.
          type: integer
        personalization_instructions:
          description: A string representing instructions for the buyer to enter the
            personalization. Will only change if is_personalizable is 'true'.
          type: string
        production_partner_ids:
          description: An array of unique IDs of production partner ids.
          items:
            minimum: 1
            type: integer
          nullable: true
          type: array
        image_ids:
          description: An array of numeric image IDs of the images in a listing, which
            can include up to 10 images.
          items:
            minimum: 1
            type: integer
          nullable: true
          type: array
        is_supply:
          description: When true, tags the listing as a supply product, else indicates
            that it's a finished product. Helps buyers locate the listing under the
            Supplies heading. Requires 'who_made' and 'when_made'.
          type: boolean
        is_customizable:
          description: When true, a buyer may contact the seller for a customized
            order. The default value is true when a shop accepts custom orders. Does
            not apply to shops that do not accept custom orders.
          type: boolean
        should_auto_renew:
          description: When true, renews a listing for four months upon expiration.
          type: boolean
        is_taxable:
          description: When true, applicable [shop](/documentation/reference#tag/Shop)
            tax rates apply to this listing at checkout.
          type: boolean
        type:
          description: An enumerated type string that indicates whether the listing
            is physical or a digital download.
          enum:
          - physical
          - download
          - both
          type: string
      required:
      - description
      - price
      - quantity
      - taxonomy_id
      - title
      - when_made
      - who_made
      type: object
    inline_object_1:
      properties:
        listing_file_id:
          description: The unique numeric ID of a file associated with a digital listing.
          minimum: 1
          type: integer
        file:
          description: A binary file to upload.
          format: binary
          nullable: true
          type: string
        name:
          description: The file name string of a file to upload
          type: string
        rank:
          default: 1
          description: The positive non-zero numeric position in the images displayed
            in a listing, with rank 1 images appearing in the left-most position in
            a listing.
          minimum: 1
          type: integer
      type: object
    inline_object_2:
      properties:
        image:
          description: The file name string of a file to upload
          format: binary
          nullable: true
          type: string
        listing_image_id:
          description: The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image)
            for this transaction.
          minimum: 1
          type: integer
        rank:
          default: 1
          description: The positive non-zero numeric position in the images displayed
            in a listing, with rank 1 images appearing in the left-most position in
            a listing.
          minimum: 0
          type: integer
        overwrite:
          default: false
          description: When true, this request replaces the existing image at a given
            rank.
          type: boolean
        is_watermarked:
          default: false
          description: When true, indicates that the uploaded image has a watermark.
          type: boolean
        alt_text:
          default: ""
          description: Alt text for the listing image. Max length 250 characters.
          type: string
      type: object
    _v3_application_listings__listing_id__inventory_property_values:
      properties:
        property_id:
          description: The unique ID of an Etsy [listing property](/documentation/reference#operation/getListingProperties).
          minimum: 1
          type: integer
        value_ids:
          description: An array of unique IDs of multiple Etsy [listing property](/documentation/reference#operation/getListingProperties)
            values. For example, if your listing offers different sizes of a product,
            then the value ID list contains value IDs for each size.
          items:
            minimum: 1
            type: integer
          type: array
        scale_id:
          description: The numeric ID of a single Etsy.com measurement scale. For
            example, for shoe size, there are three `scale_id`s available - `UK`,
            `US/Canada`, and `EU`, where `US/Canada` has `scale_id` 19.
          minimum: 1
          nullable: true
          type: integer
        property_name:
          description: The name of the property, in the requested locale language.
          type: string
        values:
          description: 'A list of property value entries for this product. Note: parenthesis
            characters (`(` and `)`) are not allowed.'
          items:
            type: string
          type: array
      required:
      - property_id
      - value_ids
      - values
      type: object
    _v3_application_listings__listing_id__inventory_offerings:
      properties:
        price:
          description: The price of the product.
          format: float
          type: number
        quantity:
          description: How many of this product are available?
          type: integer
        is_enabled:
          description: True if the offering is shown to buyers
          type: boolean
      required:
      - is_enabled
      - price
      - quantity
      type: object
    _v3_application_listings__listing_id__inventory_products:
      properties:
        sku:
          description: The SKU string for the product
          nullable: true
          type: string
        property_values:
          description: 'A list of property value entries for this product. Note: parenthesis
            characters (`(` and `)`) are not allowed.'
          items:
            $ref: '#/components/schemas/_v3_application_listings__listing_id__inventory_property_values'
          type: array
        offerings:
          description: A list of product offering entries for this product.
          items:
            $ref: '#/components/schemas/_v3_application_listings__listing_id__inventory_offerings'
          type: array
      required:
      - offerings
      type: object
    inline_object_3:
      properties:
        products:
          description: A JSON array of products available in a listing, even if only
            one product. All field names in the JSON blobs are lowercase.
          items:
            $ref: '#/components/schemas/_v3_application_listings__listing_id__inventory_products'
          type: array
        price_on_property:
          description: An array of unique [listing property](/documentation/reference#operation/getListingProperties)
            ID integers for the properties that change product prices, if any. For
            example, if you charge specific prices for different sized products in
            the same listing, then this array contains the property ID for size.
          items:
            type: integer
          type: array
        quantity_on_property:
          description: An array of unique [listing property](/documentation/reference#operation/getListingProperties)
            ID integers for the properties that change the quantity of the products,
            if any. For example, if you stock specific quantities of different colored
            products in the same listing, then this array contains the property ID
            for color.
          items:
            type: integer
          type: array
        sku_on_property:
          description: An array of unique [listing property](/documentation/reference#operation/getListingProperties)
            ID integers for the properties that change the product SKU, if any. For
            example, if you use specific skus for different colored products in the
            same listing, then this array contains the property ID for color.
          items:
            type: integer
          type: array
      required:
      - products
      type: object
    inline_object_4:
      properties:
        value_ids:
          description: An array of unique IDs of multiple Etsy [listing property](/documentation/reference#operation/getListingProperties)
            values. For example, if your listing offers different sizes of a product,
            then the value ID list contains value IDs for each size.
          items:
            minimum: 1
            type: integer
          type: array
        values:
          description: 'An array of value strings for multiple Etsy [listing property](/documentation/reference#operation/getListingProperties)
            values. For example, if your listing offers different colored products,
            then the values array contains the color strings for each color. Note:
            parenthesis characters (`(` and `)`) are not allowed.'
          items:
            type: string
          type: array
        scale_id:
          description: The numeric ID of a single Etsy.com measurement scale. For
            example, for shoe size, there are three `scale_id`s available - `UK`,
            `US/Canada`, and `EU`, where `US/Canada` has `scale_id` 19.
          minimum: 1
          type: integer
      required:
      - value_ids
      - values
      type: object
    inline_object_5:
      properties:
        title:
          description: The title of the Listing of this Translation.
          type: string
        description:
          description: The description of the Listing of this Translation.
          type: string
        tags:
          description: The tags of the Listing of this Translation.
          items:
            type: string
          type: array
      required:
      - description
      - title
      type: object
    inline_object_6:
      properties:
        title:
          description: The title of the Listing of this Translation.
          type: string
        description:
          description: The description of the Listing of this Translation.
          type: string
        tags:
          description: The tags of the Listing of this Translation.
          items:
            type: string
          type: array
      required:
      - description
      - title
      type: object
    inline_object_7:
      properties:
        image_ids:
          description: An array of numeric image IDs of the images in a listing, which
            can include up to 10 images.
          items:
            minimum: 1
            type: integer
          type: array
        title:
          description: 'The listing''s title string. When creating or updating a listing,
            valid title strings contain only letters, numbers, punctuation marks,
            mathematical symbols, whitespace characters, ™, ©, and ®. (regex: /[^\p{L}\p{Nd}\p{P}\p{Sm}\p{Zs}™©®]/u)
            You can only use the %, :, & and + characters once each.'
          type: string
        description:
          description: A description string of the product for sale in the listing.
          type: string
        materials:
          description: 'A list of material strings for materials used in the product.
            Valid materials strings contain only letters, numbers, and whitespace
            characters. (regex: /[^\p{L}\p{Nd}\p{Zs}]/u) Default value is null.'
          items:
            type: string
          nullable: true
          type: array
        should_auto_renew:
          description: When true, renews a listing for four months upon expiration.
          type: boolean
        shipping_profile_id:
          description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
            associated with the listing. Required when listing type is `physical`.
          minimum: 1
          nullable: true
          type: integer
        shop_section_id:
          description: The numeric ID of the [shop section](/documentation/reference#tag/Shop-Section)
            for this listing. Default value is null.
          nullable: true
          type: integer
        item_weight:
          description: The numeric weight of the product measured in units set in
            'item_weight_unit'. Default value is null. If set, the value must be greater
            than 0.
          format: float
          maximum: 1.79769313486E+308
          minimum: 0
          nullable: true
          type: number
        item_length:
          description: The numeric length of the product measured in units set in
            'item_dimensions_unit'. Default value is null. If set, the value must
            be greater than 0.
          format: float
          maximum: 1.79769313486E+308
          minimum: 0
          nullable: true
          type: number
        item_width:
          description: The numeric width of the product measured in units set in 'item_dimensions_unit'.
            Default value is null. If set, the value must be greater than 0.
          format: float
          maximum: 1.79769313486E+308
          minimum: 0
          nullable: true
          type: number
        item_height:
          description: The numeric height of the product measured in units set in
            'item_dimensions_unit'. Default value is null. If set, the value must
            be greater than 0.
          format: float
          maximum: 1.79769313486E+308
          minimum: 0
          nullable: true
          type: number
        item_weight_unit:
          description: A string defining the units used to measure the weight of the
            product. Default value is null.
          enum:
          - oz
          - lb
          - g
          - kg
          nullable: true
          type: string
        item_dimensions_unit:
          description: A string defining the units used to measure the dimensions
            of the product. Default value is null.
          enum:
          - in
          - ft
          - mm
          - cm
          - m
          - yd
          - inches
          nullable: true
          type: string
        is_taxable:
          description: When true, applicable [shop](/documentation/reference#tag/Shop)
            tax rates apply to this listing at checkout.
          type: boolean
        taxonomy_id:
          description: The numerical taxonomy ID of the listing. See [SellerTaxonomy](/documentation/reference#tag/SellerTaxonomy)
            and [BuyerTaxonomy](/documentation/reference#tag/BuyerTaxonomy) for more
            information.
          minimum: 1
          type: integer
        tags:
          description: 'A comma-separated list of tag strings for the listing. When
            creating or updating a listing, valid tag strings contain only letters,
            numbers, whitespace characters, -, '', ™, ©, and ®. (regex: /[^\p{L}\p{Nd}\p{Zs}\-''™©®]/u)
            Default value is null.'
          items:
            type: string
          nullable: true
          type: array
        who_made:
          description: An enumerated string indicating who made the product. Helps
            buyers locate the listing under the Handmade heading. Requires 'is_supply'
            and 'when_made'.
          enum:
          - i_did
          - someone_else
          - collective
          type: string
        when_made:
          description: An enumerated string for the era in which the maker made the
            product in this listing. Helps buyers locate the listing under the Vintage
            heading. Requires 'is_supply' and 'who_made'.
          enum:
          - made_to_order
          - 2020_2023
          - 2010_2019
          - 2004_2009
          - before_2004
          - 2000_2003
          - 1990s
          - 1980s
          - 1970s
          - 1960s
          - 1950s
          - 1940s
          - 1930s
          - 1920s
          - 1910s
          - 1900s
          - 1800s
          - 1700s
          - before_1700
          type: string
        featured_rank:
          description: The positive non-zero numeric position in the featured listings
            of the shop, with rank 1 listings appearing in the left-most position
            in featured listing on a shop’s home page.
          nullable: true
          type: integer
        is_personalizable:
          description: When true, this listing is personalizable. The default value
            is null.
          type: boolean
        personalization_is_required:
          description: When true, this listing requires personalization. The default
            value is null. Will only change if is_personalizable is 'true'.
          type: boolean
        personalization_char_count_max:
          description: This is an integer value representing the maximum length for
            the personalization message entered by the buyer. Will only change if
            is_personalizable is 'true'.
          type: integer
        personalization_instructions:
          description: A string representing instructions for the buyer to enter the
            personalization. Will only change if is_personalizable is 'true'.
          type: string
        state:
          description: 'When _updating_ a listing, this value can be either `active`
            or `inactive`. Note: Setting a `draft` listing to `active` will also publish
            the listing on etsy.com and requires that the listing have an image set.
            Setting a `sold_out` listing to active will update the quantity to 1 and
            renew the listing on etsy.com.'
          enum:
          - active
          - inactive
          type: string
        is_supply:
          description: When true, tags the listing as a supply product, else indicates
            that it's a finished product. Helps buyers locate the listing under the
            Supplies heading. Requires 'who_made' and 'when_made'.
          type: boolean
        production_partner_ids:
          description: An array of unique IDs of production partner ids.
          items:
            minimum: 1
            type: integer
          nullable: true
          type: array
        type:
          description: An enumerated type string that indicates whether the listing
            is physical or a digital download.
          enum:
          - physical
          - download
          - both
          nullable: true
          type: string
      type: object
    inline_object_8:
      properties:
        image_ids:
          description: An array of numeric image IDs of the images in a listing, which
            can include up to 10 images.
          items:
            minimum: 1
            type: integer
          type: array
        title:
          description: 'The listing''s title string. When creating or updating a listing,
            valid title strings contain only letters, numbers, punctuation marks,
            mathematical symbols, whitespace characters, ™, ©, and ®. (regex: /[^\p{L}\p{Nd}\p{P}\p{Sm}\p{Zs}™©®]/u)
            You can only use the %, :, & and + characters once each.'
          type: string
        description:
          description: A description string of the product for sale in the listing.
          type: string
        materials:
          description: 'A list of material strings for materials used in the product.
            Valid materials strings contain only letters, numbers, and whitespace
            characters. (regex: /[^\p{L}\p{Nd}\p{Zs}]/u) Default value is null.'
          items:
            type: string
          nullable: true
          type: array
        should_auto_renew:
          description: When true, renews a listing for four months upon expiration.
          type: boolean
        shipping_profile_id:
          description: The numeric ID of the [shipping profile](/documentation/reference#operation/getShopShippingProfile)
            associated with the listing. Required when listing type is `physical`.
          minimum: 1
          nullable: true
          type: integer
        return_policy_id:
          description: The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
            Required for active physical listings. This requirement does not apply
            to listings of EU-based shops.
          minimum: 1
          nullable: true
          type: integer
        shop_section_id:
          description: The numeric ID of the [shop section](/documentation/reference#tag/Shop-Section)
            for this listing. Default value is null.
          nullable: true
          type: integer
        item_weight:
          description: The numeric weight of the product measured in units set in
            'item_weight_unit'. Default value is null. If set, the value must be greater
            than 0.
          format: float
          maximum: 1.79769313486E+308
          minimum: 0
          nullable: true
          type: number
        item_length:
          description: The numeric length of the product measured in units set in
            'item_dimensions_unit'. Default value is null. If set, the value must
            be greater than 0.
          format: float
          maximum: 1.79769313486E+308
          minimum: 0
          nullable: true
          type: number
        item_width:
          description: The numeric width of the product measured in units set in 'item_dimensions_unit'.
            Default value is null. If set, the value must be greater than 0.
          format: float
          maximum: 1.79769313486E+308
          minimum: 0
          nullable: true
          type: number
        item_height:
          description: The numeric height of the product measured in units set in
            'item_dimensions_unit'. Default value is null. If set, the value must
            be greater than 0.
          format: float
          maximum: 1.79769313486E+308
          minimum: 0
          nullable: true
          type: number
        item_weight_unit:
          description: A string defining the units used to measure the weight of the
            product. Default value is null.
          enum:
          - ""
          - oz
          - lb
          - g
          - kg
          nullable: true
          type: string
        item_dimensions_unit:
          description: A string defining the units used to measure the dimensions
            of the product. Default value is null.
          enum:
          - ""
          - in
          - ft
          - mm
          - cm
          - m
          - yd
          - inches
          nullable: true
          type: string
        is_taxable:
          description: When true, applicable [shop](/documentation/reference#tag/Shop)
            tax rates apply to this listing at checkout.
          type: boolean
        taxonomy_id:
          description: The numerical taxonomy ID of the listing. See [SellerTaxonomy](/documentation/reference#tag/SellerTaxonomy)
            and [BuyerTaxonomy](/documentation/reference#tag/BuyerTaxonomy) for more
            information.
          minimum: 1
          type: integer
        tags:
          description: 'A comma-separated list of tag strings for the listing. When
            creating or updating a listing, valid tag strings contain only letters,
            numbers, whitespace characters, -, '', ™, ©, and ®. (regex: /[^\p{L}\p{Nd}\p{Zs}\-''™©®]/u)
            Default value is null.'
          items:
            type: string
          nullable: true
          type: array
        who_made:
          description: An enumerated string indicating who made the product. Helps
            buyers locate the listing under the Handmade heading. Requires 'is_supply'
            and 'when_made'.
          enum:
          - i_did
          - someone_else
          - collective
          type: string
        when_made:
          description: An enumerated string for the era in which the maker made the
            product in this listing. Helps buyers locate the listing under the Vintage
            heading. Requires 'is_supply' and 'who_made'.
          enum:
          - made_to_order
          - 2020_2023
          - 2010_2019
          - 2004_2009
          - before_2004
          - 2000_2003
          - 1990s
          - 1980s
          - 1970s
          - 1960s
          - 1950s
          - 1940s
          - 1930s
          - 1920s
          - 1910s
          - 1900s
          - 1800s
          - 1700s
          - before_1700
          type: string
        featured_rank:
          description: The positive non-zero numeric position in the featured listings
            of the shop, with rank 1 listings appearing in the left-most position
            in featured listing on a shop’s home page.
          nullable: true
          type: integer
        is_personalizable:
          description: When true, this listing is personalizable. The default value
            is null.
          type: boolean
        personalization_is_required:
          description: When true, this listing requires personalization. The default
            value is null. Will only change if is_personalizable is 'true'.
          type: boolean
        personalization_char_count_max:
          description: This is an integer value representing the maximum length for
            the personalization message entered by the buyer. Will only change if
            is_personalizable is 'true'.
          type: integer
        personalization_instructions:
          description: A string representing instructions for the buyer to enter the
            personalization. Will only change if is_personalizable is 'true'.
          type: string
        state:
          description: 'When _updating_ a listing, this value can be either `active`
            or `inactive`. Note: Setting a `draft` listing to `active` will also publish
            the listing on etsy.com and requires that the listing have an image set.
            Setting a `sold_out` listing to active will update the quantity to 1 and
            renew the listing on etsy.com.'
          enum:
          - active
          - inactive
          type: string
        is_supply:
          description: When true, tags the listing as a supply product, else indicates
            that it's a finished product. Helps buyers locate the listing under the
            Supplies heading. Requires 'who_made' and 'when_made'.
          type: boolean
        production_partner_ids:
          description: An array of unique IDs of production partner ids.
          items:
            minimum: 1
            type: integer
          nullable: true
          type: array
        type:
          description: An enumerated type string that indicates whether the listing
            is physical or a digital download.
          enum:
          - physical
          - download
          - both
          nullable: true
          type: string
      type: object
    _v3_application_shops__shop_id__listings__listing_id__variation_images_variation_images:
      properties:
        property_id:
          minimum: 1
          type: integer
        value_id:
          minimum: 1
          type: integer
        image_id:
          minimum: 1
          type: integer
      required:
      - image_id
      - property_id
      - value_id
      type: object
    inline_object_9:
      properties:
        variation_images:
          description: A list of variation image data.
          items:
            $ref: '#/components/schemas/_v3_application_shops__shop_id__listings__listing_id__variation_images_variation_images'
          type: array
      required:
      - variation_images
      type: object
    inline_object_10:
      properties:
        video_id:
          description: The unique ID of a video associated with a listing.
          minimum: 1
          type: integer
        video:
          description: A video file to upload.
          format: binary
          nullable: true
          type: string
        name:
          description: The file name string for the video to upload.
          type: string
      type: object
    inline_object_11:
      properties:
        was_shipped:
          description: When `true`, returns receipts where the seller shipped the
            product(s) in this receipt. When `false`, returns receipts where shipment
            has not been set.
          nullable: true
          type: boolean
        was_paid:
          description: When `true`, returns receipts where the seller has recieved
            payment for the receipt. When `false`, returns receipts where payment
            has not been received.
          nullable: true
          type: boolean
      type: object
    inline_object_12:
      properties:
        tracking_code:
          description: The tracking code for this receipt.
          type: string
        carrier_name:
          description: The carrier name for this receipt.
          type: string
        send_bcc:
          description: If true, the shipping notification will be sent to the seller
            as well
          type: boolean
        note_to_buyer:
          description: Message to include in notification to the buyer.
          type: string
      type: object
    inline_object_13:
      properties:
        title:
          description: A brief heading string for the shop's main page.
          type: string
        announcement:
          description: An announcement string to buyers that displays on the shop's
            homepage.
          type: string
        sale_message:
          description: A message string sent to users who complete a purchase from
            this shop.
          type: string
        digital_sale_message:
          description: A message string sent to users who purchase a digital item
            from this shop.
          type: string
        policy_additional:
          description: The shop's additional policies string (may be blank).
          type: string
      type: object
    inline_object_14:
      properties:
        source_return_policy_id:
          description: The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
          minimum: 1
          type: integer
        destination_return_policy_id:
          description: The numeric ID of the [Return Policy](/documentation/reference#operation/getShopReturnPolicies).
          minimum: 1
          type: integer
      required:
      - destination_return_policy_id
      - source_return_policy_id
      type: object
    inline_object_15:
      properties:
        accepts_returns:
          type: boolean
        accepts_exchanges:
          type: boolean
        return_deadline:
          description: 'The deadline for the Return Policy, measured in days. The
            value must be one of the following: [7, 14, 21, 30, 45, 60, 90].'
          nullable: true
          type: integer
      required:
      - accepts_exchanges
      - accepts_returns
      type: object
    inline_object_16:
      properties:
        accepts_returns:
          type: boolean
        accepts_exchanges:
          type: boolean
        return_deadline:
          description: 'The deadline for the Return Policy, measured in days. The
            value must be one of the following: [7, 14, 21, 30, 45, 60, 90].'
          nullable: true
          type: integer
      required:
      - accepts_exchanges
      - accepts_returns
      type: object
    inline_object_17:
      properties:
        title:
          description: The title string for a shop section.
          type: string
      required:
      - title
      type: object
    inline_object_18:
      properties:
        title:
          description: The title string for a shop section.
          type: string
      required:
      - title
      type: object
    inline_object_19:
      properties:
        title:
          description: The name string of this shipping profile.
          type: string
        origin_country_iso:
          description: The ISO code of the country from which the listing ships.
          format: ISO 3166-1 alpha-2
          type: string
        primary_cost:
          description: The cost of shipping to this country/region alone, measured
            in the store's default currency.
          format: float
          minimum: 0
          type: number
        secondary_cost:
          description: The cost of shipping to this country/region with another item,
            measured in the store's default currency.
          format: float
          minimum: 0
          type: number
        min_processing_time:
          description: The minimum time required to process to ship listings with
            this shipping profile.
          maximum: 10
          minimum: 1
          type: integer
        max_processing_time:
          description: The maximum processing time the listing needs to ship.
          maximum: 10
          minimum: 1
          type: integer
        processing_time_unit:
          default: business_days
          description: The unit used to represent how long a processing time is. A
            week is equivalent to 5 business days. If none is provided, the unit is
            set to "business_days".
          enum:
          - business_days
          - weeks
          type: string
        destination_country_iso:
          default: "null"
          description: The ISO code of the country to which the listing ships. If
            null, request sets destination to destination_region. Required if destination_region
            is null or not provided.
          format: ISO 3166-1 alpha-2
          type: string
        destination_region:
          default: none
          description: The code of the region to which the listing ships. A region
            represents a set of countries. Supported regions are Europe Union and
            Non-Europe Union (countries in Europe not in EU). If `none`, request sets
            destination to destination_country_iso. Required if destination_country_iso
            is null or not provided.
          enum:
          - eu
          - non_eu
          - none
          type: string
        origin_postal_code:
          default: ""
          description: The postal code string (not necessarily a number) for the location
            from which the listing ships. Required if the `origin_country_iso` is
            `US` or `CA`.
          type: string
        shipping_carrier_id:
          default: 0
          description: The unique ID of a supported shipping carrier, which is used
            to calculate an Estimated Delivery Date. **Required with `mail_class`**
            if `min_delivery_days` and `max_delivery_days` are null.
          minimum: 0
          type: integer
        mail_class:
          default: "null"
          description: The unique ID string of a shipping carrier's mail class, which
            is used to calculate an estimated delivery date. **Required with `shipping_carrier_id`**
            if `min_delivery_days` and `max_delivery_days` are null.
          type: string
        min_delivery_days:
          description: The minimum number of business days a buyer can expect to wait
            to receive their purchased item once it has shipped. **Required with `max_delivery_days`**
            if `mail_class` is null.
          maximum: 45
          minimum: 1
          type: integer
        max_delivery_days:
          description: The maximum number of business days a buyer can expect to wait
            to receive their purchased item once it has shipped. **Required with `min_delivery_days`**
            if `mail_class` is null.
          maximum: 45
          minimum: 1
          type: integer
      required:
      - max_processing_time
      - min_processing_time
      - origin_country_iso
      - primary_cost
      - secondary_cost
      - title
      type: object
    inline_object_20:
      properties:
        title:
          description: The name string of this shipping profile.
          type: string
        origin_country_iso:
          description: The ISO code of the country from which the listing ships.
          format: ISO 3166-1 alpha-2
          type: string
        min_processing_time:
          description: The minimum time required to process to ship listings with
            this shipping profile.
          maximum: 10
          minimum: 1
          type: integer
        max_processing_time:
          description: The maximum processing time the listing needs to ship.
          maximum: 10
          minimum: 1
          type: integer
        processing_time_unit:
          default: business_days
          description: The unit used to represent how long a processing time is. A
            week is equivalent to 5 business days. If none is provided, the unit is
            set to "business_days".
          enum:
          - business_days
          - weeks
          type: string
        origin_postal_code:
          default: "null"
          description: The postal code string (not necessarily a number) for the location
            from which the listing ships. Required if the `origin_country_iso` is
            `US` or `CA`.
          type: string
      type: object
    inline_object_21:
      properties:
        primary_cost:
          description: The cost of shipping to this country/region alone, measured
            in the store's default currency.
          format: float
          minimum: 0
          type: number
        secondary_cost:
          description: The cost of shipping to this country/region with another item,
            measured in the store's default currency.
          format: float
          minimum: 0
          type: number
        destination_country_iso:
          default: "null"
          description: The ISO code of the country to which the listing ships. If
            null, request sets destination to destination_region. Required if destination_region
            is null or not provided.
          format: ISO 3166-1 alpha-2
          type: string
        destination_region:
          default: none
          description: The code of the region to which the listing ships. A region
            represents a set of countries. Supported regions are Europe Union and
            Non-Europe Union (countries in Europe not in EU). If `none`, request sets
            destination to destination_country_iso. Required if destination_country_iso
            is null or not provided.
          enum:
          - eu
          - non_eu
          - none
          type: string
        shipping_carrier_id:
          default: 0
          description: The unique ID of a supported shipping carrier, which is used
            to calculate an Estimated Delivery Date. **Required with `mail_class`**
            if `min_delivery_days` and `max_delivery_days` are null.
          minimum: 0
          type: integer
        mail_class:
          default: "null"
          description: The unique ID string of a shipping carrier's mail class, which
            is used to calculate an estimated delivery date. **Required with `shipping_carrier_id`**
            if `min_delivery_days` and `max_delivery_days` are null.
          type: string
        min_delivery_days:
          description: The minimum number of business days a buyer can expect to wait
            to receive their purchased item once it has shipped. **Required with `max_delivery_days`**
            if `mail_class` is null.
          maximum: 45
          minimum: 1
          type: integer
        max_delivery_days:
          description: The maximum number of business days a buyer can expect to wait
            to receive their purchased item once it has shipped. **Required with `min_delivery_days`**
            if `mail_class` is null.
          maximum: 45
          minimum: 1
          type: integer
      required:
      - primary_cost
      - secondary_cost
      type: object
    inline_object_22:
      properties:
        primary_cost:
          description: The cost of shipping to this country/region alone, measured
            in the store's default currency.
          format: float
          minimum: 0
          type: number
        secondary_cost:
          description: The cost of shipping to this country/region with another item,
            measured in the store's default currency.
          format: float
          minimum: 0
          type: number
        destination_country_iso:
          default: "null"
          description: The ISO code of the country to which the listing ships. If
            null, request sets destination to destination_region. Required if destination_region
            is null or not provided.
          format: ISO 3166-1 alpha-2
          type: string
        destination_region:
          default: none
          description: The code of the region to which the listing ships. A region
            represents a set of countries. Supported regions are Europe Union and
            Non-Europe Union (countries in Europe not in EU). If `none`, request sets
            destination to destination_country_iso. Required if destination_country_iso
            is null or not provided.
          enum:
          - eu
          - non_eu
          - none
          type: string
        shipping_carrier_id:
          description: The unique ID of a supported shipping carrier, which is used
            to calculate an Estimated Delivery Date. **Required with `mail_class`**
            if `min_delivery_days` and `max_delivery_days` are null.
          minimum: 0
          type: integer
        mail_class:
          default: "null"
          description: The unique ID string of a shipping carrier's mail class, which
            is used to calculate an estimated delivery date. **Required with `shipping_carrier_id`**
            if `min_delivery_days` and `max_delivery_days` are null.
          type: string
        min_delivery_days:
          description: The minimum number of business days a buyer can expect to wait
            to receive their purchased item once it has shipped. **Required with `max_delivery_days`**
            if `mail_class` is null.
          maximum: 45
          minimum: 1
          type: integer
        max_delivery_days:
          description: The maximum number of business days a buyer can expect to wait
            to receive their purchased item once it has shipped. **Required with `min_delivery_days`**
            if `mail_class` is null.
          maximum: 45
          minimum: 1
          type: integer
      type: object
    inline_object_23:
      properties:
        type:
          description: The type of the shipping upgrade. Domestic (0) or international
            (1).
          enum:
          - "0"
          - "1"
          type: string
        upgrade_name:
          description: Name for the shipping upgrade shown to shoppers at checkout,
            e.g. USPS Priority.
          type: string
        price:
          description: Additional cost of adding the shipping upgrade.
          format: float
          minimum: 0
          type: number
        secondary_price:
          description: Additional cost of adding the shipping upgrade for each additional
            item.
          format: float
          minimum: 0
          type: number
        shipping_carrier_id:
          default: 0
          description: The unique ID of a supported shipping carrier, which is used
            to calculate an Estimated Delivery Date. **Required with `mail_class`**
            if `min_delivery_days` and `max_delivery_days` are null.
          minimum: 0
          type: integer
        mail_class:
          default: "null"
          description: The unique ID string of a shipping carrier's mail class, which
            is used to calculate an estimated delivery date. **Required with `shipping_carrier_id`**
            if `min_delivery_days` and `max_delivery_days` are null.
          type: string
        min_delivery_days:
          description: The minimum number of business days a buyer can expect to wait
            to receive their purchased item once it has shipped. **Required with `max_delivery_days`**
            if `mail_class` is null.
          maximum: 45
          minimum: 1
          type: integer
        max_delivery_days:
          description: The maximum number of business days a buyer can expect to wait
            to receive their purchased item once it has shipped. **Required with `min_delivery_days`**
            if `mail_class` is null.
          maximum: 45
          minimum: 1
          type: integer
      required:
      - price
      - secondary_price
      - type
      - upgrade_name
      type: object
    inline_object_24:
      properties:
        upgrade_name:
          default: "null"
          description: Name for the shipping upgrade shown to shoppers at checkout,
            e.g. USPS Priority.
          type: string
        type:
          description: The type of the shipping upgrade. Domestic (0) or international
            (1).
          enum:
          - "0"
          - "1"
          type: string
        price:
          description: Additional cost of adding the shipping upgrade.
          format: float
          minimum: 0
          type: number
        secondary_price:
          description: Additional cost of adding the shipping upgrade for each additional
            item.
          format: float
          minimum: 0
          type: number
        shipping_carrier_id:
          description: The unique ID of a supported shipping carrier, which is used
            to calculate an Estimated Delivery Date. **Required with `mail_class`**
            if `min_delivery_days` and `max_delivery_days` are null.
          minimum: 0
          type: integer
        mail_class:
          default: "null"
          description: The unique ID string of a shipping carrier's mail class, which
            is used to calculate an estimated delivery date. **Required with `shipping_carrier_id`**
            if `min_delivery_days` and `max_delivery_days` are null.
          type: string
        min_delivery_days:
          description: The minimum number of business days a buyer can expect to wait
            to receive their purchased item once it has shipped. **Required with `max_delivery_days`**
            if `mail_class` is null.
          maximum: 45
          minimum: 1
          type: integer
        max_delivery_days:
          description: The maximum number of business days a buyer can expect to wait
            to receive their purchased item once it has shipped. **Required with `min_delivery_days`**
            if `mail_class` is null.
          maximum: 45
          minimum: 1
          type: integer
      type: object
    inline_object_25:
      properties:
        token:
          type: string
      required:
      - token
      type: object
  securitySchemes:
    api_key:
      description: Every request to a v3 API endpoint must include this data, with
        your application's API key as the value.
      in: header
      name: x-api-key
      type: apiKey
    oauth2:
      description: Open API v3 supports authenticating via OAuth 2.0. More information
        about Etsy's specific implementation of OAuth2 can be found [here](/documentation/essentials/oauth2).
      flows:
        authorizationCode:
          authorizationUrl: https://www.etsy.com/oauth/connect
          scopes:
            address_r: see billing and shipping addresses
            address_w: update billing and shipping addresses
            billing_r: see all billing statement data
            cart_r: read shopping carts
            cart_w: add/remove from shopping carts
            email_r: Read a member's email address
            favorites_r: see private favorites
            favorites_w: add/remove favorites
            feedback_r: see purchase info in feedback
            listings_d: delete listings
            listings_r: see all listings (including expired etc)
            listings_w: create/edit listings
            profile_r: see all profile data
            profile_w: update user profile, avatar, etc
            recommend_r: see recommended listings
            recommend_w: accept/reject recommended listings
            shops_r: see private shop info
            shops_w: update shop
            transactions_r: see all checkout/payment data
            transactions_w: update receipts
          tokenUrl: https://openapi.etsy.com/v3/public/oauth/token
      type: oauth2
x-tagGroups:
- name: Listing Management
  tags:
  - BuyerTaxonomy
  - SellerTaxonomy
  - ShopListing
  - ShopListing File
  - ShopListing Image
  - ShopListing Inventory
  - ShopListing Offering
  - ShopListing Product
  - ShopListing Translation
  - ShopListing VariationImage
  - ShopListing Video
- name: Other
  tags:
  - Other
- name: Payment Management
  tags:
  - Ledger Entry
  - Payment
- name: Receipt Management
  tags:
  - Shop Receipt
  - Shop Receipt Transactions
- name: Review Management
  tags:
  - Review
- name: Shipping Management
  tags:
  - Shop ShippingProfile
- name: Shop Management
  tags:
  - Shop
  - Shop ProductionPartner
  - Shop Section
- name: Shop Policy Management
  tags:
  - Shop Return Policy
- name: User Management
  tags:
  - User
  - UserAddress

