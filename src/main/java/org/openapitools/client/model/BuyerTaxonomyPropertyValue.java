/*
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy's Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2023 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * A property value for a specific product property, which may also employ a specific scale.
 */
@ApiModel(description = "A property value for a specific product property, which may also employ a specific scale.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-08T08:37:51.285-04:00[America/Toronto]")
public class BuyerTaxonomyPropertyValue {
  public static final String SERIALIZED_NAME_VALUE_ID = "value_id";
  @SerializedName(SERIALIZED_NAME_VALUE_ID)
  private Long valueId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SCALE_ID = "scale_id";
  @SerializedName(SERIALIZED_NAME_SCALE_ID)
  private Long scaleId;

  public static final String SERIALIZED_NAME_EQUAL_TO = "equal_to";
  @SerializedName(SERIALIZED_NAME_EQUAL_TO)
  private List<Long> equalTo = null;

  public BuyerTaxonomyPropertyValue() { 
  }

  public BuyerTaxonomyPropertyValue valueId(Long valueId) {
    
    this.valueId = valueId;
    return this;
  }

   /**
   * The numeric ID of this property value.
   * minimum: 1
   * @return valueId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The numeric ID of this property value.")

  public Long getValueId() {
    return valueId;
  }


  public void setValueId(Long valueId) {
    this.valueId = valueId;
  }


  public BuyerTaxonomyPropertyValue name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * The name string of this property value.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name string of this property value.")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public BuyerTaxonomyPropertyValue scaleId(Long scaleId) {
    
    this.scaleId = scaleId;
    return this;
  }

   /**
   * The numeric scale ID of the scale to which this property value belongs.
   * minimum: 1
   * @return scaleId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The numeric scale ID of the scale to which this property value belongs.")

  public Long getScaleId() {
    return scaleId;
  }


  public void setScaleId(Long scaleId) {
    this.scaleId = scaleId;
  }


  public BuyerTaxonomyPropertyValue equalTo(List<Long> equalTo) {
    
    this.equalTo = equalTo;
    return this;
  }

  public BuyerTaxonomyPropertyValue addEqualToItem(Long equalToItem) {
    if (this.equalTo == null) {
      this.equalTo = new ArrayList<Long>();
    }
    this.equalTo.add(equalToItem);
    return this;
  }

   /**
   * A list of numeric property value IDs this property value is equal to (if any).
   * @return equalTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of numeric property value IDs this property value is equal to (if any).")

  public List<Long> getEqualTo() {
    return equalTo;
  }


  public void setEqualTo(List<Long> equalTo) {
    this.equalTo = equalTo;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BuyerTaxonomyPropertyValue buyerTaxonomyPropertyValue = (BuyerTaxonomyPropertyValue) o;
    return Objects.equals(this.valueId, buyerTaxonomyPropertyValue.valueId) &&
        Objects.equals(this.name, buyerTaxonomyPropertyValue.name) &&
        Objects.equals(this.scaleId, buyerTaxonomyPropertyValue.scaleId) &&
        Objects.equals(this.equalTo, buyerTaxonomyPropertyValue.equalTo);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(valueId, name, scaleId, equalTo);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BuyerTaxonomyPropertyValue {\n");
    sb.append("    valueId: ").append(toIndentedString(valueId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    scaleId: ").append(toIndentedString(scaleId)).append("\n");
    sb.append("    equalTo: ").append(toIndentedString(equalTo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

