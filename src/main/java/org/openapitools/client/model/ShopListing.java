/*
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace <a class=\"wt-text-link wt-p-xs-0\" href=\"https://www.etsy.com/developers/documentation\">Etsy's Open API v2</a>, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/issues/new/choose\">please add an issue in Github</a>.</p></div>&copy; 2021-2022 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.Money;

/**
 * A listing from a shop, which contains a product quantity, title, description, price, etc.
 */
@ApiModel(description = "A listing from a shop, which contains a product quantity, title, description, price, etc.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-05-07T10:51:54.559-04:00[America/Toronto]")
public class ShopListing {
  public static final String SERIALIZED_NAME_LISTING_ID = "listing_id";
  @SerializedName(SERIALIZED_NAME_LISTING_ID)
  private Long listingId;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Long userId;

  public static final String SERIALIZED_NAME_SHOP_ID = "shop_id";
  @SerializedName(SERIALIZED_NAME_SHOP_ID)
  private Long shopId;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  /**
   * An enumerated string from any of: active or inactive. Note: Setting a draft listing to active will also publish the listing on etsy.com. Setting a sold out listing to active will update the quantity to 1 and renew the listing on etsy.com.
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    ACTIVE("active"),
    
    INACTIVE("inactive"),
    
    SOLD_OUT("sold_out"),
    
    DRAFT("draft"),
    
    EXPIRED("expired");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_CREATION_TIMESTAMP = "creation_timestamp";
  @SerializedName(SERIALIZED_NAME_CREATION_TIMESTAMP)
  private Long creationTimestamp;

  public static final String SERIALIZED_NAME_ENDING_TIMESTAMP = "ending_timestamp";
  @SerializedName(SERIALIZED_NAME_ENDING_TIMESTAMP)
  private Long endingTimestamp;

  public static final String SERIALIZED_NAME_ORIGINAL_CREATION_TIMESTAMP = "original_creation_timestamp";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_CREATION_TIMESTAMP)
  private Long originalCreationTimestamp;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_TIMESTAMP = "last_modified_timestamp";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_TIMESTAMP)
  private Long lastModifiedTimestamp;

  public static final String SERIALIZED_NAME_STATE_TIMESTAMP = "state_timestamp";
  @SerializedName(SERIALIZED_NAME_STATE_TIMESTAMP)
  private Long stateTimestamp;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Long quantity;

  public static final String SERIALIZED_NAME_SHOP_SECTION_ID = "shop_section_id";
  @SerializedName(SERIALIZED_NAME_SHOP_SECTION_ID)
  private Long shopSectionId;

  public static final String SERIALIZED_NAME_FEATURED_RANK = "featured_rank";
  @SerializedName(SERIALIZED_NAME_FEATURED_RANK)
  private Long featuredRank;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_NUM_FAVORERS = "num_favorers";
  @SerializedName(SERIALIZED_NAME_NUM_FAVORERS)
  private Long numFavorers;

  public static final String SERIALIZED_NAME_NON_TAXABLE = "non_taxable";
  @SerializedName(SERIALIZED_NAME_NON_TAXABLE)
  private Boolean nonTaxable;

  public static final String SERIALIZED_NAME_IS_TAXABLE = "is_taxable";
  @SerializedName(SERIALIZED_NAME_IS_TAXABLE)
  private Boolean isTaxable;

  public static final String SERIALIZED_NAME_IS_CUSTOMIZABLE = "is_customizable";
  @SerializedName(SERIALIZED_NAME_IS_CUSTOMIZABLE)
  private Boolean isCustomizable;

  public static final String SERIALIZED_NAME_IS_PERSONALIZABLE = "is_personalizable";
  @SerializedName(SERIALIZED_NAME_IS_PERSONALIZABLE)
  private Boolean isPersonalizable;

  public static final String SERIALIZED_NAME_PERSONALIZATION_IS_REQUIRED = "personalization_is_required";
  @SerializedName(SERIALIZED_NAME_PERSONALIZATION_IS_REQUIRED)
  private Boolean personalizationIsRequired;

  public static final String SERIALIZED_NAME_PERSONALIZATION_CHAR_COUNT_MAX = "personalization_char_count_max";
  @SerializedName(SERIALIZED_NAME_PERSONALIZATION_CHAR_COUNT_MAX)
  private Long personalizationCharCountMax;

  public static final String SERIALIZED_NAME_PERSONALIZATION_INSTRUCTIONS = "personalization_instructions";
  @SerializedName(SERIALIZED_NAME_PERSONALIZATION_INSTRUCTIONS)
  private String personalizationInstructions;

  /**
   * An enumerated type string that indicates whether the listing is physical or a digital download.
   */
  @JsonAdapter(ListingTypeEnum.Adapter.class)
  public enum ListingTypeEnum {
    PHYSICAL("physical"),
    
    DOWNLOAD("download"),
    
    BOTH("both");

    private String value;

    ListingTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ListingTypeEnum fromValue(String value) {
      for (ListingTypeEnum b : ListingTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ListingTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ListingTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ListingTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ListingTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_LISTING_TYPE = "listing_type";
  @SerializedName(SERIALIZED_NAME_LISTING_TYPE)
  private ListingTypeEnum listingType;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = new ArrayList<String>();

  public static final String SERIALIZED_NAME_MATERIALS = "materials";
  @SerializedName(SERIALIZED_NAME_MATERIALS)
  private List<String> materials = new ArrayList<String>();

  public static final String SERIALIZED_NAME_SHIPPING_PROFILE_ID = "shipping_profile_id";
  @SerializedName(SERIALIZED_NAME_SHIPPING_PROFILE_ID)
  private Long shippingProfileId;

  public static final String SERIALIZED_NAME_PROCESSING_MIN = "processing_min";
  @SerializedName(SERIALIZED_NAME_PROCESSING_MIN)
  private Long processingMin;

  public static final String SERIALIZED_NAME_PROCESSING_MAX = "processing_max";
  @SerializedName(SERIALIZED_NAME_PROCESSING_MAX)
  private Long processingMax;

  /**
   * An enumerated string inidcated who made the product. Helps buyers locate the listing under the Handmade heading. Requires &#39;is_supply&#39; and &#39;when_made&#39;.
   */
  @JsonAdapter(WhoMadeEnum.Adapter.class)
  public enum WhoMadeEnum {
    I_DID("i_did"),
    
    SOMEONE_ELSE("someone_else"),
    
    COLLECTIVE("collective");

    private String value;

    WhoMadeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static WhoMadeEnum fromValue(String value) {
      for (WhoMadeEnum b : WhoMadeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<WhoMadeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final WhoMadeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public WhoMadeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return WhoMadeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_WHO_MADE = "who_made";
  @SerializedName(SERIALIZED_NAME_WHO_MADE)
  private WhoMadeEnum whoMade;

  /**
   * An enumerated string for the era in which the maker made the product in this listing. Helps buyers locate the listing under the Vintage heading. Requires &#39;is_supply&#39; and &#39;who_made&#39;.
   */
  @JsonAdapter(WhenMadeEnum.Adapter.class)
  public enum WhenMadeEnum {
    MADE_TO_ORDER("made_to_order"),
    
    _2020_2022("2020_2022"),
    
    _2010_2019("2010_2019"),
    
    _2003_2009("2003_2009"),
    
    BEFORE_2003("before_2003"),
    
    _2000_2002("2000_2002"),
    
    _1990S("1990s"),
    
    _1980S("1980s"),
    
    _1970S("1970s"),
    
    _1960S("1960s"),
    
    _1950S("1950s"),
    
    _1940S("1940s"),
    
    _1930S("1930s"),
    
    _1920S("1920s"),
    
    _1910S("1910s"),
    
    _1900S("1900s"),
    
    _1800S("1800s"),
    
    _1700S("1700s"),
    
    BEFORE_1700("before_1700");

    private String value;

    WhenMadeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static WhenMadeEnum fromValue(String value) {
      for (WhenMadeEnum b : WhenMadeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<WhenMadeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final WhenMadeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public WhenMadeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return WhenMadeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_WHEN_MADE = "when_made";
  @SerializedName(SERIALIZED_NAME_WHEN_MADE)
  private WhenMadeEnum whenMade;

  public static final String SERIALIZED_NAME_IS_SUPPLY = "is_supply";
  @SerializedName(SERIALIZED_NAME_IS_SUPPLY)
  private Boolean isSupply;

  public static final String SERIALIZED_NAME_ITEM_WEIGHT = "item_weight";
  @SerializedName(SERIALIZED_NAME_ITEM_WEIGHT)
  private Float itemWeight;

  /**
   * A string defining the units used to measure the weight of the product. Default value is null.
   */
  @JsonAdapter(ItemWeightUnitEnum.Adapter.class)
  public enum ItemWeightUnitEnum {
    OZ("oz"),
    
    LB("lb"),
    
    G("g"),
    
    KG("kg");

    private String value;

    ItemWeightUnitEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ItemWeightUnitEnum fromValue(String value) {
      for (ItemWeightUnitEnum b : ItemWeightUnitEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ItemWeightUnitEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ItemWeightUnitEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ItemWeightUnitEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ItemWeightUnitEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ITEM_WEIGHT_UNIT = "item_weight_unit";
  @SerializedName(SERIALIZED_NAME_ITEM_WEIGHT_UNIT)
  private ItemWeightUnitEnum itemWeightUnit;

  public static final String SERIALIZED_NAME_ITEM_LENGTH = "item_length";
  @SerializedName(SERIALIZED_NAME_ITEM_LENGTH)
  private Float itemLength;

  public static final String SERIALIZED_NAME_ITEM_WIDTH = "item_width";
  @SerializedName(SERIALIZED_NAME_ITEM_WIDTH)
  private Float itemWidth;

  public static final String SERIALIZED_NAME_ITEM_HEIGHT = "item_height";
  @SerializedName(SERIALIZED_NAME_ITEM_HEIGHT)
  private Float itemHeight;

  /**
   * A string defining the units used to measure the dimensions of the product. Default value is null.
   */
  @JsonAdapter(ItemDimensionsUnitEnum.Adapter.class)
  public enum ItemDimensionsUnitEnum {
    IN("in"),
    
    FT("ft"),
    
    MM("mm"),
    
    CM("cm"),
    
    M("m"),
    
    YD("yd"),
    
    INCHES("inches");

    private String value;

    ItemDimensionsUnitEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ItemDimensionsUnitEnum fromValue(String value) {
      for (ItemDimensionsUnitEnum b : ItemDimensionsUnitEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<ItemDimensionsUnitEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ItemDimensionsUnitEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ItemDimensionsUnitEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ItemDimensionsUnitEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ITEM_DIMENSIONS_UNIT = "item_dimensions_unit";
  @SerializedName(SERIALIZED_NAME_ITEM_DIMENSIONS_UNIT)
  private ItemDimensionsUnitEnum itemDimensionsUnit;

  public static final String SERIALIZED_NAME_IS_PRIVATE = "is_private";
  @SerializedName(SERIALIZED_NAME_IS_PRIVATE)
  private Boolean isPrivate;

  public static final String SERIALIZED_NAME_STYLE = "style";
  @SerializedName(SERIALIZED_NAME_STYLE)
  private List<String> style = new ArrayList<String>();

  public static final String SERIALIZED_NAME_FILE_DATA = "file_data";
  @SerializedName(SERIALIZED_NAME_FILE_DATA)
  private String fileData;

  public static final String SERIALIZED_NAME_HAS_VARIATIONS = "has_variations";
  @SerializedName(SERIALIZED_NAME_HAS_VARIATIONS)
  private Boolean hasVariations;

  public static final String SERIALIZED_NAME_SHOULD_AUTO_RENEW = "should_auto_renew";
  @SerializedName(SERIALIZED_NAME_SHOULD_AUTO_RENEW)
  private Boolean shouldAutoRenew;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private String language;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private Money price;

  public static final String SERIALIZED_NAME_TAXONOMY_ID = "taxonomy_id";
  @SerializedName(SERIALIZED_NAME_TAXONOMY_ID)
  private Long taxonomyId;

  public ShopListing() { 
  }

  public ShopListing listingId(Long listingId) {
    
    this.listingId = listingId;
    return this;
  }

   /**
   * The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
   * minimum: 1
   * @return listingId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.")

  public Long getListingId() {
    return listingId;
  }


  public void setListingId(Long listingId) {
    this.listingId = listingId;
  }


  public ShopListing userId(Long userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * The numeric ID for the [user](/documentation/reference#tag/User) posting the listing.
   * minimum: 1
   * @return userId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The numeric ID for the [user](/documentation/reference#tag/User) posting the listing.")

  public Long getUserId() {
    return userId;
  }


  public void setUserId(Long userId) {
    this.userId = userId;
  }


  public ShopListing shopId(Long shopId) {
    
    this.shopId = shopId;
    return this;
  }

   /**
   * The unique positive non-zero numeric ID for an Etsy Shop.
   * minimum: 1
   * @return shopId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The unique positive non-zero numeric ID for an Etsy Shop.")

  public Long getShopId() {
    return shopId;
  }


  public void setShopId(Long shopId) {
    this.shopId = shopId;
  }


  public ShopListing title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * The listing&#39;s title string. Valid title strings contain only letters, numbers, punctuation marks, mathematical symbols, whitespace characters, ™, ©, and ®. (regex: /[^\\\\p{L}\\\\p{Nd}\\\\p{P}\\\\p{Sm}\\\\p{Zs}™©®]/u) You can only use the %, :, &amp; and + characters once each.
   * @return title
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The listing's title string. Valid title strings contain only letters, numbers, punctuation marks, mathematical symbols, whitespace characters, ™, ©, and ®. (regex: /[^\\\\p{L}\\\\p{Nd}\\\\p{P}\\\\p{Sm}\\\\p{Zs}™©®]/u) You can only use the %, :, & and + characters once each.")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public ShopListing description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * A description string of the product for sale in the listing.
   * @return description
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A description string of the product for sale in the listing.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ShopListing state(StateEnum state) {
    
    this.state = state;
    return this;
  }

   /**
   * An enumerated string from any of: active or inactive. Note: Setting a draft listing to active will also publish the listing on etsy.com. Setting a sold out listing to active will update the quantity to 1 and renew the listing on etsy.com.
   * @return state
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An enumerated string from any of: active or inactive. Note: Setting a draft listing to active will also publish the listing on etsy.com. Setting a sold out listing to active will update the quantity to 1 and renew the listing on etsy.com.")

  public StateEnum getState() {
    return state;
  }


  public void setState(StateEnum state) {
    this.state = state;
  }


  public ShopListing creationTimestamp(Long creationTimestamp) {
    
    this.creationTimestamp = creationTimestamp;
    return this;
  }

   /**
   * The listing\\&#39;s creation time, in epoch seconds.
   * minimum: 946684800
   * @return creationTimestamp
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The listing\\'s creation time, in epoch seconds.")

  public Long getCreationTimestamp() {
    return creationTimestamp;
  }


  public void setCreationTimestamp(Long creationTimestamp) {
    this.creationTimestamp = creationTimestamp;
  }


  public ShopListing endingTimestamp(Long endingTimestamp) {
    
    this.endingTimestamp = endingTimestamp;
    return this;
  }

   /**
   * The listing\\&#39;s expiration time, in epoch seconds.
   * minimum: 946684800
   * @return endingTimestamp
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The listing\\'s expiration time, in epoch seconds.")

  public Long getEndingTimestamp() {
    return endingTimestamp;
  }


  public void setEndingTimestamp(Long endingTimestamp) {
    this.endingTimestamp = endingTimestamp;
  }


  public ShopListing originalCreationTimestamp(Long originalCreationTimestamp) {
    
    this.originalCreationTimestamp = originalCreationTimestamp;
    return this;
  }

   /**
   * The listing\\&#39;s creation time, in epoch seconds.
   * minimum: 946684800
   * @return originalCreationTimestamp
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The listing\\'s creation time, in epoch seconds.")

  public Long getOriginalCreationTimestamp() {
    return originalCreationTimestamp;
  }


  public void setOriginalCreationTimestamp(Long originalCreationTimestamp) {
    this.originalCreationTimestamp = originalCreationTimestamp;
  }


  public ShopListing lastModifiedTimestamp(Long lastModifiedTimestamp) {
    
    this.lastModifiedTimestamp = lastModifiedTimestamp;
    return this;
  }

   /**
   * The time of the last update to the listing, in epoch seconds.
   * minimum: 946684800
   * @return lastModifiedTimestamp
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The time of the last update to the listing, in epoch seconds.")

  public Long getLastModifiedTimestamp() {
    return lastModifiedTimestamp;
  }


  public void setLastModifiedTimestamp(Long lastModifiedTimestamp) {
    this.lastModifiedTimestamp = lastModifiedTimestamp;
  }


  public ShopListing stateTimestamp(Long stateTimestamp) {
    
    this.stateTimestamp = stateTimestamp;
    return this;
  }

   /**
   * The date and time of the last state change of this listing.
   * minimum: 946684800
   * @return stateTimestamp
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The date and time of the last state change of this listing.")

  public Long getStateTimestamp() {
    return stateTimestamp;
  }


  public void setStateTimestamp(Long stateTimestamp) {
    this.stateTimestamp = stateTimestamp;
  }


  public ShopListing quantity(Long quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * The positive non-zero number of products available for purchase in the listing. Note: The listing quantity is the sum of available offering quantities. You can request the quantities for individual offerings from the ListingInventory resource using the [getListingInventory](/documentation/reference#operation/getListingInventory) endpoint.
   * minimum: 0
   * @return quantity
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The positive non-zero number of products available for purchase in the listing. Note: The listing quantity is the sum of available offering quantities. You can request the quantities for individual offerings from the ListingInventory resource using the [getListingInventory](/documentation/reference#operation/getListingInventory) endpoint.")

  public Long getQuantity() {
    return quantity;
  }


  public void setQuantity(Long quantity) {
    this.quantity = quantity;
  }


  public ShopListing shopSectionId(Long shopSectionId) {
    
    this.shopSectionId = shopSectionId;
    return this;
  }

   /**
   * The numeric ID of a section in a specific Etsy shop.
   * minimum: 1
   * @return shopSectionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The numeric ID of a section in a specific Etsy shop.")

  public Long getShopSectionId() {
    return shopSectionId;
  }


  public void setShopSectionId(Long shopSectionId) {
    this.shopSectionId = shopSectionId;
  }


  public ShopListing featuredRank(Long featuredRank) {
    
    this.featuredRank = featuredRank;
    return this;
  }

   /**
   * The positive non-zero numeric position in the featured listings of the shop, with rank 1 listings appearing in the left-most position in featured listing on a shop’s home page.
   * @return featuredRank
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The positive non-zero numeric position in the featured listings of the shop, with rank 1 listings appearing in the left-most position in featured listing on a shop’s home page.")

  public Long getFeaturedRank() {
    return featuredRank;
  }


  public void setFeaturedRank(Long featuredRank) {
    this.featuredRank = featuredRank;
  }


  public ShopListing url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * The full URL to the listing&#39;s page on Etsy.
   * @return url
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The full URL to the listing's page on Etsy.")

  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
  }


  public ShopListing numFavorers(Long numFavorers) {
    
    this.numFavorers = numFavorers;
    return this;
  }

   /**
   * The number of users who marked this Listing a favorite.
   * minimum: 0
   * @return numFavorers
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The number of users who marked this Listing a favorite.")

  public Long getNumFavorers() {
    return numFavorers;
  }


  public void setNumFavorers(Long numFavorers) {
    this.numFavorers = numFavorers;
  }


  public ShopListing nonTaxable(Boolean nonTaxable) {
    
    this.nonTaxable = nonTaxable;
    return this;
  }

   /**
   * When true, applicable [shop](/documentation/reference#tag/Shop) tax rates do not apply to this listing at checkout.
   * @return nonTaxable
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "When true, applicable [shop](/documentation/reference#tag/Shop) tax rates do not apply to this listing at checkout.")

  public Boolean getNonTaxable() {
    return nonTaxable;
  }


  public void setNonTaxable(Boolean nonTaxable) {
    this.nonTaxable = nonTaxable;
  }


  public ShopListing isTaxable(Boolean isTaxable) {
    
    this.isTaxable = isTaxable;
    return this;
  }

   /**
   * When true, applicable [shop](/documentation/reference#tag/Shop) tax rates apply to this listing at checkout.
   * @return isTaxable
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "When true, applicable [shop](/documentation/reference#tag/Shop) tax rates apply to this listing at checkout.")

  public Boolean getIsTaxable() {
    return isTaxable;
  }


  public void setIsTaxable(Boolean isTaxable) {
    this.isTaxable = isTaxable;
  }


  public ShopListing isCustomizable(Boolean isCustomizable) {
    
    this.isCustomizable = isCustomizable;
    return this;
  }

   /**
   * When true, a buyer may contact the seller for a customized order. The default value is true when a shop accepts custom orders. Does not apply to shops that do not accept custom orders.
   * @return isCustomizable
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "When true, a buyer may contact the seller for a customized order. The default value is true when a shop accepts custom orders. Does not apply to shops that do not accept custom orders.")

  public Boolean getIsCustomizable() {
    return isCustomizable;
  }


  public void setIsCustomizable(Boolean isCustomizable) {
    this.isCustomizable = isCustomizable;
  }


  public ShopListing isPersonalizable(Boolean isPersonalizable) {
    
    this.isPersonalizable = isPersonalizable;
    return this;
  }

   /**
   * When true, this listing is personalizable. The default value is null.
   * @return isPersonalizable
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "When true, this listing is personalizable. The default value is null.")

  public Boolean getIsPersonalizable() {
    return isPersonalizable;
  }


  public void setIsPersonalizable(Boolean isPersonalizable) {
    this.isPersonalizable = isPersonalizable;
  }


  public ShopListing personalizationIsRequired(Boolean personalizationIsRequired) {
    
    this.personalizationIsRequired = personalizationIsRequired;
    return this;
  }

   /**
   * When true, this listing requires personalization. The default value is null. Will only change if is_personalizable is &#39;true&#39;.
   * @return personalizationIsRequired
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "When true, this listing requires personalization. The default value is null. Will only change if is_personalizable is 'true'.")

  public Boolean getPersonalizationIsRequired() {
    return personalizationIsRequired;
  }


  public void setPersonalizationIsRequired(Boolean personalizationIsRequired) {
    this.personalizationIsRequired = personalizationIsRequired;
  }


  public ShopListing personalizationCharCountMax(Long personalizationCharCountMax) {
    
    this.personalizationCharCountMax = personalizationCharCountMax;
    return this;
  }

   /**
   * This an integer value representing the maximum length for the personalization message entered by the buyer. Will only change if is_personalizable is &#39;true&#39;.
   * @return personalizationCharCountMax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "This an integer value representing the maximum length for the personalization message entered by the buyer. Will only change if is_personalizable is 'true'.")

  public Long getPersonalizationCharCountMax() {
    return personalizationCharCountMax;
  }


  public void setPersonalizationCharCountMax(Long personalizationCharCountMax) {
    this.personalizationCharCountMax = personalizationCharCountMax;
  }


  public ShopListing personalizationInstructions(String personalizationInstructions) {
    
    this.personalizationInstructions = personalizationInstructions;
    return this;
  }

   /**
   * When true, this listing requires personalization. The default value is null. Will only change if is_personalizable is &#39;true&#39;.
   * @return personalizationInstructions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "When true, this listing requires personalization. The default value is null. Will only change if is_personalizable is 'true'.")

  public String getPersonalizationInstructions() {
    return personalizationInstructions;
  }


  public void setPersonalizationInstructions(String personalizationInstructions) {
    this.personalizationInstructions = personalizationInstructions;
  }


  public ShopListing listingType(ListingTypeEnum listingType) {
    
    this.listingType = listingType;
    return this;
  }

   /**
   * An enumerated type string that indicates whether the listing is physical or a digital download.
   * @return listingType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An enumerated type string that indicates whether the listing is physical or a digital download.")

  public ListingTypeEnum getListingType() {
    return listingType;
  }


  public void setListingType(ListingTypeEnum listingType) {
    this.listingType = listingType;
  }


  public ShopListing tags(List<String> tags) {
    
    this.tags = tags;
    return this;
  }

  public ShopListing addTagsItem(String tagsItem) {
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * A comma-separated list of tag strings for the listing. Valid tag strings contain only letters, numbers, whitespace characters, -, &#39;, ™, ©, and ®. (regex: /[^\\\\p{L}\\\\p{Nd}\\\\p{Zs}\\\\-&#39;™©®]/u) Default value is null.
   * @return tags
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A comma-separated list of tag strings for the listing. Valid tag strings contain only letters, numbers, whitespace characters, -, ', ™, ©, and ®. (regex: /[^\\\\p{L}\\\\p{Nd}\\\\p{Zs}\\\\-'™©®]/u) Default value is null.")

  public List<String> getTags() {
    return tags;
  }


  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public ShopListing materials(List<String> materials) {
    
    this.materials = materials;
    return this;
  }

  public ShopListing addMaterialsItem(String materialsItem) {
    this.materials.add(materialsItem);
    return this;
  }

   /**
   * A list of material strings for materials used in the product. Valid materials strings contain only letters, numbers, and whitespace characters. (regex: /[^\\\\p{L}\\\\p{Nd}\\\\p{Zs}]/u) Default value is null.
   * @return materials
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A list of material strings for materials used in the product. Valid materials strings contain only letters, numbers, and whitespace characters. (regex: /[^\\\\p{L}\\\\p{Nd}\\\\p{Zs}]/u) Default value is null.")

  public List<String> getMaterials() {
    return materials;
  }


  public void setMaterials(List<String> materials) {
    this.materials = materials;
  }


  public ShopListing shippingProfileId(Long shippingProfileId) {
    
    this.shippingProfileId = shippingProfileId;
    return this;
  }

   /**
   * The numeric ID of the [shipping profile](/documentation/reference#tag/ShopListing-ShippingProfile) associated with the listing. Required when listing type&#x3D;physical.
   * minimum: 1
   * @return shippingProfileId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The numeric ID of the [shipping profile](/documentation/reference#tag/ShopListing-ShippingProfile) associated with the listing. Required when listing type=physical.")

  public Long getShippingProfileId() {
    return shippingProfileId;
  }


  public void setShippingProfileId(Long shippingProfileId) {
    this.shippingProfileId = shippingProfileId;
  }


  public ShopListing processingMin(Long processingMin) {
    
    this.processingMin = processingMin;
    return this;
  }

   /**
   * The minimum number of days required to process this listing. Default value is null.
   * minimum: 0
   * @return processingMin
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The minimum number of days required to process this listing. Default value is null.")

  public Long getProcessingMin() {
    return processingMin;
  }


  public void setProcessingMin(Long processingMin) {
    this.processingMin = processingMin;
  }


  public ShopListing processingMax(Long processingMax) {
    
    this.processingMax = processingMax;
    return this;
  }

   /**
   * The maximum number of days required to process this listing. Default value is null.
   * minimum: 0
   * @return processingMax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The maximum number of days required to process this listing. Default value is null.")

  public Long getProcessingMax() {
    return processingMax;
  }


  public void setProcessingMax(Long processingMax) {
    this.processingMax = processingMax;
  }


  public ShopListing whoMade(WhoMadeEnum whoMade) {
    
    this.whoMade = whoMade;
    return this;
  }

   /**
   * An enumerated string inidcated who made the product. Helps buyers locate the listing under the Handmade heading. Requires &#39;is_supply&#39; and &#39;when_made&#39;.
   * @return whoMade
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "An enumerated string inidcated who made the product. Helps buyers locate the listing under the Handmade heading. Requires 'is_supply' and 'when_made'.")

  public WhoMadeEnum getWhoMade() {
    return whoMade;
  }


  public void setWhoMade(WhoMadeEnum whoMade) {
    this.whoMade = whoMade;
  }


  public ShopListing whenMade(WhenMadeEnum whenMade) {
    
    this.whenMade = whenMade;
    return this;
  }

   /**
   * An enumerated string for the era in which the maker made the product in this listing. Helps buyers locate the listing under the Vintage heading. Requires &#39;is_supply&#39; and &#39;who_made&#39;.
   * @return whenMade
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "An enumerated string for the era in which the maker made the product in this listing. Helps buyers locate the listing under the Vintage heading. Requires 'is_supply' and 'who_made'.")

  public WhenMadeEnum getWhenMade() {
    return whenMade;
  }


  public void setWhenMade(WhenMadeEnum whenMade) {
    this.whenMade = whenMade;
  }


  public ShopListing isSupply(Boolean isSupply) {
    
    this.isSupply = isSupply;
    return this;
  }

   /**
   * When true, tags the listing as a supply product, else indicates that it&#39;s a finished product. Helps buyers locate the listing under the Supplies heading. Requires &#39;who_made&#39; and &#39;when_made&#39;.
   * @return isSupply
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "When true, tags the listing as a supply product, else indicates that it's a finished product. Helps buyers locate the listing under the Supplies heading. Requires 'who_made' and 'when_made'.")

  public Boolean getIsSupply() {
    return isSupply;
  }


  public void setIsSupply(Boolean isSupply) {
    this.isSupply = isSupply;
  }


  public ShopListing itemWeight(Float itemWeight) {
    
    this.itemWeight = itemWeight;
    return this;
  }

   /**
   * The numeric weight of the product measured in units set in \\&#39;item_weight_unit\\&#39;. Default value is null. If set, the value must be greater than 0.
   * @return itemWeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The numeric weight of the product measured in units set in \\'item_weight_unit\\'. Default value is null. If set, the value must be greater than 0.")

  public Float getItemWeight() {
    return itemWeight;
  }


  public void setItemWeight(Float itemWeight) {
    this.itemWeight = itemWeight;
  }


  public ShopListing itemWeightUnit(ItemWeightUnitEnum itemWeightUnit) {
    
    this.itemWeightUnit = itemWeightUnit;
    return this;
  }

   /**
   * A string defining the units used to measure the weight of the product. Default value is null.
   * @return itemWeightUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "A string defining the units used to measure the weight of the product. Default value is null.")

  public ItemWeightUnitEnum getItemWeightUnit() {
    return itemWeightUnit;
  }


  public void setItemWeightUnit(ItemWeightUnitEnum itemWeightUnit) {
    this.itemWeightUnit = itemWeightUnit;
  }


  public ShopListing itemLength(Float itemLength) {
    
    this.itemLength = itemLength;
    return this;
  }

   /**
   * The numeric length of the product measured in units set in \\&#39;item_dimensions_unit\\&#39;. Default value is null. If set, the value must be greater than 0.
   * @return itemLength
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The numeric length of the product measured in units set in \\'item_dimensions_unit\\'. Default value is null. If set, the value must be greater than 0.")

  public Float getItemLength() {
    return itemLength;
  }


  public void setItemLength(Float itemLength) {
    this.itemLength = itemLength;
  }


  public ShopListing itemWidth(Float itemWidth) {
    
    this.itemWidth = itemWidth;
    return this;
  }

   /**
   * The numeric width of the product measured in units set in \\&#39;item_dimensions_unit\\&#39;. Default value is null. If set, the value must be greater than 0.
   * @return itemWidth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The numeric width of the product measured in units set in \\'item_dimensions_unit\\'. Default value is null. If set, the value must be greater than 0.")

  public Float getItemWidth() {
    return itemWidth;
  }


  public void setItemWidth(Float itemWidth) {
    this.itemWidth = itemWidth;
  }


  public ShopListing itemHeight(Float itemHeight) {
    
    this.itemHeight = itemHeight;
    return this;
  }

   /**
   * The numeric length of the product measured in units set in \\&#39;item_dimensions_unit\\&#39;. Default value is null. If set, the value must be greater than 0.
   * @return itemHeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The numeric length of the product measured in units set in \\'item_dimensions_unit\\'. Default value is null. If set, the value must be greater than 0.")

  public Float getItemHeight() {
    return itemHeight;
  }


  public void setItemHeight(Float itemHeight) {
    this.itemHeight = itemHeight;
  }


  public ShopListing itemDimensionsUnit(ItemDimensionsUnitEnum itemDimensionsUnit) {
    
    this.itemDimensionsUnit = itemDimensionsUnit;
    return this;
  }

   /**
   * A string defining the units used to measure the dimensions of the product. Default value is null.
   * @return itemDimensionsUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "A string defining the units used to measure the dimensions of the product. Default value is null.")

  public ItemDimensionsUnitEnum getItemDimensionsUnit() {
    return itemDimensionsUnit;
  }


  public void setItemDimensionsUnit(ItemDimensionsUnitEnum itemDimensionsUnit) {
    this.itemDimensionsUnit = itemDimensionsUnit;
  }


  public ShopListing isPrivate(Boolean isPrivate) {
    
    this.isPrivate = isPrivate;
    return this;
  }

   /**
   * When true, this is a private listing intendend for a specific buyer and hidden from shop view.
   * @return isPrivate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "When true, this is a private listing intendend for a specific buyer and hidden from shop view.")

  public Boolean getIsPrivate() {
    return isPrivate;
  }


  public void setIsPrivate(Boolean isPrivate) {
    this.isPrivate = isPrivate;
  }


  public ShopListing style(List<String> style) {
    
    this.style = style;
    return this;
  }

  public ShopListing addStyleItem(String styleItem) {
    this.style.add(styleItem);
    return this;
  }

   /**
   * An array of style strings for this listing, each of which is free-form text string such as \\\&quot;Formal\\\&quot;, or \\\&quot;Steampunk\\\&quot;. A Listing may have up to two styles. Valid style strings contain only letters, numbers, and whitespace characters. (regex: /[^\\\\p{L}\\\\p{Nd}\\\\p{Zs}]/u) Default value is null.
   * @return style
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "An array of style strings for this listing, each of which is free-form text string such as \\\"Formal\\\", or \\\"Steampunk\\\". A Listing may have up to two styles. Valid style strings contain only letters, numbers, and whitespace characters. (regex: /[^\\\\p{L}\\\\p{Nd}\\\\p{Zs}]/u) Default value is null.")

  public List<String> getStyle() {
    return style;
  }


  public void setStyle(List<String> style) {
    this.style = style;
  }


  public ShopListing fileData(String fileData) {
    
    this.fileData = fileData;
    return this;
  }

   /**
   * A string describing the files attached to a digital listing.
   * @return fileData
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A string describing the files attached to a digital listing.")

  public String getFileData() {
    return fileData;
  }


  public void setFileData(String fileData) {
    this.fileData = fileData;
  }


  public ShopListing hasVariations(Boolean hasVariations) {
    
    this.hasVariations = hasVariations;
    return this;
  }

   /**
   * When true, the listing has variations.
   * @return hasVariations
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "When true, the listing has variations.")

  public Boolean getHasVariations() {
    return hasVariations;
  }


  public void setHasVariations(Boolean hasVariations) {
    this.hasVariations = hasVariations;
  }


  public ShopListing shouldAutoRenew(Boolean shouldAutoRenew) {
    
    this.shouldAutoRenew = shouldAutoRenew;
    return this;
  }

   /**
   * When true, renews a listing for four months upon expriation. If set to true when previously false, etsy.com renews the listing before it expires, but the renewal period starts immidiately rather than extending the listing&#39;s expiration date. Any unused time remaining on the listing is lost. Renewals result in charges to a user&#39;s bill.
   * @return shouldAutoRenew
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "When true, renews a listing for four months upon expriation. If set to true when previously false, etsy.com renews the listing before it expires, but the renewal period starts immidiately rather than extending the listing's expiration date. Any unused time remaining on the listing is lost. Renewals result in charges to a user's bill.")

  public Boolean getShouldAutoRenew() {
    return shouldAutoRenew;
  }


  public void setShouldAutoRenew(Boolean shouldAutoRenew) {
    this.shouldAutoRenew = shouldAutoRenew;
  }


  public ShopListing language(String language) {
    
    this.language = language;
    return this;
  }

   /**
   * The IETF language tag for the default language of the listing. Ex: &#x60;de&#x60;, &#x60;en&#x60;, &#x60;es&#x60;, &#x60;fr&#x60;, &#x60;it&#x60;, &#x60;ja&#x60;, &#x60;nl&#x60;, &#x60;pl&#x60;, &#x60;pt&#x60;, &#x60;ru&#x60;.
   * @return language
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The IETF language tag for the default language of the listing. Ex: `de`, `en`, `es`, `fr`, `it`, `ja`, `nl`, `pl`, `pt`, `ru`.")

  public String getLanguage() {
    return language;
  }


  public void setLanguage(String language) {
    this.language = language;
  }


  public ShopListing price(Money price) {
    
    this.price = price;
    return this;
  }

   /**
   * The positive non-zero price of the product. (Sold product listings are private) Note: The price is the minimum possible price. The [&#x60;getListingInventory&#x60;](/documentation/reference/#operation/getListingInventory) method requests exact prices for available offerings.
   * @return price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The positive non-zero price of the product. (Sold product listings are private) Note: The price is the minimum possible price. The [`getListingInventory`](/documentation/reference/#operation/getListingInventory) method requests exact prices for available offerings.")

  public Money getPrice() {
    return price;
  }


  public void setPrice(Money price) {
    this.price = price;
  }


  public ShopListing taxonomyId(Long taxonomyId) {
    
    this.taxonomyId = taxonomyId;
    return this;
  }

   /**
   * The numeric taxonomy ID of the listing. See [SellerTaxonomy](/documentation/reference#tag/SellerTaxonomy) and [BuyerTaxonomy](/documentation/reference#tag/BuyerTaxonomy) for more information.
   * @return taxonomyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The numeric taxonomy ID of the listing. See [SellerTaxonomy](/documentation/reference#tag/SellerTaxonomy) and [BuyerTaxonomy](/documentation/reference#tag/BuyerTaxonomy) for more information.")

  public Long getTaxonomyId() {
    return taxonomyId;
  }


  public void setTaxonomyId(Long taxonomyId) {
    this.taxonomyId = taxonomyId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShopListing shopListing = (ShopListing) o;
    return Objects.equals(this.listingId, shopListing.listingId) &&
        Objects.equals(this.userId, shopListing.userId) &&
        Objects.equals(this.shopId, shopListing.shopId) &&
        Objects.equals(this.title, shopListing.title) &&
        Objects.equals(this.description, shopListing.description) &&
        Objects.equals(this.state, shopListing.state) &&
        Objects.equals(this.creationTimestamp, shopListing.creationTimestamp) &&
        Objects.equals(this.endingTimestamp, shopListing.endingTimestamp) &&
        Objects.equals(this.originalCreationTimestamp, shopListing.originalCreationTimestamp) &&
        Objects.equals(this.lastModifiedTimestamp, shopListing.lastModifiedTimestamp) &&
        Objects.equals(this.stateTimestamp, shopListing.stateTimestamp) &&
        Objects.equals(this.quantity, shopListing.quantity) &&
        Objects.equals(this.shopSectionId, shopListing.shopSectionId) &&
        Objects.equals(this.featuredRank, shopListing.featuredRank) &&
        Objects.equals(this.url, shopListing.url) &&
        Objects.equals(this.numFavorers, shopListing.numFavorers) &&
        Objects.equals(this.nonTaxable, shopListing.nonTaxable) &&
        Objects.equals(this.isTaxable, shopListing.isTaxable) &&
        Objects.equals(this.isCustomizable, shopListing.isCustomizable) &&
        Objects.equals(this.isPersonalizable, shopListing.isPersonalizable) &&
        Objects.equals(this.personalizationIsRequired, shopListing.personalizationIsRequired) &&
        Objects.equals(this.personalizationCharCountMax, shopListing.personalizationCharCountMax) &&
        Objects.equals(this.personalizationInstructions, shopListing.personalizationInstructions) &&
        Objects.equals(this.listingType, shopListing.listingType) &&
        Objects.equals(this.tags, shopListing.tags) &&
        Objects.equals(this.materials, shopListing.materials) &&
        Objects.equals(this.shippingProfileId, shopListing.shippingProfileId) &&
        Objects.equals(this.processingMin, shopListing.processingMin) &&
        Objects.equals(this.processingMax, shopListing.processingMax) &&
        Objects.equals(this.whoMade, shopListing.whoMade) &&
        Objects.equals(this.whenMade, shopListing.whenMade) &&
        Objects.equals(this.isSupply, shopListing.isSupply) &&
        Objects.equals(this.itemWeight, shopListing.itemWeight) &&
        Objects.equals(this.itemWeightUnit, shopListing.itemWeightUnit) &&
        Objects.equals(this.itemLength, shopListing.itemLength) &&
        Objects.equals(this.itemWidth, shopListing.itemWidth) &&
        Objects.equals(this.itemHeight, shopListing.itemHeight) &&
        Objects.equals(this.itemDimensionsUnit, shopListing.itemDimensionsUnit) &&
        Objects.equals(this.isPrivate, shopListing.isPrivate) &&
        Objects.equals(this.style, shopListing.style) &&
        Objects.equals(this.fileData, shopListing.fileData) &&
        Objects.equals(this.hasVariations, shopListing.hasVariations) &&
        Objects.equals(this.shouldAutoRenew, shopListing.shouldAutoRenew) &&
        Objects.equals(this.language, shopListing.language) &&
        Objects.equals(this.price, shopListing.price) &&
        Objects.equals(this.taxonomyId, shopListing.taxonomyId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(listingId, userId, shopId, title, description, state, creationTimestamp, endingTimestamp, originalCreationTimestamp, lastModifiedTimestamp, stateTimestamp, quantity, shopSectionId, featuredRank, url, numFavorers, nonTaxable, isTaxable, isCustomizable, isPersonalizable, personalizationIsRequired, personalizationCharCountMax, personalizationInstructions, listingType, tags, materials, shippingProfileId, processingMin, processingMax, whoMade, whenMade, isSupply, itemWeight, itemWeightUnit, itemLength, itemWidth, itemHeight, itemDimensionsUnit, isPrivate, style, fileData, hasVariations, shouldAutoRenew, language, price, taxonomyId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShopListing {\n");
    sb.append("    listingId: ").append(toIndentedString(listingId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    shopId: ").append(toIndentedString(shopId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    creationTimestamp: ").append(toIndentedString(creationTimestamp)).append("\n");
    sb.append("    endingTimestamp: ").append(toIndentedString(endingTimestamp)).append("\n");
    sb.append("    originalCreationTimestamp: ").append(toIndentedString(originalCreationTimestamp)).append("\n");
    sb.append("    lastModifiedTimestamp: ").append(toIndentedString(lastModifiedTimestamp)).append("\n");
    sb.append("    stateTimestamp: ").append(toIndentedString(stateTimestamp)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    shopSectionId: ").append(toIndentedString(shopSectionId)).append("\n");
    sb.append("    featuredRank: ").append(toIndentedString(featuredRank)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    numFavorers: ").append(toIndentedString(numFavorers)).append("\n");
    sb.append("    nonTaxable: ").append(toIndentedString(nonTaxable)).append("\n");
    sb.append("    isTaxable: ").append(toIndentedString(isTaxable)).append("\n");
    sb.append("    isCustomizable: ").append(toIndentedString(isCustomizable)).append("\n");
    sb.append("    isPersonalizable: ").append(toIndentedString(isPersonalizable)).append("\n");
    sb.append("    personalizationIsRequired: ").append(toIndentedString(personalizationIsRequired)).append("\n");
    sb.append("    personalizationCharCountMax: ").append(toIndentedString(personalizationCharCountMax)).append("\n");
    sb.append("    personalizationInstructions: ").append(toIndentedString(personalizationInstructions)).append("\n");
    sb.append("    listingType: ").append(toIndentedString(listingType)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    materials: ").append(toIndentedString(materials)).append("\n");
    sb.append("    shippingProfileId: ").append(toIndentedString(shippingProfileId)).append("\n");
    sb.append("    processingMin: ").append(toIndentedString(processingMin)).append("\n");
    sb.append("    processingMax: ").append(toIndentedString(processingMax)).append("\n");
    sb.append("    whoMade: ").append(toIndentedString(whoMade)).append("\n");
    sb.append("    whenMade: ").append(toIndentedString(whenMade)).append("\n");
    sb.append("    isSupply: ").append(toIndentedString(isSupply)).append("\n");
    sb.append("    itemWeight: ").append(toIndentedString(itemWeight)).append("\n");
    sb.append("    itemWeightUnit: ").append(toIndentedString(itemWeightUnit)).append("\n");
    sb.append("    itemLength: ").append(toIndentedString(itemLength)).append("\n");
    sb.append("    itemWidth: ").append(toIndentedString(itemWidth)).append("\n");
    sb.append("    itemHeight: ").append(toIndentedString(itemHeight)).append("\n");
    sb.append("    itemDimensionsUnit: ").append(toIndentedString(itemDimensionsUnit)).append("\n");
    sb.append("    isPrivate: ").append(toIndentedString(isPrivate)).append("\n");
    sb.append("    style: ").append(toIndentedString(style)).append("\n");
    sb.append("    fileData: ").append(toIndentedString(fileData)).append("\n");
    sb.append("    hasVariations: ").append(toIndentedString(hasVariations)).append("\n");
    sb.append("    shouldAutoRenew: ").append(toIndentedString(shouldAutoRenew)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    taxonomyId: ").append(toIndentedString(taxonomyId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

