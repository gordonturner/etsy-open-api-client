/*
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace Etsy's Open API v2, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/discussions\">please add an issue in Github</a>.</p></div>&copy; 2021-2023 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * A file associated with a digital listing.
 */
@ApiModel(description = "A file associated with a digital listing.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-06-08T08:37:51.285-04:00[America/Toronto]")
public class ShopListingFile {
  public static final String SERIALIZED_NAME_LISTING_FILE_ID = "listing_file_id";
  @SerializedName(SERIALIZED_NAME_LISTING_FILE_ID)
  private Long listingFileId;

  public static final String SERIALIZED_NAME_LISTING_ID = "listing_id";
  @SerializedName(SERIALIZED_NAME_LISTING_ID)
  private Long listingId;

  public static final String SERIALIZED_NAME_RANK = "rank";
  @SerializedName(SERIALIZED_NAME_RANK)
  private Long rank;

  public static final String SERIALIZED_NAME_FILENAME = "filename";
  @SerializedName(SERIALIZED_NAME_FILENAME)
  private String filename;

  public static final String SERIALIZED_NAME_FILESIZE = "filesize";
  @SerializedName(SERIALIZED_NAME_FILESIZE)
  private String filesize;

  public static final String SERIALIZED_NAME_SIZE_BYTES = "size_bytes";
  @SerializedName(SERIALIZED_NAME_SIZE_BYTES)
  private Long sizeBytes;

  public static final String SERIALIZED_NAME_FILETYPE = "filetype";
  @SerializedName(SERIALIZED_NAME_FILETYPE)
  private String filetype;

  public static final String SERIALIZED_NAME_CREATE_TIMESTAMP = "create_timestamp";
  @SerializedName(SERIALIZED_NAME_CREATE_TIMESTAMP)
  private Long createTimestamp;

  public static final String SERIALIZED_NAME_CREATED_TIMESTAMP = "created_timestamp";
  @SerializedName(SERIALIZED_NAME_CREATED_TIMESTAMP)
  private Long createdTimestamp;

  public ShopListingFile() { 
  }

  public ShopListingFile listingFileId(Long listingFileId) {
    
    this.listingFileId = listingFileId;
    return this;
  }

   /**
   * The unique numeric ID of a file associated with a digital listing.
   * minimum: 1
   * @return listingFileId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique numeric ID of a file associated with a digital listing.")

  public Long getListingFileId() {
    return listingFileId;
  }


  public void setListingFileId(Long listingFileId) {
    this.listingFileId = listingFileId;
  }


  public ShopListingFile listingId(Long listingId) {
    
    this.listingId = listingId;
    return this;
  }

   /**
   * The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
   * minimum: 1
   * @return listingId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.")

  public Long getListingId() {
    return listingId;
  }


  public void setListingId(Long listingId) {
    this.listingId = listingId;
  }


  public ShopListingFile rank(Long rank) {
    
    this.rank = rank;
    return this;
  }

   /**
   * The numeric index of the display order position of this file in the listing, starting at 1.
   * minimum: 0
   * @return rank
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The numeric index of the display order position of this file in the listing, starting at 1.")

  public Long getRank() {
    return rank;
  }


  public void setRank(Long rank) {
    this.rank = rank;
  }


  public ShopListingFile filename(String filename) {
    
    this.filename = filename;
    return this;
  }

   /**
   * The file name string for a file associated with a digital listing.
   * @return filename
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The file name string for a file associated with a digital listing.")

  public String getFilename() {
    return filename;
  }


  public void setFilename(String filename) {
    this.filename = filename;
  }


  public ShopListingFile filesize(String filesize) {
    
    this.filesize = filesize;
    return this;
  }

   /**
   * A human-readable format size string for the size of a file.
   * @return filesize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A human-readable format size string for the size of a file.")

  public String getFilesize() {
    return filesize;
  }


  public void setFilesize(String filesize) {
    this.filesize = filesize;
  }


  public ShopListingFile sizeBytes(Long sizeBytes) {
    
    this.sizeBytes = sizeBytes;
    return this;
  }

   /**
   * A number indicating the size of a file, measured in bytes.
   * minimum: 0
   * @return sizeBytes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A number indicating the size of a file, measured in bytes.")

  public Long getSizeBytes() {
    return sizeBytes;
  }


  public void setSizeBytes(Long sizeBytes) {
    this.sizeBytes = sizeBytes;
  }


  public ShopListingFile filetype(String filetype) {
    
    this.filetype = filetype;
    return this;
  }

   /**
   * A type string indicating a file&#39;s MIME type.
   * @return filetype
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A type string indicating a file's MIME type.")

  public String getFiletype() {
    return filetype;
  }


  public void setFiletype(String filetype) {
    this.filetype = filetype;
  }


  public ShopListingFile createTimestamp(Long createTimestamp) {
    
    this.createTimestamp = createTimestamp;
    return this;
  }

   /**
   * The unique numeric ID of a file associated with a digital listing.
   * minimum: 946684800
   * @return createTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique numeric ID of a file associated with a digital listing.")

  public Long getCreateTimestamp() {
    return createTimestamp;
  }


  public void setCreateTimestamp(Long createTimestamp) {
    this.createTimestamp = createTimestamp;
  }


  public ShopListingFile createdTimestamp(Long createdTimestamp) {
    
    this.createdTimestamp = createdTimestamp;
    return this;
  }

   /**
   * The unique numeric ID of a file associated with a digital listing.
   * minimum: 946684800
   * @return createdTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The unique numeric ID of a file associated with a digital listing.")

  public Long getCreatedTimestamp() {
    return createdTimestamp;
  }


  public void setCreatedTimestamp(Long createdTimestamp) {
    this.createdTimestamp = createdTimestamp;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShopListingFile shopListingFile = (ShopListingFile) o;
    return Objects.equals(this.listingFileId, shopListingFile.listingFileId) &&
        Objects.equals(this.listingId, shopListingFile.listingId) &&
        Objects.equals(this.rank, shopListingFile.rank) &&
        Objects.equals(this.filename, shopListingFile.filename) &&
        Objects.equals(this.filesize, shopListingFile.filesize) &&
        Objects.equals(this.sizeBytes, shopListingFile.sizeBytes) &&
        Objects.equals(this.filetype, shopListingFile.filetype) &&
        Objects.equals(this.createTimestamp, shopListingFile.createTimestamp) &&
        Objects.equals(this.createdTimestamp, shopListingFile.createdTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(listingFileId, listingId, rank, filename, filesize, sizeBytes, filetype, createTimestamp, createdTimestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShopListingFile {\n");
    sb.append("    listingFileId: ").append(toIndentedString(listingFileId)).append("\n");
    sb.append("    listingId: ").append(toIndentedString(listingId)).append("\n");
    sb.append("    rank: ").append(toIndentedString(rank)).append("\n");
    sb.append("    filename: ").append(toIndentedString(filename)).append("\n");
    sb.append("    filesize: ").append(toIndentedString(filesize)).append("\n");
    sb.append("    sizeBytes: ").append(toIndentedString(sizeBytes)).append("\n");
    sb.append("    filetype: ").append(toIndentedString(filetype)).append("\n");
    sb.append("    createTimestamp: ").append(toIndentedString(createTimestamp)).append("\n");
    sb.append("    createdTimestamp: ").append(toIndentedString(createdTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

