/*
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace <a class=\"wt-text-link wt-p-xs-0\" href=\"https://www.etsy.com/developers/documentation\">Etsy's Open API v2</a>, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/issues/new/choose\">please add an issue in Github</a>.</p></div>&copy; 2021-2022 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.Money;
import org.openapitools.client.model.TransactionVariations;

/**
 * A transaction object associated with a shop receipt. Etsy generates one transaction per listing purchased as recorded on the order receipt.
 */
@ApiModel(description = "A transaction object associated with a shop receipt. Etsy generates one transaction per listing purchased as recorded on the order receipt.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-04-08T15:52:16.342-04:00[America/Toronto]")
public class ShopReceiptTransaction {
  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transaction_id";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private Integer transactionId;

  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_SELLER_USER_ID = "seller_user_id";
  @SerializedName(SERIALIZED_NAME_SELLER_USER_ID)
  private Integer sellerUserId;

  public static final String SERIALIZED_NAME_BUYER_USER_ID = "buyer_user_id";
  @SerializedName(SERIALIZED_NAME_BUYER_USER_ID)
  private Integer buyerUserId;

  public static final String SERIALIZED_NAME_CREATE_TIMESTAMP = "create_timestamp";
  @SerializedName(SERIALIZED_NAME_CREATE_TIMESTAMP)
  private Integer createTimestamp;

  public static final String SERIALIZED_NAME_PAID_TIMESTAMP = "paid_timestamp";
  @SerializedName(SERIALIZED_NAME_PAID_TIMESTAMP)
  private Integer paidTimestamp;

  public static final String SERIALIZED_NAME_SHIPPED_TIMESTAMP = "shipped_timestamp";
  @SerializedName(SERIALIZED_NAME_SHIPPED_TIMESTAMP)
  private Integer shippedTimestamp;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public static final String SERIALIZED_NAME_LISTING_IMAGE_ID = "listing_image_id";
  @SerializedName(SERIALIZED_NAME_LISTING_IMAGE_ID)
  private Integer listingImageId;

  public static final String SERIALIZED_NAME_RECEIPT_ID = "receipt_id";
  @SerializedName(SERIALIZED_NAME_RECEIPT_ID)
  private Integer receiptId;

  public static final String SERIALIZED_NAME_IS_DIGITAL = "is_digital";
  @SerializedName(SERIALIZED_NAME_IS_DIGITAL)
  private Boolean isDigital;

  public static final String SERIALIZED_NAME_FILE_DATA = "file_data";
  @SerializedName(SERIALIZED_NAME_FILE_DATA)
  private String fileData;

  public static final String SERIALIZED_NAME_LISTING_ID = "listing_id";
  @SerializedName(SERIALIZED_NAME_LISTING_ID)
  private Integer listingId;

  public static final String SERIALIZED_NAME_TRANSACTION_TYPE = "transaction_type";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_TYPE)
  private String transactionType;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "product_id";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  private Integer productId;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private Money price;

  public static final String SERIALIZED_NAME_SHIPPING_COST = "shipping_cost";
  @SerializedName(SERIALIZED_NAME_SHIPPING_COST)
  private Money shippingCost;

  public static final String SERIALIZED_NAME_VARIATIONS = "variations";
  @SerializedName(SERIALIZED_NAME_VARIATIONS)
  private List<TransactionVariations> variations = new ArrayList<TransactionVariations>();

  public static final String SERIALIZED_NAME_SHIPPING_PROFILE_ID = "shipping_profile_id";
  @SerializedName(SERIALIZED_NAME_SHIPPING_PROFILE_ID)
  private Integer shippingProfileId;

  public static final String SERIALIZED_NAME_MIN_PROCESSING_DAYS = "min_processing_days";
  @SerializedName(SERIALIZED_NAME_MIN_PROCESSING_DAYS)
  private Integer minProcessingDays;

  public static final String SERIALIZED_NAME_MAX_PROCESSING_DAYS = "max_processing_days";
  @SerializedName(SERIALIZED_NAME_MAX_PROCESSING_DAYS)
  private Integer maxProcessingDays;

  public static final String SERIALIZED_NAME_SHIPPING_METHOD = "shipping_method";
  @SerializedName(SERIALIZED_NAME_SHIPPING_METHOD)
  private String shippingMethod;

  public static final String SERIALIZED_NAME_SHIPPING_UPGRADE = "shipping_upgrade";
  @SerializedName(SERIALIZED_NAME_SHIPPING_UPGRADE)
  private String shippingUpgrade;

  public static final String SERIALIZED_NAME_EXPECTED_SHIP_DATE = "expected_ship_date";
  @SerializedName(SERIALIZED_NAME_EXPECTED_SHIP_DATE)
  private Integer expectedShipDate;

  public ShopReceiptTransaction() { 
  }

  public ShopReceiptTransaction transactionId(Integer transactionId) {
    
    this.transactionId = transactionId;
    return this;
  }

   /**
   * The unique numeric ID for a transaction.
   * minimum: 1
   * @return transactionId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The unique numeric ID for a transaction.")

  public Integer getTransactionId() {
    return transactionId;
  }


  public void setTransactionId(Integer transactionId) {
    this.transactionId = transactionId;
  }


  public ShopReceiptTransaction title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * The title string of the [listing](/documentation/reference#tag/ShopListing) purchased in this transaction.
   * @return title
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The title string of the [listing](/documentation/reference#tag/ShopListing) purchased in this transaction.")

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public ShopReceiptTransaction description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description string of the [listing](/documentation/reference#tag/ShopListing) purchased in this transaction.
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The description string of the [listing](/documentation/reference#tag/ShopListing) purchased in this transaction.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public ShopReceiptTransaction sellerUserId(Integer sellerUserId) {
    
    this.sellerUserId = sellerUserId;
    return this;
  }

   /**
   * The numeric user ID for the seller in this transaction.
   * minimum: 1
   * @return sellerUserId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The numeric user ID for the seller in this transaction.")

  public Integer getSellerUserId() {
    return sellerUserId;
  }


  public void setSellerUserId(Integer sellerUserId) {
    this.sellerUserId = sellerUserId;
  }


  public ShopReceiptTransaction buyerUserId(Integer buyerUserId) {
    
    this.buyerUserId = buyerUserId;
    return this;
  }

   /**
   * The numeric user ID for the buyer in this transaction.
   * minimum: 1
   * @return buyerUserId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The numeric user ID for the buyer in this transaction.")

  public Integer getBuyerUserId() {
    return buyerUserId;
  }


  public void setBuyerUserId(Integer buyerUserId) {
    this.buyerUserId = buyerUserId;
  }


  public ShopReceiptTransaction createTimestamp(Integer createTimestamp) {
    
    this.createTimestamp = createTimestamp;
    return this;
  }

   /**
   * The transaction\\&#39;s creation date and time, in epoch seconds.
   * minimum: 946684800
   * @return createTimestamp
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The transaction\\'s creation date and time, in epoch seconds.")

  public Integer getCreateTimestamp() {
    return createTimestamp;
  }


  public void setCreateTimestamp(Integer createTimestamp) {
    this.createTimestamp = createTimestamp;
  }


  public ShopReceiptTransaction paidTimestamp(Integer paidTimestamp) {
    
    this.paidTimestamp = paidTimestamp;
    return this;
  }

   /**
   * The transaction\\&#39;s paid date and time, in epoch seconds.
   * minimum: 946684800
   * @return paidTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The transaction\\'s paid date and time, in epoch seconds.")

  public Integer getPaidTimestamp() {
    return paidTimestamp;
  }


  public void setPaidTimestamp(Integer paidTimestamp) {
    this.paidTimestamp = paidTimestamp;
  }


  public ShopReceiptTransaction shippedTimestamp(Integer shippedTimestamp) {
    
    this.shippedTimestamp = shippedTimestamp;
    return this;
  }

   /**
   * The transaction\\&#39;s shipping date and time, in epoch seconds.
   * minimum: 946684800
   * @return shippedTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The transaction\\'s shipping date and time, in epoch seconds.")

  public Integer getShippedTimestamp() {
    return shippedTimestamp;
  }


  public void setShippedTimestamp(Integer shippedTimestamp) {
    this.shippedTimestamp = shippedTimestamp;
  }


  public ShopReceiptTransaction quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * The numeric quantity of products purchased in this transaction.
   * minimum: 0
   * @return quantity
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The numeric quantity of products purchased in this transaction.")

  public Integer getQuantity() {
    return quantity;
  }


  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public ShopReceiptTransaction listingImageId(Integer listingImageId) {
    
    this.listingImageId = listingImageId;
    return this;
  }

   /**
   * The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image) for this transaction.
   * minimum: 1
   * @return listingImageId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The numeric ID of the primary [listing image](/documentation/reference#tag/ShopListing-Image) for this transaction.")

  public Integer getListingImageId() {
    return listingImageId;
  }


  public void setListingImageId(Integer listingImageId) {
    this.listingImageId = listingImageId;
  }


  public ShopReceiptTransaction receiptId(Integer receiptId) {
    
    this.receiptId = receiptId;
    return this;
  }

   /**
   * The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt) associated to this transaction.
   * minimum: 1
   * @return receiptId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The numeric ID for the [receipt](/documentation/reference#tag/Shop-Receipt) associated to this transaction.")

  public Integer getReceiptId() {
    return receiptId;
  }


  public void setReceiptId(Integer receiptId) {
    this.receiptId = receiptId;
  }


  public ShopReceiptTransaction isDigital(Boolean isDigital) {
    
    this.isDigital = isDigital;
    return this;
  }

   /**
   * When true, the transaction recorded the purchase of a digital listing.
   * @return isDigital
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "When true, the transaction recorded the purchase of a digital listing.")

  public Boolean getIsDigital() {
    return isDigital;
  }


  public void setIsDigital(Boolean isDigital) {
    this.isDigital = isDigital;
  }


  public ShopReceiptTransaction fileData(String fileData) {
    
    this.fileData = fileData;
    return this;
  }

   /**
   * A string describing the files purchased in this transaction.
   * @return fileData
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A string describing the files purchased in this transaction.")

  public String getFileData() {
    return fileData;
  }


  public void setFileData(String fileData) {
    this.fileData = fileData;
  }


  public ShopReceiptTransaction listingId(Integer listingId) {
    
    this.listingId = listingId;
    return this;
  }

   /**
   * The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.
   * minimum: 0
   * @return listingId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The numeric ID for the [listing](/documentation/reference#tag/ShopListing) associated to this transaction.")

  public Integer getListingId() {
    return listingId;
  }


  public void setListingId(Integer listingId) {
    this.listingId = listingId;
  }


  public ShopReceiptTransaction transactionType(String transactionType) {
    
    this.transactionType = transactionType;
    return this;
  }

   /**
   * The type string for the transaction, usually \&quot;listing\&quot;
   * @return transactionType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "The type string for the transaction, usually \"listing\"")

  public String getTransactionType() {
    return transactionType;
  }


  public void setTransactionType(String transactionType) {
    this.transactionType = transactionType;
  }


  public ShopReceiptTransaction productId(Integer productId) {
    
    this.productId = productId;
    return this;
  }

   /**
   * The numeric ID for a specific [product](/documentation/reference#tag/ShopListing-Product) purchased from a listing.
   * minimum: 1
   * @return productId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The numeric ID for a specific [product](/documentation/reference#tag/ShopListing-Product) purchased from a listing.")

  public Integer getProductId() {
    return productId;
  }


  public void setProductId(Integer productId) {
    this.productId = productId;
  }


  public ShopReceiptTransaction sku(String sku) {
    
    this.sku = sku;
    return this;
  }

   /**
   * The SKU string for the product
   * @return sku
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The SKU string for the product")

  public String getSku() {
    return sku;
  }


  public void setSku(String sku) {
    this.sku = sku;
  }


  public ShopReceiptTransaction price(Money price) {
    
    this.price = price;
    return this;
  }

   /**
   * A money object representing the price recorded the transaction.
   * @return price
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "A money object representing the price recorded the transaction.")

  public Money getPrice() {
    return price;
  }


  public void setPrice(Money price) {
    this.price = price;
  }


  public ShopReceiptTransaction shippingCost(Money shippingCost) {
    
    this.shippingCost = shippingCost;
    return this;
  }

   /**
   * A money object representing the shipping cost for this transaction.
   * @return shippingCost
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "A money object representing the shipping cost for this transaction.")

  public Money getShippingCost() {
    return shippingCost;
  }


  public void setShippingCost(Money shippingCost) {
    this.shippingCost = shippingCost;
  }


  public ShopReceiptTransaction variations(List<TransactionVariations> variations) {
    
    this.variations = variations;
    return this;
  }

  public ShopReceiptTransaction addVariationsItem(TransactionVariations variationsItem) {
    this.variations.add(variationsItem);
    return this;
  }

   /**
   * Array of variations and personalizations the buyer chose.
   * @return variations
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Array of variations and personalizations the buyer chose.")

  public List<TransactionVariations> getVariations() {
    return variations;
  }


  public void setVariations(List<TransactionVariations> variations) {
    this.variations = variations;
  }


  public ShopReceiptTransaction shippingProfileId(Integer shippingProfileId) {
    
    this.shippingProfileId = shippingProfileId;
    return this;
  }

   /**
   * The ID of the shipping profile selected for this listing.
   * minimum: 1
   * @return shippingProfileId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The ID of the shipping profile selected for this listing.")

  public Integer getShippingProfileId() {
    return shippingProfileId;
  }


  public void setShippingProfileId(Integer shippingProfileId) {
    this.shippingProfileId = shippingProfileId;
  }


  public ShopReceiptTransaction minProcessingDays(Integer minProcessingDays) {
    
    this.minProcessingDays = minProcessingDays;
    return this;
  }

   /**
   * The minimum number of days for processing the listing.
   * minimum: 1
   * @return minProcessingDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The minimum number of days for processing the listing.")

  public Integer getMinProcessingDays() {
    return minProcessingDays;
  }


  public void setMinProcessingDays(Integer minProcessingDays) {
    this.minProcessingDays = minProcessingDays;
  }


  public ShopReceiptTransaction maxProcessingDays(Integer maxProcessingDays) {
    
    this.maxProcessingDays = maxProcessingDays;
    return this;
  }

   /**
   * The maximum number of days for processing the listing.
   * minimum: 1
   * @return maxProcessingDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The maximum number of days for processing the listing.")

  public Integer getMaxProcessingDays() {
    return maxProcessingDays;
  }


  public void setMaxProcessingDays(Integer maxProcessingDays) {
    this.maxProcessingDays = maxProcessingDays;
  }


  public ShopReceiptTransaction shippingMethod(String shippingMethod) {
    
    this.shippingMethod = shippingMethod;
    return this;
  }

   /**
   * Name of the selected shipping method.
   * @return shippingMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "Name of the selected shipping method.")

  public String getShippingMethod() {
    return shippingMethod;
  }


  public void setShippingMethod(String shippingMethod) {
    this.shippingMethod = shippingMethod;
  }


  public ShopReceiptTransaction shippingUpgrade(String shippingUpgrade) {
    
    this.shippingUpgrade = shippingUpgrade;
    return this;
  }

   /**
   * The name of the shipping upgrade selected for this listing. Default value is null.
   * @return shippingUpgrade
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The name of the shipping upgrade selected for this listing. Default value is null.")

  public String getShippingUpgrade() {
    return shippingUpgrade;
  }


  public void setShippingUpgrade(String shippingUpgrade) {
    this.shippingUpgrade = shippingUpgrade;
  }


  public ShopReceiptTransaction expectedShipDate(Integer expectedShipDate) {
    
    this.expectedShipDate = expectedShipDate;
    return this;
  }

   /**
   * The date &amp; time of the expected ship date, in epoch seconds.
   * minimum: 946684800
   * @return expectedShipDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "The date & time of the expected ship date, in epoch seconds.")

  public Integer getExpectedShipDate() {
    return expectedShipDate;
  }


  public void setExpectedShipDate(Integer expectedShipDate) {
    this.expectedShipDate = expectedShipDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShopReceiptTransaction shopReceiptTransaction = (ShopReceiptTransaction) o;
    return Objects.equals(this.transactionId, shopReceiptTransaction.transactionId) &&
        Objects.equals(this.title, shopReceiptTransaction.title) &&
        Objects.equals(this.description, shopReceiptTransaction.description) &&
        Objects.equals(this.sellerUserId, shopReceiptTransaction.sellerUserId) &&
        Objects.equals(this.buyerUserId, shopReceiptTransaction.buyerUserId) &&
        Objects.equals(this.createTimestamp, shopReceiptTransaction.createTimestamp) &&
        Objects.equals(this.paidTimestamp, shopReceiptTransaction.paidTimestamp) &&
        Objects.equals(this.shippedTimestamp, shopReceiptTransaction.shippedTimestamp) &&
        Objects.equals(this.quantity, shopReceiptTransaction.quantity) &&
        Objects.equals(this.listingImageId, shopReceiptTransaction.listingImageId) &&
        Objects.equals(this.receiptId, shopReceiptTransaction.receiptId) &&
        Objects.equals(this.isDigital, shopReceiptTransaction.isDigital) &&
        Objects.equals(this.fileData, shopReceiptTransaction.fileData) &&
        Objects.equals(this.listingId, shopReceiptTransaction.listingId) &&
        Objects.equals(this.transactionType, shopReceiptTransaction.transactionType) &&
        Objects.equals(this.productId, shopReceiptTransaction.productId) &&
        Objects.equals(this.sku, shopReceiptTransaction.sku) &&
        Objects.equals(this.price, shopReceiptTransaction.price) &&
        Objects.equals(this.shippingCost, shopReceiptTransaction.shippingCost) &&
        Objects.equals(this.variations, shopReceiptTransaction.variations) &&
        Objects.equals(this.shippingProfileId, shopReceiptTransaction.shippingProfileId) &&
        Objects.equals(this.minProcessingDays, shopReceiptTransaction.minProcessingDays) &&
        Objects.equals(this.maxProcessingDays, shopReceiptTransaction.maxProcessingDays) &&
        Objects.equals(this.shippingMethod, shopReceiptTransaction.shippingMethod) &&
        Objects.equals(this.shippingUpgrade, shopReceiptTransaction.shippingUpgrade) &&
        Objects.equals(this.expectedShipDate, shopReceiptTransaction.expectedShipDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionId, title, description, sellerUserId, buyerUserId, createTimestamp, paidTimestamp, shippedTimestamp, quantity, listingImageId, receiptId, isDigital, fileData, listingId, transactionType, productId, sku, price, shippingCost, variations, shippingProfileId, minProcessingDays, maxProcessingDays, shippingMethod, shippingUpgrade, expectedShipDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShopReceiptTransaction {\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    sellerUserId: ").append(toIndentedString(sellerUserId)).append("\n");
    sb.append("    buyerUserId: ").append(toIndentedString(buyerUserId)).append("\n");
    sb.append("    createTimestamp: ").append(toIndentedString(createTimestamp)).append("\n");
    sb.append("    paidTimestamp: ").append(toIndentedString(paidTimestamp)).append("\n");
    sb.append("    shippedTimestamp: ").append(toIndentedString(shippedTimestamp)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    listingImageId: ").append(toIndentedString(listingImageId)).append("\n");
    sb.append("    receiptId: ").append(toIndentedString(receiptId)).append("\n");
    sb.append("    isDigital: ").append(toIndentedString(isDigital)).append("\n");
    sb.append("    fileData: ").append(toIndentedString(fileData)).append("\n");
    sb.append("    listingId: ").append(toIndentedString(listingId)).append("\n");
    sb.append("    transactionType: ").append(toIndentedString(transactionType)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    shippingCost: ").append(toIndentedString(shippingCost)).append("\n");
    sb.append("    variations: ").append(toIndentedString(variations)).append("\n");
    sb.append("    shippingProfileId: ").append(toIndentedString(shippingProfileId)).append("\n");
    sb.append("    minProcessingDays: ").append(toIndentedString(minProcessingDays)).append("\n");
    sb.append("    maxProcessingDays: ").append(toIndentedString(maxProcessingDays)).append("\n");
    sb.append("    shippingMethod: ").append(toIndentedString(shippingMethod)).append("\n");
    sb.append("    shippingUpgrade: ").append(toIndentedString(shippingUpgrade)).append("\n");
    sb.append("    expectedShipDate: ").append(toIndentedString(expectedShipDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

