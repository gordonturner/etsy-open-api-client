/*
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace <a class=\"wt-text-link wt-p-xs-0\" href=\"https://www.etsy.com/developers/documentation\">Etsy's Open API v2</a>, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/issues/new/choose\">please add an issue in Github</a>.</p></div>&copy; 2021-2022 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.Money;
import org.openapitools.client.model.PaymentAdjustment;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for Payment
 */
public class PaymentTest {
    private final Payment model = new Payment();

    /**
     * Model tests for Payment
     */
    @Test
    public void testPayment() {
        // TODO: test Payment
    }

    /**
     * Test the property 'paymentId'
     */
    @Test
    public void paymentIdTest() {
        // TODO: test paymentId
    }

    /**
     * Test the property 'buyerUserId'
     */
    @Test
    public void buyerUserIdTest() {
        // TODO: test buyerUserId
    }

    /**
     * Test the property 'shopId'
     */
    @Test
    public void shopIdTest() {
        // TODO: test shopId
    }

    /**
     * Test the property 'receiptId'
     */
    @Test
    public void receiptIdTest() {
        // TODO: test receiptId
    }

    /**
     * Test the property 'amountGross'
     */
    @Test
    public void amountGrossTest() {
        // TODO: test amountGross
    }

    /**
     * Test the property 'amountFees'
     */
    @Test
    public void amountFeesTest() {
        // TODO: test amountFees
    }

    /**
     * Test the property 'amountNet'
     */
    @Test
    public void amountNetTest() {
        // TODO: test amountNet
    }

    /**
     * Test the property 'postedGross'
     */
    @Test
    public void postedGrossTest() {
        // TODO: test postedGross
    }

    /**
     * Test the property 'postedFees'
     */
    @Test
    public void postedFeesTest() {
        // TODO: test postedFees
    }

    /**
     * Test the property 'postedNet'
     */
    @Test
    public void postedNetTest() {
        // TODO: test postedNet
    }

    /**
     * Test the property 'adjustedGross'
     */
    @Test
    public void adjustedGrossTest() {
        // TODO: test adjustedGross
    }

    /**
     * Test the property 'adjustedFees'
     */
    @Test
    public void adjustedFeesTest() {
        // TODO: test adjustedFees
    }

    /**
     * Test the property 'adjustedNet'
     */
    @Test
    public void adjustedNetTest() {
        // TODO: test adjustedNet
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'shopCurrency'
     */
    @Test
    public void shopCurrencyTest() {
        // TODO: test shopCurrency
    }

    /**
     * Test the property 'buyerCurrency'
     */
    @Test
    public void buyerCurrencyTest() {
        // TODO: test buyerCurrency
    }

    /**
     * Test the property 'shippingUserId'
     */
    @Test
    public void shippingUserIdTest() {
        // TODO: test shippingUserId
    }

    /**
     * Test the property 'shippingAddressId'
     */
    @Test
    public void shippingAddressIdTest() {
        // TODO: test shippingAddressId
    }

    /**
     * Test the property 'billingAddressId'
     */
    @Test
    public void billingAddressIdTest() {
        // TODO: test billingAddressId
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'shippedTimestamp'
     */
    @Test
    public void shippedTimestampTest() {
        // TODO: test shippedTimestamp
    }

    /**
     * Test the property 'createTimestamp'
     */
    @Test
    public void createTimestampTest() {
        // TODO: test createTimestamp
    }

    /**
     * Test the property 'updateTimestamp'
     */
    @Test
    public void updateTimestampTest() {
        // TODO: test updateTimestamp
    }

    /**
     * Test the property 'paymentAdjustments'
     */
    @Test
    public void paymentAdjustmentsTest() {
        // TODO: test paymentAdjustments
    }

}
