/*
 * Etsy Open API v3
 * <div class=\"wt-text-body-01\"><p class=\"wt-pt-xs-2 wt-pb-xs-2\">Etsy's Open API provides a simple RESTful interface for various Etsy.com features. The API endpoints are meant to replace <a class=\"wt-text-link wt-p-xs-0\" href=\"https://www.etsy.com/developers/documentation\">Etsy's Open API v2</a>, which is scheduled to end service in 2022.</p><p class=\"wt-pb-xs-2\">All of the endpoints are callable and the majority of the API endpoints are now in a beta phase. This means we do not expect to make any breaking changes before our general release. A handful of endpoints are currently interface stubs (labeled “Feedback Only”) and returns a \"501 Not Implemented\" response code when called.</p><p class=\"wt-pb-xs-2\">If you'd like to report an issue or provide feedback on the API design, <a target=\"_blank\" class=\"wt-text-link wt-p-xs-0\" href=\"https://github.com/etsy/open-api/issues/new/choose\">please add an issue in Github</a>.</p></div>&copy; 2021-2022 Etsy, Inc. All Rights Reserved. Use of this code is subject to Etsy's <a class='wt-text-link wt-p-xs-0' target='_blank' href='https://www.etsy.com/legal/api'>API Developer Terms of Use</a>.
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: developers@etsy.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ListingImage;
import org.openapitools.client.model.ListingTranslation;
import org.openapitools.client.model.Money;
import org.openapitools.client.model.Shop;
import org.openapitools.client.model.ShopProductionPartner;
import org.openapitools.client.model.ShopShippingProfile;
import org.openapitools.client.model.User;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ShopListingWithAssociations
 */
public class ShopListingWithAssociationsTest {
    private final ShopListingWithAssociations model = new ShopListingWithAssociations();

    /**
     * Model tests for ShopListingWithAssociations
     */
    @Test
    public void testShopListingWithAssociations() {
        // TODO: test ShopListingWithAssociations
    }

    /**
     * Test the property 'listingId'
     */
    @Test
    public void listingIdTest() {
        // TODO: test listingId
    }

    /**
     * Test the property 'userId'
     */
    @Test
    public void userIdTest() {
        // TODO: test userId
    }

    /**
     * Test the property 'shopId'
     */
    @Test
    public void shopIdTest() {
        // TODO: test shopId
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'creationTimestamp'
     */
    @Test
    public void creationTimestampTest() {
        // TODO: test creationTimestamp
    }

    /**
     * Test the property 'endingTimestamp'
     */
    @Test
    public void endingTimestampTest() {
        // TODO: test endingTimestamp
    }

    /**
     * Test the property 'originalCreationTimestamp'
     */
    @Test
    public void originalCreationTimestampTest() {
        // TODO: test originalCreationTimestamp
    }

    /**
     * Test the property 'lastModifiedTimestamp'
     */
    @Test
    public void lastModifiedTimestampTest() {
        // TODO: test lastModifiedTimestamp
    }

    /**
     * Test the property 'stateTimestamp'
     */
    @Test
    public void stateTimestampTest() {
        // TODO: test stateTimestamp
    }

    /**
     * Test the property 'quantity'
     */
    @Test
    public void quantityTest() {
        // TODO: test quantity
    }

    /**
     * Test the property 'shopSectionId'
     */
    @Test
    public void shopSectionIdTest() {
        // TODO: test shopSectionId
    }

    /**
     * Test the property 'featuredRank'
     */
    @Test
    public void featuredRankTest() {
        // TODO: test featuredRank
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'numFavorers'
     */
    @Test
    public void numFavorersTest() {
        // TODO: test numFavorers
    }

    /**
     * Test the property 'nonTaxable'
     */
    @Test
    public void nonTaxableTest() {
        // TODO: test nonTaxable
    }

    /**
     * Test the property 'isCustomizable'
     */
    @Test
    public void isCustomizableTest() {
        // TODO: test isCustomizable
    }

    /**
     * Test the property 'isPersonalizable'
     */
    @Test
    public void isPersonalizableTest() {
        // TODO: test isPersonalizable
    }

    /**
     * Test the property 'personalizationIsRequired'
     */
    @Test
    public void personalizationIsRequiredTest() {
        // TODO: test personalizationIsRequired
    }

    /**
     * Test the property 'personalizationCharCountMax'
     */
    @Test
    public void personalizationCharCountMaxTest() {
        // TODO: test personalizationCharCountMax
    }

    /**
     * Test the property 'personalizationInstructions'
     */
    @Test
    public void personalizationInstructionsTest() {
        // TODO: test personalizationInstructions
    }

    /**
     * Test the property 'listingType'
     */
    @Test
    public void listingTypeTest() {
        // TODO: test listingType
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'materials'
     */
    @Test
    public void materialsTest() {
        // TODO: test materials
    }

    /**
     * Test the property 'shippingProfileId'
     */
    @Test
    public void shippingProfileIdTest() {
        // TODO: test shippingProfileId
    }

    /**
     * Test the property 'processingMin'
     */
    @Test
    public void processingMinTest() {
        // TODO: test processingMin
    }

    /**
     * Test the property 'processingMax'
     */
    @Test
    public void processingMaxTest() {
        // TODO: test processingMax
    }

    /**
     * Test the property 'whoMade'
     */
    @Test
    public void whoMadeTest() {
        // TODO: test whoMade
    }

    /**
     * Test the property 'whenMade'
     */
    @Test
    public void whenMadeTest() {
        // TODO: test whenMade
    }

    /**
     * Test the property 'isSupply'
     */
    @Test
    public void isSupplyTest() {
        // TODO: test isSupply
    }

    /**
     * Test the property 'itemWeight'
     */
    @Test
    public void itemWeightTest() {
        // TODO: test itemWeight
    }

    /**
     * Test the property 'itemWeightUnit'
     */
    @Test
    public void itemWeightUnitTest() {
        // TODO: test itemWeightUnit
    }

    /**
     * Test the property 'itemLength'
     */
    @Test
    public void itemLengthTest() {
        // TODO: test itemLength
    }

    /**
     * Test the property 'itemWidth'
     */
    @Test
    public void itemWidthTest() {
        // TODO: test itemWidth
    }

    /**
     * Test the property 'itemHeight'
     */
    @Test
    public void itemHeightTest() {
        // TODO: test itemHeight
    }

    /**
     * Test the property 'itemDimensionsUnit'
     */
    @Test
    public void itemDimensionsUnitTest() {
        // TODO: test itemDimensionsUnit
    }

    /**
     * Test the property 'isPrivate'
     */
    @Test
    public void isPrivateTest() {
        // TODO: test isPrivate
    }

    /**
     * Test the property 'style'
     */
    @Test
    public void styleTest() {
        // TODO: test style
    }

    /**
     * Test the property 'fileData'
     */
    @Test
    public void fileDataTest() {
        // TODO: test fileData
    }

    /**
     * Test the property 'hasVariations'
     */
    @Test
    public void hasVariationsTest() {
        // TODO: test hasVariations
    }

    /**
     * Test the property 'shouldAutoRenew'
     */
    @Test
    public void shouldAutoRenewTest() {
        // TODO: test shouldAutoRenew
    }

    /**
     * Test the property 'language'
     */
    @Test
    public void languageTest() {
        // TODO: test language
    }

    /**
     * Test the property 'price'
     */
    @Test
    public void priceTest() {
        // TODO: test price
    }

    /**
     * Test the property 'taxonomyId'
     */
    @Test
    public void taxonomyIdTest() {
        // TODO: test taxonomyId
    }

    /**
     * Test the property 'shippingProfile'
     */
    @Test
    public void shippingProfileTest() {
        // TODO: test shippingProfile
    }

    /**
     * Test the property 'user'
     */
    @Test
    public void userTest() {
        // TODO: test user
    }

    /**
     * Test the property 'shop'
     */
    @Test
    public void shopTest() {
        // TODO: test shop
    }

    /**
     * Test the property 'images'
     */
    @Test
    public void imagesTest() {
        // TODO: test images
    }

    /**
     * Test the property 'productionPartners'
     */
    @Test
    public void productionPartnersTest() {
        // TODO: test productionPartners
    }

    /**
     * Test the property 'skus'
     */
    @Test
    public void skusTest() {
        // TODO: test skus
    }

    /**
     * Test the property 'translations'
     */
    @Test
    public void translationsTest() {
        // TODO: test translations
    }

}
